{"version":3,"sources":["utils/history.js","utils/index.js","config/Roles.js","components/Admin/ProgressCard.js","components/Admin/ScheduleCard.js","config/config.js","components/Admin/PreviewMap.js","services/_helpers/authheader.js","services/dashBoard.js","pages/Admin/Dashboard.js","services/visitingplaceService.js","components/Admin/Map.js","utils/Validation2.js","components/Admin/VisitingPlacePreview.js","components/Admin/VisitingPlaceCard.js","components/Admin/SearchBar.js","pages/Admin/VisitingPlaces.js","components/Admin/TouristsTable.js","services/touristService.js","pages/Admin/Tourists.js","components/Admin/AssistentPreview.js","components/Admin/AssistantCard.js","components/Forms/AddAssistantForm.js","services/assistantService.js","pages/Admin/Assistents.js","components/Assistant/MenuPreviewCard.js","pages/Assistant/AssistantDashboard.js","utils/validation.js","components/Forms/AddTouristsForm.js","components/Assistant/EditTourist.js","components/Assistant/TouristsCard.js","components/Assistant/SearchBar.js","pages/Assistant/TouristsManager.js","components/Assistant/ScheduleCard.js","pages/Assistant/ScheduleManager.js","services/scheduleService.js","components/Tourist/ScheduleCard.js","pages/Tourist/Dashboard.js","components/Tourist/PreviewMap.js","components/Forms/AddScheduleForm.js","components/Tourist/AddToScheduleArea.js","components/Tourist/VisitingPlacePreview.js","components/Tourist/VisitingPlaceCard.js","components/Tourist/SearchBar.js","pages/Tourist/VisitingPlaces.js","config/PrivateRoutesConfig.js","components/common/hoc/CenterToScreen.js","components/common/JumbotronWrapper.js","components/common/TopNav.js","components/common/NotFound.js","routes/MapAllowedRoutes.js","routes/PrivateRoutes.js","pages/LandingPage.js","services/authenticationService.js","components/Forms/LoginForm.js","pages/LoginPage.js","routes/PublicRoutes.js","routes/Auth.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["createBrowserHistory","isLoggedIn","localStorage","getItem","getUserId","token","jwt_decode","_id","getAllowedRoutes","routes","role","filter","arr","permission","Array","isArray","length","intersection","ProgressCard","props","useColorMode","colorMode","toggleColorMode","width","borderWidth","borderRadius","overflow","p","mb","boxShadow","bg","colour","color","fontSize","ml","currentvalue","Heading","ScheduleCard","path","i","push","variant","colorScheme","direction","base","md","place","state","h","stateBadge","columns","spacing","size","name","src","mr","user","fair","mt","travelmethod","date","config","MAPBOX_ACCESSTOKEN","apiUrl","PreviewMap","markers","place_locations","names","place_names","console","log","React","useState","latitude","longitude","zoom","pitch","bearing","viewport","setViewport","mapboxApiAccessToken","height","onViewportChange","map","m","key","viewBox","style","cursor","fill","stroke","transform","d","position","top","left","padding","bottom","authHeader","Authorization","dashboardService","data","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","ok","error","Error","status","statusText","json","success","dashboardValues","catch","AdminDashboard","dashboard","setDashboard","setErrors","places","setPlaces","setPlacenames","fetchData","a","result","useEffect","w","pb","as","minChildWidth","maxvalue","users_count","tourist_count_total","tourist_count_in","place_count","schedules_count_total","visitingPlaceService","visitingPlaces","body","JSON","stringify","id","visitingPlace","Map","setMarkers","onClick","lngLat","onClickonMap","ValidateEmail","mail","validation","setValidation","order","val","errorMessage","test","isRequired","value","placeholder","isNumeric","Number","VisitingPlacePreview","setData","hasError","editMode","setEditMode","distance","setDistance","timeToReach","timetoreach","setTimetoreach","tmethods","setTmethods","handleCheckBoxChange","includes","index","indexOf","splice","methods","concat","handleSubmit","event","preventDefault","placeName","description","isRequiredArr","dataToSend","location","coordinates","images","raw","text","close","e","handleChange","target","handleClickonMap","border","borderColor","action","textAlign","pt","type","aria-label","onChange","isInvalid","errorBorderColor","shadow","imageUrl","alt","rounded","step","defaultValue","min","max","precision","valueString","px","VisitingPlaceCard","useDisclosure","isOpen","onOpen","onClose","templateColumns","templateRows","gap","colSpan","rowSpan","alignItems","fontWeight","lineHeight","isTruncated","rightIcon","ArrowForward","defaultProps","SearchBar","icon","Search","VisitingPlaces","setVisitingPlaces","search","setSearch","searchData","quary","right","zIndex","leftIcon","Add","ReactRouterLink","to","similarTo","travellingMethods","TouristsTable","tourists","tourist","rating","firstname","lastname","_","Star","touristService","Tourists","setTourists","AssistantPreview","show","setShow","validateBeforeSubmit","email","ImgUpload","htmlFor","className","for","pr","AssistantCard","imageAlt","boxSize","AddAssistantForm","onSuccess","addedAssistant","setAddedAssistant","password","showResult","isCentered","CheckCircle","Question","assistantService","assistants","employees","searchKey","AddAssistantArea","onAssistantAdded","closeOnOverlayClick","motionPreset","closeOnEsc","Assistents","setAssistants","assistant","PreviewCard","linkTo","ReachLink","maxW","_hover","bgGradient","objectFit","letterSpacing","textTransform","title","in","AssistantDashboard","justify","AddTouristForm","addedTourist","setAddedTourist","first_name","last_name","phone","addTourist","mobile","onSubmit","roomType","roomNumber","pointerEvents","children","EditTourist","rooms","isFetching","roomData","touristName","onUpdate","roomTypeId","TouristCard","Edit","Delete","onDelete","TouristsManager","ScheduleManager","scheduleService","schedules","travellingMethod","my","split","AlertBox","flexDirection","justifyContent","py","maxWidth","TouristDashboard","mySchedules","setmySchedules","schedule","AddScheduleForm","time","submitResult","setSubmitResult","AddToScheduleArea","component","exact","Roles","CenterToScreen","Component","JumbotronWrapper","Col","col","Jumbotron","memo","TopNav","history","useHistory","isInline","align","divider","fontFamily","sm","display","prefix","removeItem","LogoName","NotFound","jumbotronProps","MapAllowedRoutes","basePath","isAddNotFound","match","useRouteMatch","route","rest","PrivateRoutes","allowedRoutes","PrivateRoutesConfig","LandingPage","subtitle1","subtitle2","offsetY","opacity","authenticationService","creds","username","setItem","LoginForm","handleLoginSuccess","setHasError","Email","Lock","LoginPage","PublicRoutes","Auth","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEeA,cAAqB,I,iBCC7B,SAASC,IACf,QAASC,aAAaC,QAAQ,SASxB,SAASC,IACf,IAAMC,EAAQH,aAAaC,QAAQ,SAEnC,OADgBG,YAAWD,GACfE,IAON,SAASC,EAAiBC,GAChC,IAAMJ,EAAQH,aAAaC,QAAQ,SAE7BO,EAAO,CADGJ,YAAWD,GACRK,MACnB,OAAOD,EAAOE,QAAO,YAAqB,IARTC,EAQTC,EAAiB,EAAjBA,WACvB,OAAIA,IAT4BD,EAULC,GATpBC,MAAMC,QAAQH,KAAQA,EAAII,QAUrBC,uBAAaJ,EAAYH,GAAMM,WC9B9B,MACD,cADC,EAEP,QAFO,EAGH,YAHG,EAIJ,O,sGCoBIE,MApBf,SAAsBC,GAAQ,IAAD,EACcC,cAA/BC,EADiB,EACjBA,UACR,OAFyB,EACNC,gBAEf,eAAC,IAAD,CAAKC,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,MAAMC,GAAG,OAAOC,UAAU,KAChGC,GAAI,UAA2BX,EAAMY,OAAnB,UAAdV,EAAA,eADR,UAII,cAAC,IAAD,CAAMW,MAAM,QAAQC,SAAS,MAAMC,GAAG,OAAtC,SACKf,EAAMgB,eAGX,cAAC,IAAD,CAAMH,MAAM,QAAQC,SAAS,MAAMC,GAAG,OAAtC,SACKf,EAAMiB,c,2BCyFRC,MArGf,SAAsBlB,GAElB,IADA,IAAImB,EAAO,GACFC,EAAI,EAAGA,EAAIpB,EAAMmB,KAAKtB,OAAQuB,IACnCD,EAAKE,KACD,mCACI,cAAC,IAAD,CAAOC,QAAQ,UAAUC,YAAY,OAArC,SACKvB,EAAMmB,KAAKC,QA4B5B,OACI,eAAC,IAAD,CAAKhB,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,OAAOC,GAAG,OAAQC,UAAU,KAAtG,UACI,eAAC,IAAD,CAAOc,UAAW,CAACC,KAAK,SAAUC,GAAG,OAAQjB,GAAG,OAAhD,UACI,cAAC,IAAD,CAAOa,QAAQ,QAAQC,YAAY,SAAST,SAAS,OAArD,SACKd,EAAM2B,QAvBN,SAACC,GACd,IAAIf,EAAQ,GAUZ,MATc,cAAVe,EACAf,EAAQ,QAEO,kBAAVe,EACLf,EAAQ,SAEO,cAAVe,IACLf,EAAQ,OAGR,cAAC,IAAD,CAAOS,QAAQ,SAASO,EAAE,OAAON,YAAaV,EAA9C,SACKe,IAYAE,CAAW9B,EAAM4B,UAKtB,eAAC,IAAD,CAAYG,QAAS,EAAGC,QAAQ,MAAhC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMlB,SAAS,KAAf,2BACA,eAAC,IAAD,CAAMA,SAAS,KAAf,UAAoB,cAAC,IAAD,CAChBmB,KAAK,KACLC,KAAK,OACLC,IAAI,aACJC,GAAG,QACJpC,EAAMqC,WAEb,eAAC,IAAD,WACI,cAAC,IAAD,CAAMvB,SAAS,KAAf,kBACA,cAAC,IAAD,CAAMA,SAAS,KAAf,SAAqBd,EAAMsC,aAKnC,cAAC,IAAD,IAGA,cAAC,IAAD,CAAMxB,SAAS,KAAKyB,GAAG,OAAvB,kBACA,cAAC,IAAD,CAAOf,UAAW,CAACC,KAAK,SAAUC,GAAG,OAArC,SACKP,IAIL,eAAC,IAAD,CAAYY,QAAS,EAAGC,QAAQ,MAAhC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMlB,SAAS,KAAKyB,GAAG,OAAvB,2BACA,cAAC,IAAD,CAAOjB,QAAQ,UAAUC,YAAY,SAArC,SACKvB,EAAMwC,kBAIf,eAAC,IAAD,WACI,cAAC,IAAD,CAAM1B,SAAS,KAAKyB,GAAG,OAAvB,kBACA,cAAC,IAAD,CAAOjB,QAAQ,UAAUC,YAAY,OAArC,SACKvB,EAAMyC,iB,gBCjFhBC,EALA,CACXC,mBAAoB,mGACpBC,OAAS,yBCgGEC,EAvFI,SAAC7C,GAChB,IAAM8C,EAAQ9C,EAAM+C,gBAEdC,EAAMhD,EAAMiD,YAElBC,QAAQC,IAAIH,GALc,MAMMI,IAAMC,SAAS,CAC3CC,SAAU,SACVC,UAAW,UACXC,KAAM,IACNC,MAAO,GACPC,QAAS,IAXa,mBAMnBC,EANmB,KAMTC,EANS,KAsC1B,OACI,cAAC,IAAD,CAAKlD,UAAU,KAAf,SACI,eAAC,IAAD,yBACImD,qBAAsBnB,EAAOC,mBAC7BvC,MAAO,OACP0D,OAAQ,IACRR,SAAUK,EAASL,SACnBC,UAAWI,EAASJ,UACpBC,KAAMG,EAASH,KACfO,iBAAkB,SAAAJ,GAAQ,OAAIC,EAAYD,KACtCA,GARR,cAUKb,EAAQkB,KAAI,SAACC,EAAG7C,GAAJ,OACL,wBAAC,IAAD,2BAAY6C,GAAZ,IAAeC,IAAK9C,IAChB,qBACI0C,OAhBf,GAiBeK,QAAQ,YACRC,MAAO,CACHC,OAAQ,UACRC,KAAM,OACNC,OAAQ,OACRC,UAAU,aAAD,QAAe,GAAf,eAtB5B,GAsB4B,QAPjB,SAUI,sBAAMC,EA7BxB,8QA+Bc,cAAC,IAAD,CAAM5D,MAAM,SAAZ,mBACImC,EAAM5B,GAAGc,YAMzB,qBAAKkC,MA1DM,CACnBM,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,QAAS,QAsDD,SACI,cAAC,IAAD,MAEJ,qBAAKT,MAtDA,CACbM,SAAU,WACVC,IAAK,GACLC,KAAM,EACNC,QAAS,QAkDD,SACI,cAAC,IAAD,MAEJ,qBAAKT,MAlDS,CACtBM,SAAU,WACVI,OAAQ,GACRF,KAAM,EACNC,QAAS,QA8CD,SACI,cAAC,IAAD,aCxFb,SAASE,IACZ,IAAM7F,EAAQH,aAAaC,QAAQ,SACnC,OAAIE,EACO,CAAE8F,cAAe,gBAAiB9F,MAAM,UAAD,OAAYA,IAEnD,GCHf,IAgDa+F,EAhDQ,SAACC,GAClB,IAAIC,EAAY,IAAIC,QADO,EAEIL,IAAzBC,EAFqB,EAErBA,cAAe9F,EAFM,EAENA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,oBAAqC0C,GAC5CK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACHC,gBAAiBR,EAASQ,gBAC1BD,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,2BACRG,SAAS,OCuCVG,MApEf,WAA2B,IAAD,EACUjD,mBAAS,IADnB,mBACjBkD,EADiB,KACNC,EADM,OAEMnD,oBAAS,GAFf,mBAEPoD,GAFO,aAIIpD,mBAAS,IAJb,mBAIjBqD,EAJiB,KAITC,EAJS,OAKYtD,mBAAS,IALrB,mBAKLuD,GALK,WAOlBC,EAAS,uCAAG,sBAAAC,EAAA,sDAChB7B,IACKU,MAAK,SAACoB,GACCA,EAAOZ,SACTK,EAAaO,EAAOX,iBACpBO,EAAUI,EAAOX,gBAAgBrD,iBACjC6D,EAAcG,EAAOX,gBAAgBnD,cAEnCwD,EAAUM,EAAOf,WARb,2CAAH,qDAkBf,OALAgB,qBAAU,WACRH,MACA,IAIA,mCACE,cAAC,IAAD,CAAQI,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAI0G,GAAG,QAApC,SACE,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACE,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,MAAMlB,GAAG,OAAON,GAAG,OAAzC,uBACA,cAAC,IAAD,CAAS0G,GAAG,KAAKlF,KAAK,KAAKlB,GAAG,OAAON,GAAG,OAAxC,+CACA,cAAC,IAAD,IACA,eAAC,IAAD,CAAY2G,cAAc,QAAQpF,QAAQ,OAAOvB,GAAG,OAAO8B,GAAG,OAA9D,UACE,cAAC,EAAD,CAActB,QAAQ,aAAaoG,SAAS,MAAMrG,aAAcuF,EAAUe,YAAa1G,OAAO,QAC9F,cAAC,EAAD,CAAcK,QAAQ,iBAAiBoG,SAAS,OAAOrG,aAAcuF,EAAUgB,oBAAqB3G,OAAO,WAC3G,cAAC,EAAD,CAAcK,QAAQ,cAAcoG,SAAS,OAAOrG,aAAcuF,EAAUiB,iBAAkB5G,OAAO,UACrG,cAAC,EAAD,CAAcK,QAAQ,kBAAkBoG,SAAS,MAAMrG,aAAcuF,EAAUkB,YAAa7G,OAAO,WACnG,cAAC,EAAD,CAAcK,QAAQ,YAAYoG,SAAS,MAAMrG,aAAcuF,EAAUmB,sBAAwB9G,OAAO,YAG1G,cAAC,IAAD,IACA,cAAC,IAAD,CAASuG,GAAG,KAAKlF,KAAK,KAAKlB,GAAG,OAAON,GAAG,OAAO8B,GAAG,OAAlD,uBACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAY6E,cAAc,QAAQpF,QAAQ,OAAOvB,GAAG,OAAO8B,GAAG,OAA9D,UACE,cAAC,EAAD,CAAcZ,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,kBAC3J,cAAC,EAAD,CAAcQ,MAAM,eAAeU,KAAK,iBAAiBI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,kBAClK,cAAC,EAAD,CAAcQ,MAAM,aAAaU,KAAK,gBAAgBI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,gBAAgBT,KAAM,CAAC,UAAW,aAAc,kBACnK,cAAC,EAAD,CAAcQ,MAAM,YAAYU,KAAK,yBAAyBI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,uBAI3K,cAAC,IAAD,IACA,cAAC,IAAD,CAASgG,GAAG,KAAKlF,KAAK,KAAKlB,GAAG,OAAON,GAAG,OAAO8B,GAAG,OAAlD,6BACA,cAAC,IAAD,UACE,cAAC,EAAD,CAAYQ,gBAAiB2D,EAAQzD,YAAasD,EAAUtD,wB,4ICkP3D0E,GAzSa,WACtB,IAAIxC,EAAY,IAAIC,QADQ,EAEGL,IAAzBC,EAFsB,EAEtBA,cAAe9F,EAFO,EAEPA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,WAA4B0C,GACnCK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACHyB,eAAgBhC,EAASgC,eACzBzB,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,6BACRG,SAAS,OA+PZwB,GAzPmB,SAACzC,GAC7B,IAAIC,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,oBAFK,MAGPN,IAAzBC,EAHgC,EAGhCA,cAAe9F,EAHiB,EAGjBA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACT0C,KAAMC,KAAKC,UAAU7C,GACrBO,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,kBAAmC0C,GAC1CK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACHyB,eAAgBhC,EAASgC,eACzBzB,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,6BACRG,SAAS,OA6MZwB,GA/CgB,SAACK,GAE1B,IAAI7C,EAAY,IAAIC,QAFa,EAGFL,IAAzBC,EAH2B,EAG3BA,cAAe9F,EAHY,EAGZA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,SACRC,QAASL,EACTM,SAAU,UAGdC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,mBAA4BoF,GAAM1C,GAClCK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACH8B,cAAerC,EAASqC,cACxB9B,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAE1C,MADAF,EAAMF,SAAWA,EACXE,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,6BACRG,SAAS,OCvNV+B,GAnFH,SAAClI,GAAW,IAAD,EACWoD,IAAMC,SAAS,IAD1B,mBACZP,EADY,KACHqF,EADG,OAKa/E,IAAMC,SAAS,CAC3CC,SAAU,kBACVC,UAAW,kBACXC,KAAM,EACNC,MAAO,GACPC,QAAS,IAVM,mBAKZC,EALY,KAKFC,EALE,KAqCnB,OACI,eAAC,IAAD,yBACIC,qBAAsBnB,EAAOC,mBAC7BvC,MAAO,OACP0D,OAAQ,IACRR,SAAUK,EAASL,SACnBC,UAAWI,EAASJ,UACpBC,KAAMG,EAASH,KACfO,iBAAkB,SAAAJ,GAAQ,OAAIC,EAAYD,KACtCA,GARR,IASIyE,QA7CY,SAAC,GAAuC,IAAD,gBAApCC,OAAoC,GAA3B9E,EAA2B,KAAhBD,EAAgB,KACvDtD,EAAMsI,aAAa/E,EAAWD,GAC9B6E,GAAW,SAAArF,GAAO,MAAI,CAAC,CAAES,YAAWD,iBAkCpC,UAWKR,EAAQjD,OACHiD,EAAQkB,KAAI,SAACC,EAAG7C,GAAJ,OACV,wBAAC,IAAD,2BAAY6C,GAAZ,IAAeC,IAAK9C,IAChB,qBACI0C,OAjBX,GAkBWK,QAAQ,YACRC,MAAO,CACHC,OAAQ,UACRC,KAAM,OACNC,OAAQ,OACRC,UAAU,aAAD,QAAe,GAAf,eAvBxB,GAuBwB,QAPjB,SAUI,sBAAMC,EA9BpB,8QAmBM,UAaQR,EAAEV,UAbV,aAawBU,EAAEX,cAI5B,KACN,qBAAKc,MAzDU,CACnBM,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,QAAS,QAqDL,SACI,cAAC,IAAD,MAEJ,qBAAKT,MArDI,CACbM,SAAU,WACVC,IAAK,GACLC,KAAM,EACNC,QAAS,QAiDL,SACI,cAAC,IAAD,MAEJ,qBAAKT,MAjDa,CACtBM,SAAU,WACVI,OAAQ,GACRF,KAAM,EACNC,QAAS,QA6CL,SACI,cAAC,IAAD,WCpFT,SAAS0D,GAAcC,EAAMC,EAAYC,EAAeC,GAC3D,IAAMC,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACrB,uEAAuEC,KAAKN,IAC5EI,EAAID,IAAS,EACb7C,EAAM6C,GAAS,GACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAEnD8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,yCACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KAK5C,SAASiD,GAAWC,EAAOP,EAAYC,EAAeC,EAAOM,GAChE,IAAML,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACX,KAAVG,GACAJ,EAAID,IAAS,EACb7C,EAAM6C,GAAS,GACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAG/C8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,SAASM,EACxBP,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KAQhD,SAASoD,GAAUF,EAAOP,EAAYC,EAAeC,EAAOM,GAC/D,IAAML,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACrBM,OAAOH,IACPJ,EAAID,IAAS,EACb7C,EAAM6C,GAAS,GACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAE/C8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,0BAA0BM,EACzCP,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KC8UxCsD,OAzWf,SAA8BpJ,GAAQ,IAAD,EACTqD,mBAASrD,EAAMkF,MADN,mBAC1BA,EAD0B,KACpBmE,EADoB,OAEDhG,oBAAS,GAFR,mBAE1BiG,EAF0B,aAGDjG,oBAAS,IAHR,mBAG1BkG,EAH0B,KAGhBC,EAHgB,OAIPnG,mBAAS,KAJF,mBAI1B2F,EAJ0B,aAKM/I,eAA/BC,EALyB,EAKzBA,UALyB,KAKdC,gBAEakD,mBAAS6B,EAAKuE,WAPb,mBAO1BA,EAP0B,KAOhBC,EAPgB,OAQKrG,mBAAS6B,EAAKyE,aARnB,mBAQ1BC,EAR0B,KAQbC,EARa,OASDxG,mBAAS,IATR,mBAS1ByG,EAT0B,KAShBC,EATgB,OAWG1G,mBAAS,CACzCoF,WAAY,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAChDI,aAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MAbN,mBAW1BJ,EAX0B,KAWdC,EAXc,KAgB3BsB,EAAuB,SAAChB,GAC1B,GAAIc,EAASG,SAASjB,GAAQ,CAC1B,IAAMkB,EAAQJ,EAASK,QAAQnB,GAC3BkB,GAAS,GACTJ,EAASM,OAAOF,EAAO,GAG3BH,EADIM,EAAUP,OAEX,CACH,IAAIO,EAAUP,EAASQ,OAAOtB,GAC9Be,EAAYM,KAuBdE,EAAY,uCAAG,WAAOC,GAAP,qBAAA1D,EAAA,sDAIjB,GAHA0D,EAAMC,iBAfN1B,GAAW7D,EAAKwF,UAAWjC,EAAYC,EAAe,EAAG,cACzDK,GAAW7D,EAAKyF,YAAalC,EAAYC,EAAe,EAAG,eAC3DQ,GAAUhE,EAAK5B,SAAUmF,EAAYC,EAAe,EAAG,YACvDQ,GAAUhE,EAAK3B,UAAWkF,EAAYC,EAAe,EAAG,aACxDK,GAAWU,EAAUhB,EAAYC,EAAe,EAAG,YDNpD,SAAuBM,EAAOP,EAAYC,EAAeC,EAAOM,GACnE,IAAML,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACrBG,EAAMnJ,OAAS,GACf+I,EAAID,IAAS,EACb7C,EAAM6C,GAAS,GACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAE/C8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,UAAUM,EACzBP,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KCH/C8E,CAAcd,EAAUrB,EAAYC,EAAe,EAAG,UACtDK,GAAWa,EAAanB,EAAYC,EAAe,EAAG,mBAEjDD,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IACvIA,EAAWA,WAAW,IASnB,EACHtD,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBACjCnC,QAAQC,IAAI+B,GACZhC,QAAQC,IAAI6F,GACR6B,EAAa,CACb3I,KAAMgD,EAAKwF,UACXC,YAAazF,EAAKyF,YAClBG,SAAU,CACNC,YAAa,CAAC7F,EAAK3B,UAAW2B,EAAK5B,WAEvCmG,SAAUA,EACVlE,OAAQuE,EACRH,YAAaC,EACboB,OAAQ,IAEZ,IACQC,EAAMnD,KAAKC,UAAU8C,GAErBvF,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACT0C,KAAMoD,EACNxF,SAAU,UAGdC,MAAM,GAAD,OAjFJ,wBAiFI,mBAAuBR,EAAK8C,IAAM1C,GAClCK,MAAK,SAAAC,GAAQ,OAAIA,EAASsF,UAC1BvF,MAAK,SAAAoB,GAAM,OAlDxB7B,EAAKQ,aACL1F,EAAMmL,WAkDO9E,OAAM,SAAAP,GAAK,OAAI5C,QAAQC,IAAI,QAAS2C,MAC3C,MAAOsF,GACLlI,QAAQ4C,MAAMsF,GAflB,QAiBIlI,QAAQC,IAAI,uBArCH,2CAAH,sDA0CZkI,EAAe,SAACb,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACrB9G,EAAOsI,EAAMc,OAAOpJ,KAEX,cAATA,EACA6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,cAElC,gBAATxG,EACL6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,eAElC,aAATxG,EACLgH,GAAUF,EAAOP,EAAYC,EAAe,EAAG,YAEjC,cAATxG,EACLgH,GAAUF,EAAOP,EAAYC,EAAe,EAAG,aAEjC,aAATxG,EACL6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,YAElC,gBAATxG,GACL6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,iBAKpDW,EAAQ,2BAAKnE,GAAN,mBAAasF,EAAMc,OAAOpJ,KAAO8G,MAEtCuC,EAAmB,SAAChI,EAAWD,GACjC+F,EAAQ,2BAAKnE,GAAN,IAAY5B,SAAUA,EAAUC,UAAWA,KAClDL,QAAQC,IAAIG,EAAUC,IAE1B,OAEI,eAAC,IAAD,CAAKiI,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UAEK8I,EAAW,eAAC,KAAD,CAAOtD,OAAO,QAAQvF,GAAG,OAAzB,UACR,cAAC,KAAD,IADQ,WAGD,KACX,uBAAMiL,OAAO,SAAb,UACKnC,EACG,qCACI,cAAC,IAAD,CAASpC,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,4BACA,cAAC,IAAD,gCACA,eAAC,KAAD,CAAa7C,YAAU,EAACtI,GAAG,OAA3B,UACI,cAAC,KAAD,CACIoL,KAAK,OACL7C,MAAO9D,EAAKwF,UACZxI,KAAK,YACL+G,YAAY,oBACZ6C,aAAW,OACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,WAG/D,qCACE,cAAC,IAAD,CAAS1B,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,SACK1G,EAAKwF,YAEV,cAAC,IAAD,CAAKwB,OAAO,KAAKzL,GAAG,OAApB,SACI,cAAC,IAAD,CAAO0B,IAAK+C,EAAKiH,SAAUC,IAAI,QAAQC,QAAQ,YAK3D,eAAC,IAAD,CAAOrK,QAAS,EAAhB,UACKuH,EACG,qCACI,cAAC,IAAD,0BACA,eAAC,KAAD,CAAaR,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,OACL3J,KAAK,cACL8G,MAAO9D,EAAKyF,YACZ1B,YAAY,cACZ6C,aAAW,cACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,WAG/D,eAAC,IAAD,CAAKqD,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAAOE,GAAkB,UAAdT,EAAwB,UAAY,WAAzF,UACE,cAAC,IAAD,CAAMY,SAAS,MAAf,yBACA,cAAC,IAAD,UAAOoE,EAAKyF,iBAGnBpB,EAAW,qCACR,cAAC,IAAD,uBACA,eAAC,KAAD,CAAaR,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CACI8C,KAAK,OACL3J,KAAK,WACL8G,MAAO9D,EAAK5B,SACZ2F,YAAY,WACZ6C,aAAW,WACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CACIJ,KAAK,OACL3J,KAAK,YACL8G,MAAO9D,EAAK3B,UACZ0F,YAAY,YACZ6C,aAAW,YACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,eAGzB,eAAC,KAAD,CAAgBpL,MAAM,UAAtB,UAAiC4H,EAAWI,aAAa,GAAzD,IAA8DJ,EAAWI,aAAa,SAG1F,cAAC,GAAD,CAAKP,aAAciD,OAGnB,cAAC,IAAD,CAAKW,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAAOE,GAAkB,UAAdT,EAAwB,UAAY,WAAzF,SACI,cAAC,GAAD,CAAKoI,aAAciD,MAO1BhC,EACG,qCACI,cAAC,IAAD,4BACA,cAAC,KAAD,CAAaR,YAAU,EAAvB,SACI,eAAC,KAAD,CAAauD,KAAM,GAAOC,aAAc,EAAGC,IAAK,GAAOC,IAAK,GAAIC,UAAW,EACvEV,UAAWvD,EAAWA,WAAW,GACjCsD,SAAU,SAACY,GAAD,OAAiBjD,EAAYiD,IACvC3D,MAAOS,EACPwC,iBAAiB,UAJrB,UAKI,cAAC,KAAD,CACIhD,YAAY,WACZ/G,KAAK,aAET,eAAC,KAAD,WACI,cAAC,KAAD,IACA,cAAC,KAAD,YAIZ,cAAC,KAAD,CAAgBrB,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAE3D,cAAC,IAAD,CAAKqD,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAAOE,GAAkB,UAAdT,EAAwB,UAAY,WAAzF,SACE,eAAC,IAAD,CAAMY,SAAS,MAAf,qBAEA,eAAC,IAAD,CAAOC,GAAG,IAAID,SAAS,QAAQS,YAAY,QAAQD,QAAQ,UAA3D,UACSmI,EADT,cAOPF,EACG,mCACI,eAAC,KAAD,CAAaR,YAAU,EAAvB,UACI,eAAC,IAAD,CAAOvH,UAAU,MAAjB,UACI,cAAC,KAAD,CACIuK,SAAU,SAACX,GAAD,OAAOpB,EAAqB,QAD1C,iBAKA,cAAC,KAAD,CACI+B,SAAU,SAACX,GAAD,OAAOpB,EAAqB,UAD1C,mBAKA,cAAC,KAAD,CACI+B,SAAU,SAACX,GAAD,OAAOpB,EAAqB,QAD1C,iBAKA,cAAC,KAAD,CACI+B,SAAU,SAACX,GAAD,OAAOpB,EAAqB,iBAD1C,0BAKA,cAAC,KAAD,CACI+B,SAAU,SAACX,GAAD,OAAOpB,EAAqB,SAD1C,qBAOJ,cAAC,KAAD,CAAgBnJ,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,UAIjE,cAAC,IAAD,CAAKqD,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAAOE,GAAkB,UAAdT,EAAwB,UAAY,WAAzF,SACI,eAAC,IAAD,CAAMY,SAAS,MAAf,8BAECoE,EAAKmF,QAAQrG,KAAI,SAACuB,EAAQnE,GAAT,OACd,cAAC,IAAD,CAAO6C,EAAE,MAAM3D,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,SAAtD,SACKgE,YAQhBgE,EACG,qCACI,cAAC,IAAD,kCACA,cAAC,KAAD,CAAaR,YAAU,EAAvB,SACI,eAAC,KAAD,CAAauD,KAAM,EAAGC,aAAc,EAAGC,IAAK,EAAGC,IAAK,IAChDT,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,UACjBjD,MAAOY,EACPmC,SAAU,SAACY,GAAD,OAAiB9C,EAAe8C,IAJ9C,UAKI,cAAC,KAAD,CACI1D,YAAY,gBACZ/G,KAAK,gBAGT,eAAC,KAAD,WACI,cAAC,KAAD,IACA,cAAC,KAAD,OAEJ,cAAC,KAAD,CAAgBrB,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,aAKrE,cAAC,IAAD,CAAKqD,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAAOE,GAAkB,UAAdT,EAAwB,UAAY,WAAzF,SACI,eAAC,IAAD,CAAMY,SAAS,MAAf,0BACJ,eAAC,IAAD,CAAOC,GAAG,IAAID,SAAS,QAAQS,YAAY,MAAMD,QAAQ,UAAzD,UACasI,EADb,eAOHL,EACG,cAAC,IAAD,CAAQhI,YAAY,OAAOsK,KAAK,SAASzD,QAAS,SAACoC,GAAD,OAAWD,EAAaC,IAA1E,8BAEA,KAGHjB,EACG,KAEA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQhI,YAAY,OAAO6G,QAAS,kBAAMoB,GAAY,IAAtD,4BACA,cAAC,IAAD,CAAQjI,YAAY,MAAM6G,QAAS,kBAAMT,GAA0CzC,EAAK9F,MAAxF,6CCrWhC,SAASyN,GAAkB7M,GAAQ,IAAD,EACM8M,cAA5BC,EADsB,EACtBA,OAAQC,EADc,EACdA,OAAQC,EADM,EACNA,QACxB,OACI,cAAC,IAAD,CAAK7M,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,OAAOC,GAAG,OAApF,SACI,eAAC,IAAD,CAAMoB,EAAE,OACJqL,gBAAgB,iBAChBC,aAAa,iBACbC,IAAK,EAHT,UAKI,cAAC,IAAD,CAAUC,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOzJ,IAAKnC,EAAMmM,SAAUC,IAAI,mBAKxC,cAAC,IAAD,CAAUiB,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAA/D,SACI,eAAC,IAAD,CAAKlB,EAAE,IAAP,UACI,cAAC,IAAD,CAAKiE,EAAE,OAAO8I,WAAW,WAAzB,SACI,cAAC,IAAD,CAAOjN,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,OAA9C,mBAMJ,cAAC,IAAD,CACIgB,GAAG,IACHiL,WAAW,WACXrG,GAAG,KACHsG,WAAW,QACXC,aAAW,EALf,SAOI,cAAC,IAAD,CAAM5M,SAAS,MAAf,SAAsBd,EAAM0K,cAGhC,eAAC,IAAD,WACK1K,EAAMyJ,SADX,qBAEI,cAAC,IAAD,CAAKtC,GAAG,OAAOtG,MAAM,WAAWC,SAAS,UAG7C,eAAC,IAAD,WACKd,EAAM2J,YADX,eAEI,cAAC,IAAD,CAAKxC,GAAG,OAAOtG,MAAM,WAAWC,SAAS,UAI7C,eAAC,IAAD,CAAK2D,EAAE,OAAOlC,GAAG,IAAIgL,WAAW,SAAhC,UACI,cAAC,IAAD,CAAMzM,SAAS,KAAf,yBACCd,EAAMqK,QAAQrG,KAAI,SAACuB,EAAQnE,GAAT,OACf,cAAC,IAAD,CAAO6C,EAAE,MAAM3D,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,SAAtD,SACKgE,eAQrB,eAAC,IAAD,CAAU8H,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,UACI,cAAC,IAAD,CAAQ+B,UAAW,cAACC,GAAA,EAAD,IAAsBrM,YAAY,OAAOD,QAAQ,UAAU8G,QAAS4E,EAAvF,qBAEA,eAAC,IAAD,CAAOD,OAAQA,EAAQE,QAASA,EAAhC,UACI,cAAC,IAAD,IAEA,eAAC,IAAD,CAActI,IAAI,QAAlB,UACI,cAAC,IAAD,IACA,cAAC,GAAD,CAAsBO,KAAMlF,EAAOmL,MAAO8B,kBActEJ,GAAkBgB,aAAe,CAC7BtO,KAAM,QAEKsN,U,8BCnEAiB,OAlBf,SAAmB9N,GACf,OACI,cAAC,IAAD,CAAKiH,EAAE,QAAQxG,GAAG,OAAlB,SACI,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,KAAD,CAAYc,YAAY,OAAOuK,aAAW,kBAAkBiC,KAAM,cAACC,GAAA,EAAD,IAAgB5F,QAASpI,EAAMoI,YAGrG,cAAC,KAAD,CAAOa,YAAajJ,EAAMkL,KAAMhJ,KAAK,SAAS8G,MAAOhJ,EAAMgJ,MAAO+C,SAAU/L,EAAM+L,iB,mBC2EnFkC,OA3Ef,WAA2B,IAAD,EACsB5K,mBAAS,IAD/B,mBACfuE,EADe,KACCsG,EADD,OAEQ7K,oBAAS,GAFjB,mBAELoD,GAFK,aAIMpD,mBAAS,IAJf,mBAIf8K,EAJe,KAIPC,EAJO,KAchBvH,EAAS,uCAAG,sBAAAC,EAAA,sDACda,KACKhC,MAAK,SAACoB,GACCA,EAAOZ,QACP+H,EAAkBnH,EAAOa,gBAEzBnB,EAAUM,EAAOf,WANf,2CAAH,qDAUTqI,EAAU,uCAAG,WAAOC,GAAP,SAAAxH,EAAA,sDACfa,GAA6C2G,GACxC3I,MAAK,SAACoB,GACCA,EAAOZ,QACP+H,EAAkBnH,EAAOa,gBAEzBnB,EAAUM,EAAOf,WANd,2CAAH,sDAahB,OAHAgB,qBAAU,WACNH,MACF,IAEE,qCACI,cAAC,IAAD,CAAQnC,SAAS,QAAQI,OAAO,OAAOyJ,MAAM,OAAOC,OAAO,OAAOC,SAAU,cAACC,GAAA,EAAD,IAAanN,YAAY,OAArG,SACI,cAAC,KAAD,CAAM4F,GAAIwH,kBAAiBC,GAAG,oBAA9B,kCAEJ,cAAC,IAAD,CAAQ3H,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAI0G,GAAG,QAApC,SACI,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACI,cAAC,IAAD,CAASO,GAAG,OAAON,GAAG,OAAtB,6BACA,cAAC,IAAD,UACI,cAAC,GAAD,CAAWyK,KAAK,2BAA2BlC,MAAOmF,EAAQpC,SAAU,SAACvB,GAAD,OAxCnE,SAACA,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACzBoF,EAAUpF,GACVqF,EAAW,CAACQ,UAAW7F,IAqCsEqC,CAAab,QAEnE,IAA1B5C,EAAe/H,OAAe,cAAC,IAAD,CAAKW,EAAE,OAAOG,GAAG,UAAUL,aAAa,KAAxC,SAA6C,cAAC,IAAD,CAAMQ,SAAS,KAAKD,MAAM,aAA1B,kCAAuE,KAClJ+G,EAAe5D,KAAI,SAACrC,EAAOP,GAAR,OAChB,cAAC,GAAD,CACI4G,GAAIrG,EAAMvC,IACVsL,UAAW/I,EAAMO,KACjByI,YAAahJ,EAAMgJ,YACnBrH,SAAU3B,EAAMmJ,SAASC,YAAY,GACrCxH,UAAW5B,EAAMmJ,SAASC,YAAY,GACtCtB,SAAU9H,EAAM8H,SAChBY,QAAS1I,EAAMmN,kBACfnF,YAAahI,EAAMgI,YACnBwC,SAAS,UACTzG,MAAOmB,EACPtH,KAAK,sB,oBCNlBwP,OA9Df,SAAuB/O,GA+BnB,OACI,cAAC,IAAD,CAAKI,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,MAAMC,GAAG,OAAnF,SACI,eAAC,KAAD,CAAOwB,KAAK,KAAZ,UACI,cAAC,KAAD,UACI,eAAC,KAAD,WACI,cAAC,KAAD,4BACA,cAAC,KAAD,mBACA,cAAC,KAAD,sBACA,cAAC,KAAD,oBACA,cAAC,KAAD,qCAGR,cAAC,KAAD,UACCjC,EAAMgP,SAAShL,KAAI,SAACiL,EAAQ7N,GA1CzB,IAAC8N,EA2CA,KACI,KAxBZ,IAyBY,KAAID,EAAQE,UAAYF,EAAQG,SAChC,KA9CJF,EA8CgB,EA5CxB,IACIvP,MAAM,GACF2E,KAAK,IACLN,KAAI,SAACqL,EAAGjO,GAAJ,OACD,cAACkO,GAAA,EAAD,CAEIzO,MAAOO,EAAI8N,EAAS,WAAa,YAD5B9N,MAIhB,IAoCQ,KAAI,IACJ,KAAI,eCoQhBmO,GA3SO,WAChB,IAAIpK,EAAY,IAAIC,QADE,EAESL,IAAzBC,EAFgB,EAEhBA,cAAe9F,EAFC,EAEDA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,aAA8B0C,GACrCK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACH6I,SAAUpJ,EAASoJ,SACnB7I,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,+BACRG,SAAS,OCNVqJ,GA7CA,WAAM,IAAD,EACcnM,mBAAS,IADvB,mBACX2L,EADW,KACDS,EADC,OAEYpM,oBAAS,GAFrB,mBAEDoD,GAFC,aAIUpD,mBAAS,IAJnB,mBAWZwD,GAXY,UAWH,uCAAG,sBAAAC,EAAA,sDAChByI,KACG5J,MAAK,SAACoB,GACDA,EAAOZ,QACTsJ,EAAY1I,EAAOiI,UAEnBvI,EAAUM,EAAOf,WANP,2CAAH,sDAcf,OAJAgB,qBAAU,WACRH,MACC,IAGD,mCAEE,cAAC,IAAD,CAAQI,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAI0G,GAAG,QAApC,SACE,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACE,cAAC,IAAD,CAASO,GAAG,OAAON,GAAG,OAAtB,sBACA,cAAC,IAAD,UACE,cAAC,GAAD,CAAWyK,KAAK,yBAElB,cAAC,GAAD,CAAe8D,SAAUA,YC2NpBU,OAzPf,SAA0B1P,GAAQ,IAAD,EACLqD,mBAASrD,EAAMkF,MADV,mBACtBA,EADsB,KAChBmE,EADgB,OAEGhG,oBAAS,GAFZ,mBAEtBiG,EAFsB,aAGGjG,oBAAS,IAHZ,mBAGtBkG,EAHsB,KAGZC,EAHY,OAILnG,oBAAS,GAJJ,mBAItBsM,EAJsB,KAIhBC,EAJgB,OAOOvM,mBAAS,CACzCoF,WAAY,EAAC,GAAO,GAAO,GAC3BI,aAAc,CAAC,GAAI,GAAI,MATE,mBAOtBJ,EAPsB,KAOVC,EAPU,KAgBvB6B,EAAY,uCAAG,WAAOC,GAAP,qBAAA1D,EAAA,sDAGjB,GAFA0D,EAAMC,iBACQoF,IACD,EACL1K,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBACjCmF,EAAMC,iBACNvH,QAAQC,IAAI+B,GACR2F,EAAa,CACbsE,UAAWjK,EAAKiK,UAChBC,SAAUlK,EAAKkK,SACfU,MAAO5K,EAAK4K,OAEhB,IACQ7E,EAAMnD,KAAKC,UAAU8C,GAErBvF,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACT0C,KAAMoD,EACNxF,SAAU,UAGdC,MAAM,GAAD,OA1CJ,wBA0CI,sBAA0BR,EAAK8C,IAAM1C,GACrCK,MAAK,SAAAC,GAAQ,OAAIA,EAASsF,UAC1BvF,MAAK,SAAAoB,GAAM,OA7BxB7B,EAAKQ,aACL1F,EAAMmL,WA6BO9E,OAAM,SAAAP,GAAK,OAAI5C,QAAQC,IAAI,QAAS2C,MAC3C,MAAOsF,GACLlI,QAAQ4C,MAAMsF,GAflB,QAiBIlI,QAAQC,IAAI,uBA9BH,2CAAH,sDAmCZ0M,EAAuB,WAKzB,OAJA9G,GAAW7D,EAAKiK,UAAW1G,EAAYC,EAAe,EAAG,cACzDK,GAAW7D,EAAKkK,SAAU3G,EAAYC,EAAe,EAAG,aACxDH,GAAcrD,EAAK4K,MAAOrH,EAAYC,EAAe,KAEhDD,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IAAOA,EAAWA,WAAW,KAKnF4C,EAAe,SAACb,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACrB9G,EAAOsI,EAAMc,OAAOpJ,KAEX,cAATA,EACA6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,cAChC,aAATxG,EACP6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,aAChC,UAATxG,GACPqG,GAAcS,EAAOP,EAAYC,EAAe,GAGpDW,EAAQ,2BAAKnE,GAAN,mBAAasF,EAAMc,OAAOpJ,KAAO8G,MAEtC+G,EAAY,SAAC,GAAD,IACdhE,EADc,EACdA,SADc,EAEd5J,IAFc,OAId,wBAAO6N,QAAQ,eAAeC,UAAU,yBAAxC,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKC,IAAI,eAAe/N,IAAI,gBAAgBiK,IAAI,cAEpD,uBAAOpE,GAAG,eAAe6D,KAAK,OAAOE,SAAUA,QAGvD,OAEI,eAAC,IAAD,CAAKP,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UAEK8I,EAAW,eAAC,KAAD,CAAOtD,OAAO,QAAQvF,GAAG,OAAzB,UACR,cAAC,KAAD,IADQ,WAGD,KACX,sBAAMiL,OAAO,SAAb,SACI,eAAC,IAAD,CAAO1J,QAAS,EAAhB,UACI,cAAC,IAAD,UACKuH,EACG,cAAC,IAAD,CAAKtC,EAAE,QAAQpF,EAAE,QAAQpB,GAAG,OAA5B,SACI,cAACsP,EAAD,MAGJ,cAAC,IAAD,CAAQ9N,KAAK,MAAMC,KAAK,gBAAgBC,IAAI,iBAKnDoH,EACG,qCACI,cAAC,IAAD,CAAMzI,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,0BAIJ,cAAC,KAAD,CAAawH,YAAU,EAAvB,SACI,cAAC,KAAD,CACI8C,KAAK,OACL7C,MAAO9D,EAAKiK,UACZjN,KAAK,YACL+G,YAAY,aACZ6C,aAAW,aACXE,UAAWvD,EAAWA,WAAW,GACjCsD,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCyB,iBAAiB,cAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAG7D,qCACI,cAAC,IAAD,CAAM/H,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,0BAIJ,cAAC,IAAD,CAAMT,SAAS,MAAf,SAAsBoE,EAAKiK,eAGnC,cAAC,IAAD,IACC5F,EACG,qCACI,cAAC,IAAD,CAAMzI,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,yBAIJ,cAAC,KAAD,CAAawH,YAAU,EAAvB,SACI,cAAC,KAAD,CACI8C,KAAK,OACL7C,MAAO9D,EAAKkK,SACZlN,KAAK,WACL+G,YAAY,YACZ6C,aAAW,YACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,cAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAG7D,qCACI,cAAC,IAAD,CAAM/H,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,yBAIJ,cAAC,IAAD,CAAMT,SAAS,MAAf,SAAsBoE,EAAKkK,cAGnC,cAAC,IAAD,IACC7F,EACG,qCACI,cAAC,IAAD,CAAMzI,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,qBAIJ,eAAC,KAAD,CAAawH,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,QACL7C,MAAO9D,EAAK4K,MACZ5N,KAAK,QACL+G,YAAY,QACZ6C,aAAW,QACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,WAIjE,qCACI,cAAC,IAAD,CAAM/H,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,qBAIJ,cAAC,IAAD,CAAMT,SAAS,MAAf,SAAsBoE,EAAK4K,WAKlCvG,EACG,qCACI,cAAC,IAAD,IACA,cAAC,IAAD,CAAMzI,SAAS,KAAf,SACI,cAAC,IAAD,CAAOQ,QAAQ,SAASC,YAAY,QAApC,wBAIJ,eAAC,KAAD,CAAYU,KAAK,KAAjB,UACI,cAAC,KAAD,CACIkO,GAAG,SACHtE,KAAM8D,EAAO,OAAS,WACtB1G,YAAY,iBACZD,MAAM,KAEV,cAAC,KAAD,CAAmB5I,MAAM,SAAzB,SACI,cAAC,IAAD,CAAQyB,EAAE,UAAUI,KAAK,KAAKmG,QAvN1C,kBAAMwH,GAASD,IAuNH,SACKA,EAAO,OAAS,iBAMjC,KAGHpG,EACG,KAEA,cAAC,IAAD,CAAQhI,YAAY,OAAO6G,QAAS,kBAAMoB,GAAY,IAAtD,0BAEHD,EACG,cAAC,IAAD,CAAQhI,YAAY,OAAOsK,KAAK,SAASzD,QAAS,SAACoC,GAAD,OAAWD,EAAaC,IAA1E,kCAEA,cClLT4F,OAjEf,SAAuBpQ,GAAQ,IAAD,EACU8M,cAA5BC,EADkB,EAClBA,OAAQC,EADU,EACVA,OAAQC,EADE,EACFA,QACxB,OACI,cAAC,IAAD,CAAK7M,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,OAAOC,GAAG,OAApF,SACI,eAAC,IAAD,CAAMoB,EAAE,OACJqL,gBAAgB,iBAChBC,aAAa,iBACbC,IAAK,EAHT,UAKI,cAAC,IAAD,CAAUC,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOzJ,IAAKnC,EAAMmM,SAAUC,IAAKpM,EAAMqQ,SAAU/P,aAAa,OAAOgQ,QAAQ,cAKrF,cAAC,IAAD,CAAUjD,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAA/D,SACI,eAAC,IAAD,CAAKlB,EAAE,IAAP,UACI,cAAC,IAAD,CAAKiE,EAAE,OAAO8I,WAAW,WAAzB,SACI,cAAC,IAAD,CAAOjN,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,OAA9C,mBAMJ,eAAC,IAAD,CACIgB,GAAG,IACHiL,WAAW,WACXrG,GAAG,KACHsG,WAAW,QACXC,aAAW,EALf,UAOK1N,EAAMmP,UAPX,IAOuBnP,EAAMoP,YAG7B,eAAC,IAAD,WACKpP,EAAM8P,MACP,cAAC,IAAD,CAAK3I,GAAG,OAAOtG,MAAM,WAAWC,SAAS,eAQrD,eAAC,IAAD,CAAUuM,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,UACI,cAAC,IAAD,CAAQ+B,UAAW,cAACC,GAAA,EAAD,IAAsBrM,YAAY,OAAOD,QAAQ,UAAU8G,QAAS4E,EAAvF,qBAEA,eAAC,IAAD,CAAOD,OAAQA,EAAQE,QAASA,EAAhC,UACI,cAAC,IAAD,IAEA,eAAC,IAAD,CAActI,IAAI,QAAlB,UACI,cAAC,IAAD,IACA,cAAC,GAAD,CAAkBO,KAAMlF,EAAOmL,MAAO8B,mB,oBCwInDsD,OAhLf,YAAuC,EAAZC,UAAa,IAAD,EACSnN,mBAAS,MADlB,mBAC5BoN,EAD4B,KACZC,EADY,OAEXrN,mBAAS,CAC7B8L,UAAW,GACXC,SAAU,GACVU,MAAO,KALwB,mBAE5B5K,EAF4B,KAEtBmE,EAFsB,OAQCyD,cAA5BC,EAR2B,EAQ3BA,OAAQC,EARmB,EAQnBA,OAAQC,EARW,EAQXA,QARW,EAUC5J,mBAAS,CACzCoF,WAAY,EAAC,GAAO,GAAO,GAC3BI,aAAc,CAAC,GAAI,GAAI,MAZQ,mBAU5BJ,EAV4B,KAUhBC,EAVgB,KA0B7B6B,EAAY,uCAAG,WAAOC,GAAP,2BAAA1D,EAAA,sDAGjB,GAFA0D,EAAMC,iBAXN1B,GAAW7D,EAAKiK,UAAW1G,EAAYC,EAAe,EAAG,cACzDK,GAAW7D,EAAKkK,SAAU3G,EAAYC,EAAe,EAAG,aACxDH,GAAcrD,EAAK4K,MAAOrH,EAAYC,EAAe,KAEhDD,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IAAOA,EAAWA,WAAW,IASxE,EACLtD,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBAFxB,EAGsBN,IAAzBC,EAHG,EAGHA,cAAe9F,EAHZ,EAGYA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAC5B2L,EAAa,CACbsE,UAAWjK,EAAKiK,UAChBC,SAAUlK,EAAKkK,SACfU,MAAO5K,EAAK4K,OAGhB,IACQ7E,EAAMnD,KAAKC,UAAU8C,GAErBvF,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACT0C,KAAMoD,EACNxF,SAAU,UAGdC,MAAM,GAAD,OAnDJ,wBAmDI,cAA0BJ,GAC1BK,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAoB,GACEA,EAAOZ,UACPuK,EAAkB,CAAEZ,MAAO/I,EAAO+I,MAAOa,SAAU5J,EAAO4J,WAC1DC,QAIPvK,OAAM,SAAAP,GAAK,OAAI5C,QAAQC,IAAI,QAAS2C,MAC3C,MAAOsF,GACLlI,QAAQ4C,MAAMsF,GArBlB,QAuBIlI,QAAQC,IAAI,uBArCH,2CAAH,sDA2CZyN,EAAa,SAAC7J,GAChBiG,KAGE3B,EAAe,SAACb,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACrB9G,EAAOsI,EAAMc,OAAOpJ,KAEX,cAATA,EACA6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,cAChC,aAATxG,EACP6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,aAChC,UAATxG,GACPqG,GAAcS,EAAOP,EAAYC,EAAe,GAGpDW,EAAQ,2BAAKnE,GAAN,mBAAasF,EAAMc,OAAOpJ,KAAO8G,MAG5C,OAEI,eAAC,IAAD,CAAKwC,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAASyG,EAAE,QAAvE,UAEI,sBAAMyE,OAAO,SAAb,SACI,eAAC,IAAD,CAAO1J,QAAS,EAAhB,UAGI,eAAC,KAAD,CAAa+G,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,OACL7C,MAAO9D,EAAKiK,UACZjN,KAAK,YACL+G,YAAY,aACZ6C,aAAW,aACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAE7D,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,OACL7C,MAAO9D,EAAKkK,SACZlN,KAAK,WACL+G,YAAY,YACZ6C,aAAW,YACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAE7D,cAAC,IAAD,IACA,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,QACL7C,MAAO9D,EAAK4K,MACZ5N,KAAK,QACL+G,YAAY,QACZ6C,aAAW,QACXC,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAK7D,cAAC,IAAD,CAAQtH,YAAY,OAAOsK,KAAK,SAASzD,QAAS,SAACoC,GAAD,OAAWD,EAAaC,IAA1E,oCAKR,eAAC,IAAD,CAAOuC,OAAQA,EAAQE,QAASA,EAAS4D,YAAU,EAAnD,UACI,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,UACKJ,EACG,eAAC,IAAD,CAAQhQ,GAAG,OAAX,UACI,cAACqQ,GAAA,EAAD,CAAiB7J,EAAG,GAAIpF,EAAG,GAAIhB,MAAM,cACrC,cAAC,IAAD,gCACA,cAAC,IAAD,UAAO4P,EAAeX,QACtB,cAAC,IAAD,UAAOW,EAAeE,WACtB,cAAC,IAAD,UAAQ,cAAC,KAAD,CAAM/B,GAAG,cAAT,yBAGZ,eAAC,IAAD,WACI,cAACmC,GAAA,EAAD,CAAc9J,EAAG,GAAIpF,EAAG,GAAIhB,MAAM,YAClC,cAAC,IAAD,4CCoIvBmQ,GAxSS,WAClB,IAAI7L,EAAY,IAAIC,QADI,EAEOL,IAAzBC,EAFkB,EAElBA,cAAe9F,EAFG,EAEHA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,cAA+B0C,GACtCK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACH8K,WAAYrL,EAASsL,UACrB/K,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,iCACRG,SAAS,OA8PZ6K,GAxPY,SAACG,GACtB,IAAIhM,EAAY,IAAIC,QADgB,EAELL,IAAzBC,EAF8B,EAE9BA,cAAe9F,EAFe,EAEfA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACT0C,KAAMC,KAAKC,UAAU,CAAC,UAAYoJ,IAClC1L,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,qBAAsC0C,GAC7CK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACH8K,WAAYrL,EAASsL,UACrB/K,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,iCACRG,SAAS,OCfnBiL,GAAmB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAAuB,EACbvE,cAA5BC,EADyC,EACzCA,OAAQC,EADiC,EACjCA,OAAQC,EADyB,EACzBA,QAKxB,OACE,qCACE,cAAC,IAAD,CACEzM,EAAG,EACHe,YAAY,OACZT,SAAS,OACT0M,WAAW,OACXpF,QAAS4E,EACTtI,SAAS,QACTI,OAAO,OACPyJ,MAAM,OACNC,OAAO,OACPC,SAAU,cAACC,GAAA,EAAD,IAVZ,2BAcA,eAAC,IAAD,CACE4C,qBAAqB,EACrBvE,OAAQA,EACRE,QAASA,EACThL,KAAK,KACLsP,aAAa,gBACbV,YAAU,EACVW,YAAU,EAPZ,UASE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,GAAD,CAAkBhB,UAjCV,WAChBvD,IACAoE,mBA2DWI,GAhII,WAAO,IAAD,EACapO,mBAAS,IADtB,mBAChB4N,EADgB,KACJS,EADI,OAEOrO,oBAAS,GAFhB,mBAENoD,GAFM,aAIKpD,mBAAS,IAJd,mBAIhB8K,EAJgB,KAIRC,EAJQ,KAWjBvH,EAAS,uCAAG,WAAOyH,GAAP,SAAAxH,EAAA,sDAChBkK,GAA+B1C,GAC5B3I,MAAK,SAACoB,GACDA,EAAOZ,QACTuL,EAAc3K,EAAOkK,YAErBxK,EAAUM,EAAOf,WANP,2CAAH,sDAUfgB,qBAAU,WACRH,MACC,IAEH,IAIMwH,EAAU,uCAAG,sBAAAvH,EAAA,sDACjBkK,GAAkC7C,GAC/BxI,MAAK,SAACoB,GACDA,EAAOZ,QACTuL,EAAc3K,EAAOkK,YAErBxK,EAAUM,EAAOf,WANN,2CAAH,qDAUhB,OACE,qCACE,cAAC,GAAD,CAAkBqL,iBAhBG,WACvBxK,OAgBE,cAAC,IAAD,CAAQI,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAG0G,GAAG,QAAnC,SACE,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACE,cAAC,IAAD,CAASO,GAAG,OAAON,GAAG,OAAtB,wBACA,cAAC,IAAD,UACE,cAAC,GAAD,CAAWyK,KAAK,sBAAsBlC,MAAOmF,EAAQpC,SAAU,SAACvB,GAAD,OAxCpD,SAACA,GACpB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACzBoF,EAAUpF,GAsCwEqC,CAAab,IAAQpC,QAAS,kBAAMiG,SAEzF,IAAtB4C,EAAWpR,OAAe,cAAC,IAAD,CAAKW,EAAE,OAAOG,GAAG,UAAUL,aAAa,KAAxC,SAA6C,cAAC,IAAD,CAAMQ,SAAS,KAAKD,MAAM,UAA1B,6BAAiE,KACxIoQ,EAAWjN,KAAI,SAAC2N,EAAWvQ,GAAZ,OACd,cAAC,GAAD,CAAM+K,SAAS,aACbkE,SAAS,OACTrI,GAAI2J,EAAUvS,IACd+P,UAAWwC,EAAUxC,UACrBC,SAAUuC,EAAUvC,SACpBU,MAAO6B,EAAU7B,MACjBpK,MAAOmB,gB,iDChBN+K,OA7Df,SAAqB5R,GAAQ,IAAD,EACAoD,IAAMC,UAAS,GADf,mBACjBsM,EADiB,KACXC,EADW,KAMxB,OACI,cAAC,KAAD,CAAMhB,GAAI5O,EAAM6R,OAAQ1K,GAAI2K,KAA5B,SACI,eAAC,IAAD,CACIC,KAAK,KACL1R,YAAY,MACZC,aAAa,KACbC,SAAS,SACTyR,OAAQ,CACJC,WAAY,kCANpB,UASI,cAAC,IAAD,CACIpQ,EAAE,QACFqQ,UAAU,QACV/P,IAAKnC,EAAMmM,SACXC,IAAKpM,EAAMqQ,WACf,cAAC,IAAD,CAAK7P,EAAE,IAAP,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIK,MAAM,WACN2M,WAAW,OACX2E,cAAc,OACdrR,SAAS,KACTsR,cAAc,YACdzG,UAAU,SANd,SAQK3L,EAAMqS,QAEX,cAAC,KAAD,CAAUC,GAAI3C,EAAd,SACI,cAAC,IAAD,CACI9O,MAAM,QACN2M,WAAW,YACX2E,cAAc,OACdrR,SAAS,IACTsR,cAAc,YACdzG,UAAU,SANd,SAQK3L,EAAM2K,gBAGf,eAAC,KAAD,WACI,cAAC,IAAD,IACA,cAAC,KAAD,IACA,cAAC,IAAD,UACI,eAAC,IAAD,CAAQ1I,KAAK,KAAKmG,QA/CzB,kBAAMwH,GAASD,IA+CiCpN,GAAG,OAA5C,kBACUoN,EAAO,OAAS,0BCI3C4C,OAvDf,WAEI,OACI,mCACI,cAAC,IAAD,CAAQtL,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAG0G,GAAG,QAAnC,SACI,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACI,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,MAAMlB,GAAG,OAAON,GAAG,OAAzC,gCACA,cAAC,IAAD,CAAS0G,GAAG,KAAKlF,KAAK,KAAKlB,GAAG,OAAON,GAAG,OAAxC,0CACA,cAAC,IAAD,IACA,eAAC,KAAD,CAAMuB,QAAQ,OAAOwQ,QAAQ,SAASjQ,GAAG,OAAO9B,GAAG,OAAnD,UACI,cAAC,KAAD,UACI,cAAC,GAAD,CACI0L,SAAS,mGACTkE,SAAS,yBACTgC,MAAM,mBACNR,OAAO,gBACPlH,YAAY,sFAGpB,cAAC,KAAD,UAEI,cAAC,GAAD,CACIwB,SAAS,sFACTkE,SAAS,mBACTgC,MAAM,sBACNR,OAAO,sBACPlH,YAAY,8BAKpB,cAAC,KAAD,UAEI,cAAC,GAAD,CACIwB,SAAS,oLACTkE,SAAS,yBACTgC,MAAM,mBACNR,OAAO,iBACPlH,YAAY,iC,SC3CrC,SAASpC,GAAcC,EAAMC,EAAYC,EAAeC,GAC3D,IAAMC,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACrB,uEAAuEC,KAAKN,IAC5EI,EAAID,IAAS,EACb7C,EAAM6C,GAAS,QACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAEnD8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,yCACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KAK5C,SAASiD,GAAWC,EAAOP,EAAYC,EAAeC,EAAOM,GAChE,IAAML,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACX,KAAVG,GACAJ,EAAID,IAAS,EACb7C,EAAM6C,GAAS,QACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAG/C8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,SAASM,EACxBP,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KAQhD,SAASoD,GAAUF,EAAOP,EAAYC,EAAeC,EAAOM,GAC/D,IAAML,EAAMH,EAAWA,WACjB3C,EAAQ2C,EAAWI,aACrBM,OAAOH,IACPJ,EAAID,IAAS,EACb7C,EAAM6C,GAAS,QACfD,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,MAE/C8C,EAAID,IAAS,EACb7C,EAAM6C,GAAS,0BAA0BM,EACzCP,EAAc,CAAED,WAAYG,EAAKC,aAAc/C,KCiKxC2M,OA3Lf,SAAwBzS,GAAQ,IAAD,EACaqD,mBAAS,MADtB,mBACpBqP,EADoB,KACNC,EADM,OAGHtP,mBAAS,CAC7BuP,WAAY,GACZC,UAAW,GACXC,MAAO,GACPhD,MAAO,KAPgB,mBAGpB5K,EAHoB,KAGdmE,EAHc,OAWSyD,cAA5BC,EAXmB,EAWnBA,OAAQC,EAXW,EAWXA,OAAQC,EAXG,EAWHA,QAXG,EAYS5J,mBAAS,CACzCoF,WAAY,EAAC,GAAM,GAAM,GAAM,GAC/BI,aAAc,CAAC,GAAI,GAAI,GAAI,MAdJ,mBAYpBJ,EAZoB,KAYRC,EAZQ,KAgBrBqK,EAAU,uCAAG,WAAO7N,GAAP,2BAAA4B,EAAA,uDACX3B,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBAFlB,EAGgBN,IAAzBC,EAHS,EAGTA,cAAe9F,EAHN,EAGMA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAC5B2L,EAAa,CACbsE,UAAWjK,EAAK0N,WAChBxD,SAAUlK,EAAK2N,UACf/C,MAAO5K,EAAK4K,MACZkD,OAAQ9N,EAAK4N,OAEjB,IACQ7H,EAAMnD,KAAKC,UAAU8C,GAErBvF,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACT0C,KAAMoD,EACNxF,SAAU,UAGdC,MAAM,GAAD,OAnCI,wBAmCJ,aAAyBJ,GACzBK,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAoB,GACF4L,EAAgB,CAAE7C,MAAO/I,EAAO+I,MAAOa,SAAU5J,EAAO4J,WACxD3D,OAEH3G,OAAM,SAAAP,GAAK,OAAI5C,QAAQC,IAAI,QAAS2C,MAC3C,MAAOsF,GACLlI,QAAQ4C,MAAMsF,GAlBlB,QAoBIlI,QAAQC,IAAI,sBA/BD,2CAAH,sDAhBW,SA8DZkI,EA9DY,8EA8D3B,WAA4BD,GAA5B,iBAAAtE,EAAA,sDACQkC,EAAQoC,EAAEE,OAAOtC,MAIR,gBAHT9G,EAAOkJ,EAAEE,OAAOpJ,MAIhB6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,cAChC,cAATxG,EACP6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,aAChC,UAATxG,EACPqG,GAAcS,EAAOP,EAAYC,EAAe,GAChC,UAATxG,GACPgH,GAAUF,EAAOP,EAAYC,EAAe,EAAG,iBAEnDW,EAAQ,2BAAKnE,GAAN,mBAAakG,EAAEE,OAAOpJ,KAAO8G,KAdxC,4CA9D2B,sBA+E3B,OAEI,eAAC,IAAD,CAAKwC,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UACI,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,8BACA,sBAAMF,OAAO,SAASuH,SAhCb,SAAC7H,GACdA,EAAEX,iBACF,IAAK,IAAIrJ,EAAI,EAAGA,EAAIqH,EAAWA,WAAW5I,OAAQuB,IAC9C,IAAkC,IAA7BqH,EAAWA,WAAWrH,IAAiD,UAA/BqH,EAAWI,aAAazH,GACjE,OAGR2R,EAAW7N,GACXmE,EAAQ,2BAAKnE,GAAN,IAAY0N,WAAY,GAAIC,UAAW,GAAIC,MAAO,GAAIhD,MAAO,GAAIoD,SAAU,GAAIC,WAAY,OAwB9F,SACI,eAAC,IAAD,CAAOnR,QAAS,EAAhB,UACI,eAAC,IAAD,CAAQA,QAAQ,OAAhB,UACI,eAAC,KAAD,CAAa+G,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CACIqK,cAAc,OACdC,SAAU,cAAC,KAAD,CAAexS,MAAM,OACnC,cAAC,KAAD,CACIqB,KAAK,aACL8G,MAAO9D,EAAK0N,WACZ3J,YAAY,aACZ+C,WAAYvD,EAAWA,WAAW,GAClCsD,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,eAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,QAG7G,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,KAAD,UACI,cAAC,KAAD,CACI7G,KAAK,YACL8G,MAAO9D,EAAK2N,UACZ5J,YAAY,YACZ+C,WAAYvD,EAAWA,WAAW,GAClCsD,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,cAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,WAGjH,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CACIqK,cAAc,OACdC,SAAU,cAAC,KAAD,CAAgBxS,MAAM,OACpC,cAAC,KAAD,CACIqB,KAAK,QACL8G,MAAO9D,EAAK4N,MACZ9G,WAAYvD,EAAWA,WAAW,GAClCQ,YAAY,gBACZ8C,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,eAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,QAG7G,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CACIqK,cAAc,OACdC,SAAU,cAAC,KAAD,CAAexS,MAAM,OACnC,cAAC,KAAD,CACIqB,KAAK,QACL8G,MAAO9D,EAAK4K,MACZ9D,WAAYvD,EAAWA,WAAW,GAClCQ,YAAY,gBACZ8C,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,eAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,QAK7G,cAAC,IAAD,CAAQtH,YAAY,OAAOsK,KAAK,SAAhC,+BAIR,eAAC,IAAD,CAAOkB,OAAQA,EAAQE,QAASA,EAAS4D,YAAU,EAAnD,UACI,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,UACK6B,EACG,eAAC,IAAD,CAAQjS,GAAG,OAAX,UACI,cAACqQ,GAAA,EAAD,CAAiB7J,EAAG,GAAIpF,EAAG,GAAIhB,MAAM,cACrC,cAAC,IAAD,gCACA,cAAC,IAAD,UAAO6R,EAAa5C,QACpB,cAAC,IAAD,UAAO4C,EAAa/B,cAGxB,eAAC,IAAD,WACI,cAACI,GAAA,EAAD,CAAc9J,EAAG,GAAIpF,EAAG,GAAIhB,MAAM,YAClC,cAAC,IAAD,4C,yDCRrByS,OA3Kf,SAAqBtT,GAAQ,IAAD,EACQoD,IAAMC,UAAS,GADvB,mBACjBiG,EADiB,aAEQlG,IAAMC,SAAS,CAACkQ,MAAO,GAAGC,YAAW,KAF7C,mBAEjBC,EAFiB,aAGApQ,mBAAS,CAC7BuP,WAAY5S,EAAM4S,WAClBC,UAAW7S,EAAM6S,UACjBC,MAAM9S,EAAM8S,MACZhD,MAAO9P,EAAM8P,MACboD,SAAUlT,EAAMkT,SAChBC,WAAWnT,EAAMmT,cATG,mBAGjBjO,EAHiB,KAGXmE,EAHW,KAcxB,SAASgC,EAAaD,GAClB,IAAIpC,EAAQoC,EAAEE,OAAOtC,MACjB9G,EAAOkJ,EAAEE,OAAOpJ,KACV,eAAPA,EACC6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,cACpC,cAAPxG,EACL6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,aACpC,UAAPxG,EACLqG,GAAcS,EAAOP,EAAYC,EAAe,GACjC,UAATxG,GACPgH,GAAUF,EAAMP,EAAWC,EAAc,EAAE,iBAE9CW,EAAQ,2BAAKnE,GAAN,mBAAakG,EAAEE,OAAOpJ,KAAO8G,KA1BhB,MA+BY3F,mBAAS,CACzCoF,WAAW,EAAC,GAAK,GAAK,GAAK,GAC3BI,aAAa,CAAC,GAAG,GAAG,GAAG,MAjCH,mBA+BjBJ,EA/BiB,KA+BLC,EA/BK,KA+CxB,OAEI,eAAC,IAAD,CAAK8C,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UACI,eAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,+BAAqF5L,EAAM0T,eACzFpK,EAAW,eAAC,KAAD,CAAOtD,OAAO,QAAQvF,GAAG,OAAzB,UACT,cAAC,KAAD,IADS,WAGF,KACX,sBAAMiL,OAAO,SAASuH,SApBb,SAAC7H,GACdA,EAAEX,iBACF,IAAK,IAAIrJ,EAAI,EAAGA,EAAIqH,EAAWA,WAAW5I,OAAQuB,IAC9C,IAAkC,IAA7BqH,EAAWA,WAAWrH,IAAiD,UAA/BqH,EAAWI,aAAazH,GACjE,OAGRpB,EAAM2T,SAAS3T,EAAMgI,GAAG9C,IAapB,SACI,eAAC,IAAD,CAAOlD,QAAS,EAAhB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQC,KAAK,MAAMC,KAAK,gBAAgBC,IAAKnC,EAAMmM,aAEtD,eAAC,IAAD,CAAQnK,QAAQ,OAAhB,UACG,eAAC,KAAD,CAAa+G,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CACIqK,cAAc,OACdC,SAAU,cAAC,KAAD,CAAexS,MAAM,OACnC,cAAC,KAAD,CACIqB,KAAK,aACL8G,MAAO9D,EAAK0N,WACZ3J,YAAajJ,EAAM4S,WACnB5G,WAAYvD,EAAWA,WAAW,GAClCsD,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,eAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,QAI7G,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,KAAD,UACI,cAAC,KAAD,CACI7G,KAAK,YACL8G,MAAO9D,EAAK2N,UACZ5J,YAAajJ,EAAM6S,UACnB7G,WAAYvD,EAAWA,WAAW,GAClCsD,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,cAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,WAIjH,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,IAAD,CAAMjI,SAAS,KAAKD,MAAM,WAA1B,kCACA,eAAC,KAAD,WACI,cAAC,KAAD,CACIuS,cAAc,OACdC,SAAU,cAAC,KAAD,CAAgBxS,MAAM,OACpC,cAAC,KAAD,CACIqB,KAAK,QACL8G,MAAO9D,EAAK4N,MACZ9G,WAAYvD,EAAWA,WAAW,GAClCQ,YAAajJ,EAAM8S,MACnB/G,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,eAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAA+D,UAA7B4H,EAAWI,aAAa,GAAc,GAAGJ,EAAWI,aAAa,QAIvG,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,IAAD,CAAMjI,SAAS,KAAKD,MAAM,WAA1B,0BACA,eAAC,KAAD,WACA,cAAC,KAAD,CACIuS,cAAc,OACdC,SAAU,cAAC,KAAD,CAAexS,MAAM,OAC/B,cAAC,KAAD,CACIqB,KAAK,QACL8G,MAAO9D,EAAK4K,MACZ9D,WAAYvD,EAAWA,WAAW,GAClCQ,YAAajJ,EAAM8P,MACnB/D,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAC9Ba,iBAAiB,eAGzB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiE,UAA/B4H,EAAWI,aAAa,GAAkB,GAAKJ,EAAWI,aAAa,QAI7G,eAAC,KAAD,CAAab,GAAG,YAAYe,YAAU,EAAtC,UACI,cAAC,KAAD,yBACA,cAAC,KAAD,CACI7G,KAAK,WACL8G,MAAO9D,EAAKgO,SACZjK,YAAajJ,EAAMkT,SACnBnH,SAAU,SAACX,GAAD,OAAOC,EAAaD,IAJlC,SAMKqI,EAASD,WAAa,2BACnBC,EAASF,MAAMvP,KAAI,SAACkB,GACpB,OACI,iCAA+BA,EAAKgO,UAAvBhO,EAAK0O,iBAM9B,cAAC,KAAD,0BACA,cAAC,KAAD,CACI1R,KAAK,aACL8G,MAAO9D,EAAKiO,WACZlK,YAAajJ,EAAMmT,WACnBpH,SAAU,SAACX,GAAD,OAAKC,EAAaD,IAJhC,SAOQ,4CAMZ,cAAC,IAAD,CAAQ7J,YAAY,OAAOsK,KAAK,SAAhC,sCC1ELgI,OA9Ff,SAAqB7T,GAAQ,IAAD,EACY8M,cAA5BC,EADgB,EAChBA,OAAQC,EADQ,EACRA,OAAQC,EADA,EACAA,QACxB,OACI,cAAC,IAAD,CAAK7M,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,OAAOC,GAAG,OAApF,SACI,eAAC,IAAD,CAAMoB,EAAE,OACJqL,gBAAgB,iBAChBC,aAAa,iBACbC,IAAK,EAHT,UAKI,cAAC,IAAD,CAAUC,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOzJ,IAAKnC,EAAMmM,SAAUC,IAAKpM,EAAMqQ,SAAU/P,aAAa,OAAOgQ,QAAQ,cAKrF,cAAC,IAAD,CAAUjD,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAA/D,SACI,eAAC,IAAD,CAAKlB,EAAE,IAAP,UACI,cAAC,IAAD,CAAKiE,EAAE,OAAO8I,WAAW,WAAzB,SACI,cAAC,IAAD,CAAOjN,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,OAA9C,mBAKA,cAAC,IAAD,CACIgB,GAAG,IACHiL,WAAW,WACXrG,GAAG,KACHsG,WAAW,QACXC,aAAW,EALf,SAQC1N,EAAM4S,WAAW,IAAI5S,EAAM6S,YAIhC,cAAC,IAAD,UACK7S,EAAM8P,QAGX,cAAC,IAAD,UACK9P,EAAM8S,aAUnB,eAAC,IAAD,CAAUzF,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAI4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAtE,UACI,eAAC,KAAD,CAAM5J,QAAQ,OAAd,UACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQyM,SAAU,cAAC,KAAD,IAAqBlN,YAAY,OAAnD,0BAEJ,cAAC,KAAD,UACI,cAAC,IAAD,CAAQkN,SAAU,cAACqF,GAAA,EAAD,IAAcvS,YAAY,OAAOD,QAAQ,UAAU8G,QAAS4E,EAA9E,8BAEJ,cAAC,KAAD,UACI,cAAC,IAAD,CAAQyB,SAAU,cAACsF,GAAA,EAAD,IAAgBxS,YAAY,MAAM6G,QAAS,kBAAIpI,EAAMgU,SAAShU,EAAMgI,KAAtF,yBAGR,eAAC,IAAD,CAAO+E,OAAQA,EAAQE,QAASA,EAAhC,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CAActI,IAAI,QAAlB,SACI,cAAC,GAAD,CACIwH,SAAUnM,EAAMmM,SAChBkE,SAAUrQ,EAAMqQ,SAChBrI,GAAIhI,EAAMgI,GACV4K,WAAY5S,EAAM4S,WAClBC,UAAW7S,EAAM6S,UACjB/C,MAAO9P,EAAM8P,MACbgD,MAAO9S,EAAM8S,MACbK,WAAYnT,EAAMmT,WAClBD,SAAUlT,EAAMkT,SAChBS,SAAU3T,EAAM2T,yBC9DjC7F,OAlBf,SAAmB9N,GACf,OACI,cAAC,IAAD,CAAKiH,EAAE,QAAQxG,GAAG,OAAlB,SACI,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,KAAD,CAAYc,YAAY,OAAOuK,aAAW,kBAAkBiC,KAAM,cAACC,GAAA,EAAD,QAGtE,cAAC,KAAD,CAAO/E,YAAajJ,EAAMkL,KAAMhJ,KAAK,SAAS8G,MAAOhJ,EAAMgJ,MAAO+C,SAAU/L,EAAM+L,iBCoDnFkI,OAvDf,WAA4B,IAAD,EACanH,cAA5BC,EADe,EACfA,OAAQC,EADO,EACPA,OAAQC,EADD,EACCA,QADD,EAEC5J,mBAAS,IAFV,mBAEhB6B,EAFgB,KAEVmE,EAFU,OAGOhG,oBAAS,GAHhB,mBAGNoD,GAHM,WAKjBI,EAAS,uCAAG,sBAAAC,EAAA,sDACdyI,KACK5J,MAAK,SAACoB,GACCA,EAAOZ,QACPkD,EAAQtC,EAAOiI,UAEfvI,EAAUM,EAAOf,WANf,2CAAH,qDAcf,OAJAgB,qBAAU,WACNH,MACD,IAGC,qCACI,cAAC,IAAD,CAAQnC,SAAS,QAAQI,OAAO,OAAOyJ,MAAM,OAAOC,OAAO,OAAOC,SAAU,cAACC,GAAA,EAAD,IAAanN,YAAY,OAAO6G,QAAS4E,EAArH,0BAGA,eAAC,IAAD,CAAOD,OAAQA,EAAQE,QAASA,EAAhC,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CAActI,IAAI,QAAlB,SACI,cAAC,GAAD,SAGR,cAAC,IAAD,CAAQsC,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAGoL,GAAG,QAAQ1E,GAAG,QAA9C,SACI,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACI,cAAC,IAAD,CAASO,GAAG,OAAON,GAAG,OAAtB,6BACA,cAAC,IAAD,UACI,cAAC,GAAD,CAAWyK,KAAK,yBAEnBhG,EAAKlB,KAAI,SAAC3B,GAAD,OACN,cAAC,GAAD,CAEI2F,GAAI3F,EAAK2F,GACTmE,SAAS,aACTyG,WAAYvQ,EAAK8M,UACjB0D,UAAWxQ,EAAK+M,SAChBU,MAAOzN,EAAKyN,MACZgD,MAAOzQ,EAAKyQ,OANPzQ,EAAK2F,gBC2DvB9G,OArGf,SAAsBlB,GAElB,IADA,IAAImB,EAAO,GACFC,EAAI,EAAGA,EAAIpB,EAAMmB,KAAKtB,OAAQuB,IACnCD,EAAKE,KACD,mCACI,cAAC,IAAD,CAAOC,QAAQ,UAAUC,YAAY,OAArC,SACKvB,EAAMmB,KAAKC,QA4B5B,OACI,eAAC,IAAD,CAAKhB,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,OAAOC,GAAG,OAAOC,UAAU,KAArG,UACI,eAAC,IAAD,CAAOc,UAAW,CAAEC,KAAM,SAAUC,GAAI,OAASjB,GAAG,OAApD,UACI,cAAC,IAAD,CAAOa,QAAQ,QAAQC,YAAY,SAAST,SAAS,OAArD,SACKd,EAAM2B,QAvBN,SAACC,GACd,IAAIf,EAAQ,GAUZ,MATc,cAAVe,EACAf,EAAQ,QAEO,kBAAVe,EACLf,EAAQ,SAEO,cAAVe,IACLf,EAAQ,OAGR,cAAC,IAAD,CAAOS,QAAQ,SAASO,EAAE,OAAON,YAAaV,EAA9C,SACKe,IAYAE,CAAW9B,EAAM4B,UAKtB,eAAC,IAAD,CAAYG,QAAS,EAAGC,QAAQ,MAAhC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMlB,SAAS,KAAf,2BACA,eAAC,IAAD,CAAMA,SAAS,KAAf,UAAoB,cAAC,IAAD,CAChBmB,KAAK,KACLC,KAAK,OACLC,IAAI,aACJC,GAAG,QACJpC,EAAMqC,WAEb,eAAC,IAAD,WACI,cAAC,IAAD,CAAMvB,SAAS,KAAf,kBACA,cAAC,IAAD,CAAMA,SAAS,KAAf,SAAqBd,EAAMsC,aAKnC,cAAC,IAAD,IAGA,cAAC,IAAD,CAAMxB,SAAS,KAAKyB,GAAG,OAAvB,kBACA,cAAC,IAAD,CAAOf,UAAW,CAAEC,KAAM,SAAUC,GAAI,OAAxC,SACKP,IAIL,eAAC,IAAD,CAAYY,QAAS,EAAGC,QAAQ,MAAhC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMlB,SAAS,KAAKyB,GAAG,OAAvB,2BACA,cAAC,IAAD,CAAOjB,QAAQ,UAAUC,YAAY,SAArC,SACKvB,EAAMwC,kBAIf,eAAC,IAAD,WACI,cAAC,IAAD,CAAM1B,SAAS,KAAKyB,GAAG,OAAvB,kBACA,cAAC,IAAD,CAAOjB,QAAQ,UAAUC,YAAY,OAArC,SACKvB,EAAMyC,iBCtChByR,OA3Cf,WACI,OACI,mCACI,cAAC,IAAD,CAAQjN,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAG0G,GAAG,QAAnC,SACI,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACI,cAAC,IAAD,CAASO,GAAG,OAAON,GAAG,OAAtB,8BACA,cAAC,IAAD,UACA,cAAC,GAAD,CAAWyK,KAAK,0BAEhB,cAAC,IAAD,IACA,cAAC,IAAD,CAAS/D,GAAG,KAAKlF,KAAK,KAAKlB,GAAG,OAAON,GAAG,OAAO8B,GAAG,OAAlD,uBACA,cAAC,IAAD,UACI,eAAC,KAAD,CAAMP,QAAQ,OAAd,UACI,cAAC,KAAD,UACI,cAAC,GAAD,CAAcL,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,oBAE9J,cAAC,KAAD,UACG,cAAC,GAAD,CAAcQ,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,oBAE9J,cAAC,KAAD,UACG,cAAC,GAAD,CAAcQ,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,oBAE9J,cAAC,KAAD,UACG,cAAC,GAAD,CAAcQ,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,oBAE9J,cAAC,KAAD,UACG,cAAC,GAAD,CAAcQ,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,oBAE9J,cAAC,KAAD,UACG,cAAC,GAAD,CAAcQ,MAAM,UAAUU,KAAK,eAAeI,KAAK,aAAaD,aAAa,MAAMF,KAAK,aAAaV,MAAM,YAAYT,KAAM,CAAC,UAAW,aAAc,iCCuR9KgT,GAxPU,WACnB,IAAI9R,EAAOpD,IACPkG,EAAY,IAAIC,QAFK,EAGML,IAAzBC,EAHmB,EAGnBA,cAAe9F,EAHI,EAGJA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAEhC,IAAIoG,EAAiB,CACjBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAGd,OAAOC,MAAM,GAAD,OAAIhD,EAAOE,OAAX,2BAAoCP,GAAQiD,GACnDK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QACT,MAAO,CACHiO,UAAWxO,EAASwO,UACpBjO,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAG1C,MAFAF,EAAMF,SAAWA,EACjB1C,QAAQC,IAAI2C,GACNA,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,gCACRG,SAAS,OCzEVjF,GAhCM,SAAC,GAAoD,IAAlDS,EAAiD,EAAjDA,MAAOc,EAA0C,EAA1CA,KAAM4R,EAAoC,EAApCA,iBAAkB/R,EAAkB,EAAlBA,KAAMV,EAAY,EAAZA,MACzD,OACI,cAAC,IAAD,CAAKvB,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAAS+T,GAAG,IAA9D,SAEI,eAAC,IAAD,CAAK9T,EAAE,IAAP,UACI,cAAC,IAAD,CAAOF,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,OAA9C,SACKK,IAIL,cAAC,IAAD,CACIW,GAAG,IACHiL,WAAW,WACXrG,GAAG,KACHsG,WAAW,QACXC,aAAW,EALf,SAOK/L,IAGL,eAAC,IAAD,WACI,cAAC,IAAD,yBAAec,EAAK8R,MAAM,KAAK,MAC/B,cAAC,IAAD,yBAAe9R,EAAK8R,MAAM,KAAK,MAC/B,cAAC,IAAD,uCAA6BF,KAC5B/R,GAAQ,cAAC,IAAD,2BAAiBA,cC+BvC,IAAMkS,GAAW,WACtB,OACE,eAAC,KAAD,CACExO,OAAO,OACP1E,QAAQ,SACRmT,cAAc,SACdlH,WAAW,SACXmH,eAAe,SACf/I,UAAU,SACVgJ,GAAG,IAPL,UASE,cAAC,KAAD,CAAWrE,QAAQ,OAAOlO,GAAI,IAC9B,cAAC,KAAD,CAAYG,GAAI,EAAG9B,GAAI,EAAGK,SAAS,KAAnC,0DAGA,eAAC,KAAD,CAAkB8T,SAAS,KAA3B,UACE,cAAC,IAAD,4DACA,cAAC,KAAD,CAAMhG,GAAG,sBAAsBzH,GAAI2K,KAAnC,SACE,cAAC,IAAD,CAAQxR,aAAa,MAAM2D,EAAE,IAAI0Q,GAAG,IAAI/H,GAAG,IAAIa,WAAW,IAAIxL,KAAK,KAAnE,4CAUK4S,GApEf,WAA6B,IAAD,EACYxR,mBAAS,IADrB,mBACnByR,EADmB,KACNC,EADM,KAEpBlO,EAAS,uCAAG,sBAAAC,EAAA,sDAChBqN,KACGxO,MAAK,SAACoB,GACDA,EAAOZ,SACT4O,EAAehO,EAAOqN,cAJZ,2CAAH,qDAWf,OAHApN,qBAAU,WACRH,MACC,IAED,mCACE,cAAC,IAAD,CAAQI,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAG0G,GAAG,QAAnC,SACE,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACE,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,MAAMlB,GAAG,OAAON,GAAG,OAAzC,uBAGA,cAAC,IAAD,CAAS0G,GAAG,KAAKlF,KAAK,KAAKlB,GAAG,OAAON,GAAG,OAAxC,+CAGA,cAAC,IAAD,IACuB,GAAtBqU,EAAYjV,QAAe,cAAC,GAAD,IAC3BiV,EAAY9Q,KAAI,SAACgR,EAAU5T,GAAX,OACf,cAAC,GAAD,CAEAO,MAAOqT,EAASrT,MAAMO,KACtBO,KAAMuS,EAASvS,KACf4R,iBAAkBW,EAASX,iBAC3B/R,KAAM0S,EAAS1S,KACfV,MAAOoT,EAASpT,OALXoT,EAAS5V,gBCqDXyD,GAvFI,SAAC7C,GAChB,IAAM8C,EAAQ9C,EAAM+C,gBAEdC,EAAMhD,EAAMiD,YAElBC,QAAQC,IAAIH,GALc,MAMMI,IAAMC,SAAS,CAC3CC,SAAU,SACVC,UAAW,UACXC,KAAM,IACNC,MAAO,GACPC,QAAS,IAXa,mBAMnBC,EANmB,KAMTC,EANS,KAsC1B,OACI,cAAC,IAAD,CAAKlD,UAAU,KAAf,SACI,eAAC,IAAD,yBACImD,qBAAsBnB,EAAOC,mBAC7BvC,MAAO,OACP0D,OAAQ,IACRR,SAAUK,EAASL,SACnBC,UAAWI,EAASJ,UACpBC,KAAMG,EAASH,KACfO,iBAAkB,SAAAJ,GAAQ,OAAIC,EAAYD,KACtCA,GARR,cAUKb,EAAQkB,KAAI,SAACC,EAAG7C,GAAJ,OACL,wBAAC,IAAD,2BAAY6C,GAAZ,IAAeC,IAAK9C,IAChB,qBACI0C,OAhBf,GAiBeK,QAAQ,YACRC,MAAO,CACHC,OAAQ,UACRC,KAAM,OACNC,OAAQ,OACRC,UAAU,aAAD,QAAe,GAAf,eAtB5B,GAsB4B,QAPjB,SAUI,sBAAMC,EA7BxB,8QA+Bc,cAAC,IAAD,CAAM5D,MAAM,SAAZ,mBACImC,EAAM5B,GAAGc,YAMzB,qBAAKkC,MA1DM,CACnBM,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,QAAS,QAsDD,SACI,cAAC,IAAD,MAEJ,qBAAKT,MAtDA,CACbM,SAAU,WACVC,IAAK,GACLC,KAAM,EACNC,QAAS,QAkDD,SACI,cAAC,IAAD,MAEJ,qBAAKT,MAlDS,CACtBM,SAAU,WACVI,OAAQ,GACRF,KAAM,EACNC,QAAS,QA8CD,SACI,cAAC,IAAD,a,oBCoELoQ,OA5If,SAAyBjV,GAAQ,IAAD,EACJqD,mBAAS,CAC7BhB,KAAMpD,IACN0C,MAAO3B,EAAMkF,KAAK8C,GAClBvF,KAAM,KACNyS,KAAM,KACNb,iBAAkB,OANM,mBACrBnP,EADqB,KACfmE,EADe,OASQhG,mBAAS,CACzCoF,WAAY,EAAC,GAAM,GAAO,GAC1BI,aAAc,CAAC,GAAI,GAAI,MAXC,mBASrBJ,EATqB,KASTC,EATS,KAatB2C,EAAe,SAACb,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACrB9G,EAAOsI,EAAMc,OAAOpJ,KAEX,SAATA,EACA6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,QAChC,SAATxG,GACP6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,QAGpDW,EAAQ,2BAAKnE,GAAN,mBAAasF,EAAMc,OAAOpJ,KAAO8G,MAvBhB,EA4BQ8D,cAA5BC,EA5BoB,EA4BpBA,OAAQC,EA5BY,EA4BZA,OAAQC,EA5BI,EA4BJA,QA5BI,EA6BY5J,mBAAS,MA7BrB,mBA6BrB8R,EA7BqB,KA6BPC,EA7BO,KA8BtB7K,EAAY,uCAAG,WAAOC,GAAP,2BAAA1D,EAAA,sDACjB0D,EAAMC,kBAEFtF,EAAY,IAAIC,SACVC,OAAO,eAAgB,oBAJhB,EAKcN,IAAzBC,EALW,EAKXA,cAAe9F,EALJ,EAKIA,MACrBiG,EAAUE,OAAOL,EAAe9F,GAC5B2L,EAAa,CACbxI,KAAM6C,EAAK7C,KACXV,MAAOuD,EAAKvD,MACZc,KAAK,GAAD,OAAKyC,EAAKzC,KAAV,YAAkByC,EAAKgQ,KAAvB,YACJb,iBAAkBnP,EAAKmP,kBAE3B,IACQpJ,EAAMnD,KAAKC,UAAU8C,GAErBvF,EAAiB,CACjBC,OAAQ,OACRC,QAASL,EACT0C,KAAMoD,EACNxF,SAAU,UAGdC,MAAM,GAAD,OAtDA,wBAsDA,cAA0BJ,GAC1BK,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAoB,GACEA,EAAOZ,UACP6G,IACAoI,GAAgB,OAGvB/O,OAAM,SAAAP,GAAK,OAAIsP,GAAgB,MACtC,MAAOhK,GACLgK,GAAgB,GAjCH,2CAAH,sDAoClB,OAEI,eAAC,IAAD,CAAK5J,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UACI,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,+BAGA,sBAAMF,OAAO,SAASuH,SAAU1I,EAAhC,SACI,eAAC,IAAD,CAAOvI,QAAS,EAAhB,UAEI,cAAC,IAAD,mBACA,eAAC,KAAD,CAAa+G,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,OACL7C,MAAO9D,EAAKzC,KACZP,KAAK,OACL+G,YAAY,OACZ6C,aAAW,OACXE,UAAWvD,EAAWA,WAAW,GACjCsD,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCyB,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAG7D,cAAC,IAAD,mBACA,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,cAAC,KAAD,CACI8C,KAAK,OACL7C,MAAO9D,EAAKgQ,KACZhT,KAAK,OACL+G,YAAY,OACZ6C,aAAW,OACXE,UAAWvD,EAAWA,WAAW,GACjCsD,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCyB,iBAAiB,YAErB,cAAC,KAAD,CAAgBpL,MAAM,UAAtB,SAAiC4H,EAAWI,aAAa,QAE7D,cAAC,KAAD,CAAYkD,SA/EH,SAAC/C,GACtBK,EAAQ,2BAAKnE,GAAN,IAAYmP,iBAAkBrL,MA8EeA,MAAO9D,EAAKmP,iBAApD,SACI,cAAC,IAAD,CAAO7S,UAAU,MAAjB,SACKxB,EAAMkF,KAAKmF,QAAQrG,KAAI,SAAAuB,GAAM,OAAI,cAAC,KAAD,CAAOyD,MAAOzD,EAAd,SAAuBA,WAGjE,cAAC,IAAD,CAAQhE,YAAY,OAAOsK,KAAK,SAAhC,uBAIR,eAAC,IAAD,CAAOkB,OAAQA,EAAQE,QAASA,EAAS4D,YAAU,EAAnD,UACI,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,UACKsE,EACG,eAAC,IAAD,CAAQ1U,GAAG,OAAX,UACI,cAACqQ,GAAA,EAAD,CAAiB7J,EAAG,GAAIpF,EAAG,GAAIhB,MAAM,cACrC,cAAC,IAAD,mCAGJ,eAAC,IAAD,WACI,cAACkQ,GAAA,EAAD,CAAc9J,EAAG,GAAIpF,EAAG,GAAIhB,MAAM,YAClC,cAAC,IAAD,4CClHrBwU,GAlBW,SAACrV,GAAW,IAAD,EACG8M,cAA5BC,EADyB,EACzBA,OAAQC,EADiB,EACjBA,OAAQC,EADS,EACTA,QACxB,OACI,qCACI,cAAC,IAAD,CAAQ1L,YAAY,OAAO6G,QAAS4E,EAApC,6BACA,eAAC,IAAD,CAAOD,OAAQA,EAAQE,QAASA,EAAhC,UACI,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,GAAD,CAAiB/H,KAAMlF,EAAMkF,mBCyDtCkE,OAtEf,SAA8BpJ,GAC1B,IAAMkF,EAAKlF,EAAMkF,KACjB,OAEI,eAAC,IAAD,CAAKsG,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UAEQ,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,SACK1G,EAAKwF,YAEV,cAAC,IAAD,CAAKwB,OAAO,KAAKzL,GAAG,OAApB,SACI,cAAC,IAAD,CAAO0B,IAAK+C,EAAKiH,SAAUC,IAAI,QAAQC,QAAQ,SAIvD,eAAC,IAAD,CAAOrK,QAAS,EAAhB,UACI,eAAC,IAAD,CAAKkK,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAA1C,UACQ,cAAC,IAAD,CAAMK,SAAS,MAAf,yBACA,cAAC,IAAD,UAAOoE,EAAKyF,iBAGhB,cAAC,IAAD,UACI,cAAC,GAAD,CAAY5H,gBAAiB,CAAC,CAACO,SAAS4B,EAAK5B,SAASC,UAAU2B,EAAK3B,YAAaN,YAAa,CAAC,CAACf,KAAKgD,EAAKwF,gBAK/G,cAAC,IAAD,CAAKwB,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAA1C,SACI,eAAC,IAAD,CAAMK,SAAS,MAAf,qBAEA,eAAC,IAAD,CAAOC,GAAG,IAAID,SAAS,QAAQS,YAAY,QAAQD,QAAQ,UAA3D,UACS4D,EAAKuE,SADd,cAOJ,cAAC,IAAD,CAAKyC,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAA1C,SACI,eAAC,IAAD,CAAMK,SAAS,MAAf,8BAECoE,EAAKmF,QAAQrG,KAAI,SAACuB,EAAQnE,GAAT,OACd,cAAC,IAAD,CAAO6C,EAAE,MAAM3D,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,SAAtD,SACKgE,YAQb,cAAC,IAAD,CAAK2G,OAAO,KAAK1L,EAAE,OAAO6L,QAAQ,KAAK5L,GAAG,OAA1C,SACI,eAAC,IAAD,CAAMK,SAAS,MAAf,0BACJ,eAAC,IAAD,CAAOC,GAAG,IAAID,SAAS,QAAQS,YAAY,MAAMD,QAAQ,UAAzD,UACa4D,EAAKyE,YADlB,eAOI,cAAC,GAAD,CAAmBzE,KAAMA,WC9DjD,SAAS2H,GAAkB7M,GAAQ,IAAD,EACM8M,cAA5BC,EADsB,EACtBA,OAAQC,EADc,EACdA,OAAQC,EADM,EACNA,QACxB,OACI,cAAC,IAAD,CAAK7M,MAAM,OAAOC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAASC,EAAE,OAAOC,GAAG,OAApF,SACI,eAAC,IAAD,CAAMoB,EAAE,OACJqL,gBAAgB,iBAChBC,aAAa,iBACbC,IAAK,EAHT,UAKI,cAAC,IAAD,CAAUC,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOzJ,IAAKnC,EAAMmM,SAAUC,IAAI,mBAKxC,cAAC,IAAD,CAAUiB,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAA/D,SACI,eAAC,IAAD,CAAKlB,EAAE,IAAP,UACI,cAAC,IAAD,CAAKiE,EAAE,OAAO8I,WAAW,WAAzB,SACI,cAAC,IAAD,CAAOjN,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,OAA9C,mBAMJ,cAAC,IAAD,CACIgB,GAAG,IACHiL,WAAW,WACXrG,GAAG,KACHsG,WAAW,QACXC,aAAW,EALf,SAOI,cAAC,IAAD,CAAM5M,SAAS,MAAf,SAAsBd,EAAM0K,cAGhC,eAAC,IAAD,WACK1K,EAAMyJ,SADX,qBAEI,cAAC,IAAD,CAAKtC,GAAG,OAAOtG,MAAM,WAAWC,SAAS,UAG7C,eAAC,IAAD,WACKd,EAAM2J,YADX,eAEI,cAAC,IAAD,CAAKxC,GAAG,OAAOtG,MAAM,WAAWC,SAAS,UAI7C,eAAC,IAAD,CAAK2D,EAAE,OAAOlC,GAAG,IAAIgL,WAAW,SAAhC,UACI,cAAC,IAAD,CAAMzM,SAAS,KAAf,yBACCd,EAAMqK,QAAQrG,KAAI,SAACuB,EAAQnE,GAAT,OACf,cAAC,IAAD,CAAO6C,EAAE,MAAM3D,aAAa,OAAOsM,GAAG,IAAIrL,YAAY,SAAtD,SACKgE,eAQrB,eAAC,IAAD,CAAU8H,QAAS,CAAE5L,KAAM,EAAGC,GAAI,GAAK4L,QAAS,CAAE7L,KAAM,EAAGC,GAAI,GAAKkK,GAAG,OAAvE,UACI,cAAC,IAAD,CAAQ+B,UAAW,cAACC,GAAA,EAAD,IAAsBrM,YAAY,OAAOD,QAAQ,UAAU8G,QAAS4E,EAAvF,qBAEA,eAAC,IAAD,CAAOD,OAAQA,EAAQE,QAASA,EAAShL,KAAK,MAA9C,UACI,cAAC,IAAD,IAEA,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,GAAD,CAAsBiD,KAAMlF,EAAOmL,MAAO8B,kBActEJ,GAAkBgB,aAAe,CAC7BtO,KAAM,QAEKsN,UCnEAiB,OAlBf,SAAmB9N,GACf,OACI,cAAC,IAAD,CAAKiH,EAAE,QAAQxG,GAAG,OAAlB,SACI,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,KAAD,CAAYc,YAAY,OAAOuK,aAAW,kBAAkBiC,KAAM,cAACC,GAAA,EAAD,IAAgB5F,QAASpI,EAAMoI,YAGrG,cAAC,KAAD,CAAOa,YAAajJ,EAAMkL,KAAMhJ,KAAK,SAAS8G,MAAOhJ,EAAMgJ,MAAO+C,SAAU/L,EAAM+L,iBCuEnFkC,IClEA,IAEd,CACCqH,UAAWhP,EACXnF,KAAM,IACNkR,MAAO,YACPkD,OAAO,EACP7V,WAAY,CACX8V,EACAA,IAGF,CACCF,UAAWrH,GACX9M,KAAM,kBACNkR,MAAO,kBACP3S,WAAY,CACX8V,EACAA,IAGF,CACCF,UAAW7D,GACXtQ,KAAM,cACNkR,MAAO,aACP3S,WAAY,CACX8V,EACAA,IAGF,CACCF,UAAW9F,GACXrO,KAAM,YACNkR,MAAO,WACP3S,WAAY,CACX8V,EACAA,IAIF,CACCF,UAAWrB,GACX9S,KAAM,YACNkR,MAAO,WACP3S,WAAY,CACX8V,IAGF,CACCF,UAAWpB,GACX/S,KAAM,aACNkR,MAAO,YACP3S,WAAY,CACX8V,IAGF,CACCF,UAAW/C,GACXpR,KAAM,IACNkR,MAAO,YACP3S,WAAY,CACX8V,IAIF,CACCF,UD1EF,WAA2B,IAAD,EACsBjS,mBAAS,IAD/B,mBACfuE,EADe,KACCsG,EADD,OAEQ7K,oBAAS,GAFjB,mBAELoD,GAFK,aAIMpD,mBAAS,IAJf,mBAIf8K,EAJe,KAIPC,EAJO,KAchBvH,EAAS,uCAAG,sBAAAC,EAAA,sDACda,KACKhC,MAAK,SAACoB,GACCA,EAAOZ,QACP+H,EAAkBnH,EAAOa,gBAEzBnB,EAAUM,EAAOf,WANf,2CAAH,qDAUTqI,EAAU,uCAAG,WAAOC,GAAP,SAAAxH,EAAA,sDACfa,GAA6C2G,GACxC3I,MAAK,SAACoB,GACCA,EAAOZ,QACP+H,EAAkBnH,EAAOa,gBAEzBnB,EAAUM,EAAOf,WANd,2CAAH,sDAahB,OAHAgB,qBAAU,WACNH,MACF,IAEE,qCACI,cAAC,IAAD,CAAQnC,SAAS,QAAQI,OAAO,OAAOyJ,MAAM,OAAOC,OAAO,OAAOC,SAAU,cAACC,GAAA,EAAD,IAAanN,YAAY,OAArG,SACI,cAAC,KAAD,CAAM4F,GAAIwH,kBAAiBC,GAAG,oBAA9B,kCAEJ,cAAC,IAAD,CAAQ3H,EAAE,OAAOpF,EAAE,OAAOrB,EAAG,EAAI0G,GAAG,QAApC,SACI,eAAC,IAAD,CAAKD,EAAE,MAAMpF,EAAE,OAAOxB,YAAY,MAAMC,aAAa,KAAKE,EAAE,OAA5D,UACI,cAAC,IAAD,CAASO,GAAG,OAAON,GAAG,OAAtB,6BACA,cAAC,IAAD,UACI,cAAC,GAAD,CAAWyK,KAAK,2BAA2BlC,MAAOmF,EAAQpC,SAAU,SAACvB,GAAD,OAxCnE,SAACA,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACzBoF,EAAUpF,GACVqF,EAAW,CAACQ,UAAW7F,IAqCsEqC,CAAab,QAEnE,IAA1B5C,EAAe/H,OAAe,cAAC,IAAD,CAAKW,EAAE,OAAOG,GAAG,UAAUL,aAAa,KAAxC,SAA6C,cAAC,IAAD,CAAMQ,SAAS,KAAKD,MAAM,aAA1B,kCAAuE,KAClJ+G,EAAe5D,KAAI,SAACrC,EAAOP,GAAR,OAChB,cAAC,GAAD,CACI4G,GAAIrG,EAAMvC,IACVsL,UAAW/I,EAAMO,KACjByI,YAAahJ,EAAMgJ,YACnBrH,SAAU3B,EAAMmJ,SAASC,YAAY,GACrCxH,UAAW5B,EAAMmJ,SAASC,YAAY,GACtCtB,SAAU9H,EAAM8H,SAChBY,QAAS1I,EAAMmN,kBACfnF,YAAahI,EAAMgI,YACnBwC,SAAS,UACTzG,MAAOmB,gBCejC1F,KAAM,kBACNkR,MAAO,kBACP3S,WAAY,CACX8V,IAGF,CACCF,UAAWT,GACX1T,KAAM,IACNkR,MAAO,YACP3S,WAAY,CACX8V,K,oBCpFYC,GARQ,SAACC,GAAD,OAAe,SAAC1V,GACtC,OACC,qBAAKiQ,UAAU,mBAAf,SACC,cAACyF,EAAD,eAAe1V,QCAZ2V,GAAmB,SAAC3V,GACzB,OACC,cAAC4V,GAAA,EAAD,2BAAS5V,EAAM6V,KAAf,aACC,eAACC,GAAA,EAAD,WACC,6BAAK9V,EAAMqS,QACX,4BAAIrS,EAAM2K,cACV,qBAAKvG,MAAO,CAACvD,MAAO,WAApB,SAAiCb,EAAMqT,kBAY3CsC,GAAiB9H,aAAe,CAC/BlD,YAAY,sqCACZkL,IAAK,CAAEnU,GAAI,MAGGqU,sBAAKN,GAAeE,KCbnC,SAASK,GAAOhW,GACf,IAAIiW,EAAUC,cAOd,OACC,cAAC,KAAD,CACC9V,MAAM,OACNK,GAAI,EAFL,SAIC,cAAC,IAAD,CAAKL,MAAM,OAAOM,UAAU,KAA5B,SACC,eAAC,IAAD,CAAOyV,UAAQ,EAACzB,eAAe,gBAAgB9H,GAAI,EAAnD,UACC,cAAC,GAAD,IACA,cAAC,IAAD,CAAOuJ,UAAQ,EAACzB,eAAe,gBAAgBnS,GAAI,EAAG6T,MAAM,SAA5D,SACC,eAAC,IAAD,CAAQC,QAAS,cAAC,IAAD,CAAc5K,YAAY,aAA3C,UACEzL,EAAMV,OAAO0E,KAAI,gBAAG7C,EAAH,EAAGA,KAAMkR,EAAT,EAASA,MAAT,OACjB,cAAC,IAAD,CAECvR,SAAS,OACT0M,WAAW,OACX8I,WAAY,mBACZ7V,GAAI,CAAEgB,KAAM,EAAG8U,GAAI,GACnBnU,GAAI,CAAEX,KAAM,EAAG8U,GAAI,GACnBC,QAAQ,QAPT,SASC,cAAC,KAAD,CAAiBvG,UAAU,cAAcrB,GAAE,UAAK5O,EAAMyW,QAAX,OAAoBtV,GAA/D,SACEkR,GADSlR,IARNA,MAaNrC,KAAgB,cAAC,IAAD,CAAQsJ,QA9B/B,WACCrJ,aAAa2X,WAAW,SACxBT,EAAQ5U,KAAK,MA4BS,gCAoBxB2U,GAAOnI,aAAe,CACrB4I,OAAQ,GACRxG,UAAW,IAGZ,IAAM0G,GAAW,WAChB,OACC,cAAC,IAAD,CACCxP,GAAG,KACHlF,KAAK,MACLkQ,cAAe,QACfrR,SAAS,OACTwV,WAAY,mBALb,sBAcaP,kBAAKC,ICpFdY,GAAW,SAAC5W,GAAD,OAChB,cAAC,GAAD,2BAAsBA,EAAM6W,gBAA5B,aACE7W,EAAMqT,aAWTuD,GAAS/I,aAAe,CACvBgJ,eAAgB,CACfxE,MAAO,iBAERgB,SAAW,cAAC,KAAD,CAAMzE,GAAG,IAAT,2BAGGmH,sBAAKa,I,SCrBpB,SAASE,GAAT,GAA8D,IAAnCxX,EAAkC,EAAlCA,OAAQyX,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,cACtCC,EAAQC,YAAcH,GAC5B,OACC,eAAC,IAAD,WACEzX,EAAO0E,KAAI,SAACmT,GAAW,IACfhW,EAAqEgW,EAArEhW,KAAiBuU,EAAoDyB,EAA/D7B,UAAsBjC,EAAyC8D,EAAzC9D,SAAgC+D,GAASD,EAA/B9E,MAA+B8E,EAAxBzX,WAD/B,aACuDyX,EADvD,uDAGtB,OACC,wBAAC,IAAD,2BAAWC,GAAX,IAAiBlT,IAAK/C,EAAMA,KAAI,UAAK8V,EAAM9V,MAAX,OAAkBA,KACjD,cAACuU,EAAD,CAAWrC,SAAUA,QAIvB2D,GAAiB,cAAC,IAAD,UAAO,cAAC,GAAD,SAKbjB,sBAAKe,ICALO,OAff,WACC,IAAMJ,EAAQC,YAAc,QACxBI,EAAgB,GAEpB,OAAIxY,KAAcwY,EAAgBjY,EAAiBkY,IAIlD,eAAC,WAAD,WACC,cAAC,GAAD,CAAQjY,OAAQgY,EAAeb,OAAQQ,EAAM9V,KAAM8O,UAAU,aAC7D,cAAC,GAAD,CAAkB3Q,OAAQgY,EAAeP,SAAS,OAAOC,eAAa,QAL5D,cAAC,IAAD,CAAUpI,GAAG,O,iBCP1B,SAAS4I,GAAT,GAIa,IAHZnF,EAGW,EAHXA,MACAoF,EAEW,EAFXA,UACAC,EACW,EADXA,UACW,kDACX,OACC,mCAEC,sBAAKzH,UAAU,UAAf,UAEC,cAAC,IAAD,CAAQrE,GAAG,OAAX,SACC,eAAC,IAAD,CAAQ3E,EAAG,CAAExF,KAAM,MAAOC,GAAI,OAA9B,UACC,cAAC,KAAD,CAAWiW,QAAQ,SAASrF,IAAI,EAAhC,SACC,cAAC,IAAD,CAAMxR,SAAU,CAAEW,KAAM,MAAO8U,GAAI,OAAS1V,MAAM,QAAlD,SACEwR,MAIH,cAAC,KAAD,CAAWsF,QAAQ,QAAQrF,IAAI,EAA/B,SACC,eAAC,IAAD,CAAMxR,SAAU,CAAEW,KAAM,KAAM8U,GAAI,MAAQ1V,MAAM,WAAWJ,GAAG,OAA9D,UACEgX,EADF,gCAKD,cAAC,IAAD,CACCtQ,GAAG,KACHlF,KAAK,KACLpB,MAAM,cACN+W,QAAQ,MACRpK,WAAW,SACXC,WAAY,IACZ9B,UAAW,CAAC,SAAU,SAAU,OAAQ,QAPzC,SASC,cAAC,KAAD,CAAWgM,QAAQ,QAAQrF,IAAI,EAA/B,SACC,cAAC,IAAD,CAAMzR,MAAM,WAAWJ,GAAG,OAAOK,SAAS,KAA1C,SACE4W,QAKJ,cAAC,KAAD,CAAWC,QAAQ,QAAQrF,IAAI,EAA/B,SACC,cAAC,KAAD,CAAM1D,GAAG,SAASzH,GAAI2K,KAAtB,SACC,cAAC,IAAD,CAAQxR,aAAa,MAAMqU,GAAG,IAAI/H,GAAG,IAAIa,WAAW,IAAIxL,KAAK,KAA7D,4BASJ,cAAC,IAAD,CAAKpB,MAAM,OAAO6D,SAAS,QAAQI,OAAO,MAAMmC,EAAE,OAAlD,SACC,cAAC,IAAD,UAAQ,cAAC,IAAD,CAAMpG,MAAM,WAAWC,SAAU,CAAEW,KAAM,KAAM8U,GAAI,MAAnD,oFAObiB,GAAY3J,aAAe,CAC1BwE,MAAO,UACPoF,UAAW,oCACXC,UAAW,0CAEG3B,sBAAKyB,I,oBCmCb,IAAMK,GApGC,SAACC,GAEX,OAAOpS,MAAM,GAAD,OAAIhD,EAAOE,OAAX,gBAAiC,CACzC2C,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBqC,KAAMC,KAAKC,UAAU,CAAEgQ,SAAUD,EAAMhI,MAAOa,SAAUmH,EAAMnH,aAE7DhL,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACF,GAAIA,EAASO,QAET,OADApH,aAAaiZ,QAAQ,QAASpS,EAAS1G,OAChC,CACH8G,OAAQ,oBACRG,SAAS,GAIb,IAAIL,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAE1C,MADAF,EAAMF,SAAWA,EACXE,KAGbO,OAAM,SAAAP,GACH,MAAO,CACHE,OAAQ,sBACRG,SAAS,OCkFV8R,OAvHf,YAA2C,IAAtBC,EAAqB,EAArBA,mBAAqB,EAEN7U,oBAAS,GAFH,mBAE/BiG,EAF+B,KAErB6O,EAFqB,OAGd9U,oBAAS,GAHK,mBAG/BsM,EAH+B,KAGzBC,EAHyB,OAKFvM,mBAAS,CACzCoF,WAAY,EAAC,GAAO,GACpBI,aAAc,CAAC,GAAI,MAPe,mBAK/BJ,EAL+B,KAKnBC,EALmB,OAUdrF,mBAAS,CAC7ByM,MAAO,GACPa,SAAU,KAZwB,mBAU/BzL,EAV+B,KAUzBmE,EAVyB,KAqChCgC,EAAe,SAACb,GAClB,IAAIxB,EAAQwB,EAAMc,OAAOtC,MACrB9G,EAAOsI,EAAMc,OAAOpJ,KAEX,UAATA,EACAqG,GAAcS,EAAOP,EAAYC,EAAe,GAElC,aAATxG,GACL6G,GAAWC,EAAOP,EAAYC,EAAe,EAAG,YAIpDW,EAAQ,2BAAKnE,GAAN,mBAAasF,EAAMc,OAAOpJ,KAAO8G,MAI5C,OAEI,eAAC,IAAD,CAAKwC,OAAO,MAAMC,YAAY,WAAWjL,EAAG,CAAC,MAAO,OAAQ,QAA5D,UACI,cAAC,IAAD,CAAS2G,GAAG,KAAKlF,KAAK,KAAK0J,UAAU,SAASzE,GAAG,OAAO0E,GAAG,MAA3D,oBAGCtC,EAAW,eAAC,KAAD,CAAOtD,OAAO,QAAQvF,GAAG,OAAzB,UACR,cAAC,KAAD,IADQ,yBAGD,KACX,sBAAMiL,OAAO,SAAb,SACI,eAAC,IAAD,CAAO1J,QAAS,EAAhB,UAEI,eAAC,KAAD,CAAa+G,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAkBsK,SAAU,cAAC+E,GAAA,EAAD,MAC5B,cAAC,KAAD,CACIvM,KAAK,QACL7C,MAAO9D,EAAK4K,MACZ7G,YAAY,QACZ6C,aAAW,QACX5J,KAAK,QACL6J,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAkBxD,EAAWA,WAAW,GAAK,YAAY,eAGjE,cAAC,KAAD,CAAgB5H,MAAO4H,EAAWA,WAAW,GAAK,YAAY,UAA9D,SAA0EA,EAAWI,aAAa,QAKtG,eAAC,KAAD,CAAaE,YAAU,EAAvB,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAkBsK,SAAU,cAACgF,GAAA,EAAD,MAC5B,cAAC,KAAD,CACIxM,KAAM8D,EAAO,OAAS,WACtB3G,MAAO9D,EAAKyL,SACZ1H,YAAY,WACZ6C,aAAW,WACX5J,KAAK,WACL6J,SAAU,SAACvB,GAAD,OAAWa,EAAab,IAClCwB,UAAWvD,EAAWA,WAAW,GACjCwD,iBAAkBxD,EAAWA,WAAW,GAAK,YAAY,YAE7D,cAAC,KAAD,CAAmBrI,MAAM,SAAzB,SACI,cAAC,IAAD,CAAQyB,EAAE,UAAUI,KAAK,KAAKmG,QAAS,kBAAMwH,GAASD,IAAtD,SACKA,EAAO,OAAS,cAK7B,cAAC,KAAD,CAAgB9O,MAAO4H,EAAWA,WAAW,GAAK,YAAY,UAA9D,SAA0EA,EAAWI,aAAa,QAKtG,cAAC,IAAD,CAAQtH,YAAY,OAAOsK,KAAK,SAASzD,QA3FpC,SAACoC,GAClBA,EAAMC,iBACN,IACIoN,GAA4B3S,GACvBS,MAAK,SAACoB,GACCA,EAAOZ,QACP+R,IAThBC,GAAY,MAeV,MAAOrS,MA+EG,6BChHpB,SAASwS,KACR,IAAIrC,EAAUC,cAOd,OACC,mCACC,cAAC,GAAD,CAAWgC,mBAPb,WAECjC,EAAQ5U,KAAK,aAUA0U,sBAAKuC,ICALC,OAff,WACC,OACC,cAAC,WAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOpX,KAAK,SAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACC,cAAC,GAAD,YCPL,SAASqX,KACR,OAAO1Z,IACL,cAAC,IAAD,CAAU8P,GAAG,SAEb,cAAC,GAAD,IAIYmH,sBAAKyC,ICPpB,SAASC,KACR,OACC,cAAC,IAAD,CAAQxC,QAASA,EAAjB,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAO9U,KAAK,OAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACC,cAAC,GAAD,WAOU4U,sBAAK0C,ICPLC,G,4JATd,WACC,OACC,cAAC,IAAD,UACC,cAAC,GAAD,U,GAJchD,aCQHiD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlT,MAAK,YAAkD,IAA/CmT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.7de31a76.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({});\n","import { intersection } from 'lodash';\nimport jwt_decode from \"jwt-decode\";\n\nexport function isLoggedIn() {\n\treturn !!localStorage.getItem('token');\n}\n\nexport function getUserRole() {\n\tconst token = localStorage.getItem(\"token\");\n    const data = jwt_decode(token);\n\treturn data.role;\n}\n\nexport function getUserId() {\n\tconst token = localStorage.getItem(\"token\");\n    const data = jwt_decode(token);\n\treturn data._id;\n}\n\nexport function isArrayWithLength(arr) {\n\treturn (Array.isArray(arr) && arr.length);\n}\n\nexport function getAllowedRoutes(routes) {\n\tconst token = localStorage.getItem(\"token\");\n    const data = jwt_decode(token);\n\tconst role = [data.role];\n\treturn routes.filter(({ permission }) => {\n\t\tif(!permission) return true;\n\t\telse if(!isArrayWithLength(permission)) return true;\n\t\telse return intersection(permission, role).length;\n\t});\n}\n","export default {\n\tSUPER_ADMIN: 'super_admin',\n\tADMIN: 'admin',\n\tASSISTANT: 'moderater',\n\tCUSTOMER: 'user',\n};\n","import React from \"react\";\r\nimport { Box, Text, useColorMode} from \"@chakra-ui/react\";\r\n\r\n\r\nfunction ProgressCard(props) {\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='5px' mb='10px' boxShadow=\"xl\"\r\n            bg={colorMode === 'light' ? `${props.colour}.400` : `${props.colour}.900`}>\r\n \r\n            \r\n            <Text color='white' fontSize=\"6xl\" ml='10px'>\r\n                {props.currentvalue}\r\n            </Text>\r\n\r\n            <Text color='white' fontSize=\"2xl\" ml='10px'>\r\n                {props.Heading}\r\n            </Text>\r\n\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default ProgressCard;","import React from \"react\";\r\nimport { Box, Text, Badge, Avatar, Stack, SimpleGrid,Divider } from \"@chakra-ui/react\";\r\n\r\n\r\nfunction ScheduleCard(props) {\r\n    var path = [];\r\n    for (var i = 0; i < props.path.length; i++) {\r\n        path.push(\r\n            <>\r\n                <Badge variant=\"outline\" colorScheme=\"cyan\">\r\n                    {props.path[i]}\r\n\r\n                </Badge>\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    var stateBadge = (state) => {\r\n        var color = '';\r\n        if (state === 'completed') {\r\n            color = 'green';\r\n        }\r\n        else if (state === 'not-completed') {\r\n            color = 'orange';\r\n        }\r\n        else if (state === 'cancelled') {\r\n            color = 'red';\r\n        }\r\n        return (\r\n            <Badge variant=\"subtle\" h='20px' colorScheme={color}>\r\n                {state}\r\n            </Badge>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='10px' mb='10px'  boxShadow=\"xl\">\r\n            <Stack direction={{base:\"column\", md:'row'}} mb='10px'>\r\n                <Badge variant=\"solid\" colorScheme=\"purple\" fontSize=\"20px\">\r\n                    {props.place}\r\n                </Badge>\r\n                {stateBadge(props.state)}\r\n\r\n            </Stack>\r\n\r\n\r\n            <SimpleGrid columns={2} spacing='1px'>\r\n                <Box>\r\n                    <Text fontSize=\"xs\"> Schedule By,</Text>\r\n                    <Text fontSize=\"xs\"><Avatar\r\n                        size=\"xs\"\r\n                        name='user'\r\n                        src='./user.png'\r\n                        mr='5px'\r\n                    />{props.user}</Text>\r\n                </Box>\r\n                <Box>\r\n                    <Text fontSize=\"xs\">Fair</Text>\r\n                    <Text fontSize=\"xl\">{props.fair}</Text>\r\n\r\n                </Box>\r\n            </SimpleGrid>\r\n\r\n            <Divider />\r\n\r\n\r\n            <Text fontSize=\"lg\" mt='10px'>Path</Text>\r\n            <Stack direction={{base:\"column\", md:'row'}}>\r\n                {path}\r\n            </Stack>\r\n\r\n\r\n            <SimpleGrid columns={2} spacing='1px'>\r\n                <Box>\r\n                    <Text fontSize=\"lg\" mt='10px'>Travel Method</Text>\r\n                    <Badge variant=\"outline\" colorScheme=\"orange\">\r\n                        {props.travelmethod}\r\n\r\n                    </Badge>\r\n                </Box>\r\n                <Box>\r\n                    <Text fontSize=\"lg\" mt='10px'>Date</Text>\r\n                    <Badge variant=\"outline\" colorScheme=\"blue\">\r\n                        {props.date}\r\n\r\n                    </Badge>\r\n\r\n                </Box>\r\n            </SimpleGrid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default ScheduleCard;","const config = {\r\n    MAPBOX_ACCESSTOKEN: 'pk.eyJ1IjoiY2hhbmRpbWEwNjk2IiwiYSI6ImNranpuc3J5ZDA5ZDgyb21uNWx2aDhncjkifQ.iPwQZj5TmOdaHWF-1zCw_g',\r\n    apiUrl : 'http://localhost:5000'\r\n}\r\n\r\nexport default config;","import React from 'react';\r\nimport ReactMapGL, {\r\n    Marker,\r\n    NavigationControl,\r\n    ScaleControl,\r\n    GeolocateControl\r\n} from 'react-map-gl';\r\nimport {  Box, Text } from \"@chakra-ui/react\";\r\n\r\nimport config from \"../../config/config\";\r\n\r\nconst PreviewMap = (props) => {\r\n    const markers=props.place_locations;\r\n    \r\n    const names=props.place_names;\r\n\r\n    console.log(names)\r\n    const [viewport, setViewport] = React.useState({\r\n        latitude: 6.795165,\r\n        longitude: 79.900616,\r\n        zoom: 7.5,\r\n        pitch: 40,\r\n        bearing: 0\r\n    });\r\n    const geolocateStyle = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const navStyle = {\r\n        position: 'absolute',\r\n        top: 72,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const scaleControlStyle = {\r\n        position: 'absolute',\r\n        bottom: 36,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n    const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\n    const SIZE = 20;\r\n    return (\r\n        <Box boxShadow=\"xl\">\r\n            <ReactMapGL\r\n                mapboxApiAccessToken={config.MAPBOX_ACCESSTOKEN}\r\n                width={'100%'}\r\n                height={400}\r\n                latitude={viewport.latitude}\r\n                longitude={viewport.longitude}\r\n                zoom={viewport.zoom}\r\n                onViewportChange={viewport => setViewport(viewport)}\r\n                {...viewport}\r\n            >\r\n                {markers.map((m, i) => (\r\n                        <Marker {...m} key={i}>\r\n                            <svg\r\n                                height={SIZE}\r\n                                viewBox=\"0 0 24 24\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    fill: '#d00',\r\n                                    stroke: 'none',\r\n                                    transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n                                }}\r\n                            >\r\n                                <path d={ICON} />\r\n                            </svg>\r\n                            <Text color='tomato'>\r\n                            {`${names[i].name}`}\r\n                            </Text>\r\n\r\n                        </Marker>\r\n                    ))\r\n                    }\r\n                <div style={geolocateStyle}>\r\n                    <GeolocateControl />\r\n                </div>\r\n                <div style={navStyle}>\r\n                    <NavigationControl />\r\n                </div>\r\n                <div style={scaleControlStyle}>\r\n                    <ScaleControl />\r\n                </div>\r\n\r\n            </ReactMapGL>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default PreviewMap;","\r\nexport function authHeader() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n        return { Authorization: \"Authorization\", token: `Bearer ${token}` };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import config from \"../config/config\";\r\nimport { authHeader } from './_helpers/authheader';\r\n\r\nconst getDashboard = (data) => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/dashboard/admin`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    dashboardValues: response.dashboardValues,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting data\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nexport const dashboardService = {\r\n    getDashboard\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Center, Heading, SimpleGrid, Divider } from \"@chakra-ui/react\";\r\nimport ProgressCard from \"../../components/Admin/ProgressCard\";\r\nimport ScheduleCard from \"../../components/Admin/ScheduleCard\";\r\nimport PreviewMap from \"../../components/Admin/PreviewMap\";\r\nimport { dashboardService } from \"../../services/dashBoard\";\r\n\r\n//number of users\r\n//number of assistants\r\n//number of visiting places\r\n//Active users\r\n//Restricted users\r\n//All viviting places on the map\r\n//\r\n\r\n\r\nfunction AdminDashboard() {\r\n  const [dashboard, setDashboard] = useState([]);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  const [places, setPlaces] = useState([]);\r\n  const [placenames, setPlacenames] = useState([]);\r\n  \r\n  const fetchData = async () => {\r\n    dashboardService.getDashboard()\r\n        .then((result) => {\r\n            if (result.success) {\r\n              setDashboard(result.dashboardValues);\r\n              setPlaces(result.dashboardValues.place_locations)\r\n              setPlacenames(result.dashboardValues.place_names)\r\n            } else {\r\n                setErrors(result.status); \r\n            }\r\n        });\r\n  }\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Center w=\"100%\" h=\"auto\" p={4}  pb='100px'>\r\n        <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='30px'>\r\n          <Heading as=\"h2\" size=\"2xl\" ml='20px' mb='20px'>Dashboard</Heading>\r\n          <Heading as=\"h4\" size=\"md\" ml='20px' mb='30px' >Sunrise - Hotel Management System</Heading>\r\n          <Divider />\r\n          <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\" mb='10px' mt='20px'>\r\n            <ProgressCard Heading='Assistants' maxvalue='100' currentvalue={dashboard.users_count} colour='red' />\r\n            <ProgressCard Heading='Tourists Total' maxvalue='5000' currentvalue={dashboard.tourist_count_total} colour='orange' />\r\n            <ProgressCard Heading='Tourists In' maxvalue='5000' currentvalue={dashboard.tourist_count_in} colour='green' />\r\n            <ProgressCard Heading='Visiting Places' maxvalue='100' currentvalue={dashboard.place_count} colour='yellow' />\r\n            <ProgressCard Heading='Schedules' maxvalue='100' currentvalue={dashboard.schedules_count_total}  colour='blue' />\r\n\r\n          </SimpleGrid>\r\n          <Divider />\r\n          <Heading as=\"h2\" size=\"lg\" ml='20px' mb='20px' mt='30px'>Schedules</Heading>\r\n          <Box>\r\n            <SimpleGrid minChildWidth=\"200px\" spacing=\"20px\" mb='10px' mt='20px'>\r\n              <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n              <ScheduleCard place='Jungle Beach' user='Hirumal kumara' date='2020/12/20' travelmethod='bus' fair='Rs. 300.00' state='cancelled' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n              <ScheduleCard place='Galle fort' user='charith silva' date='2020/11/21' travelmethod='bus' fair='Rs. 450.00' state='not-completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n              <ScheduleCard place='Rumassala' user='Sadaruwan kumarasinghe' date='2020/11/02' travelmethod='bus' fair='Rs. 250.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n            </SimpleGrid>\r\n\r\n          </Box>\r\n          <Divider />\r\n          <Heading as=\"h2\" size=\"lg\" ml='20px' mb='20px' mt='30px'>Visiting Places</Heading>\r\n          <Box>\r\n            <PreviewMap place_locations={places} place_names={dashboard.place_names}/>\r\n          </Box>\r\n\r\n\r\n\r\n        </Box>\r\n      </Center>\r\n\r\n    </>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default AdminDashboard;","import config from \"../config/config\";\r\nimport { authHeader } from './_helpers/authheader';\r\n\r\n/**\r\n * \r\n * @param {*} data \r\n * @returns {\r\n *   visitingPlaces: any;\r\n *   success: boolean;\r\n * } \r\n * @returns {\r\n *  status: string;\r\n *  success: boolean;\r\n * }\r\n */\r\nconst getVisitingPlaces = () => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/places`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    visitingPlaces: response.visitingPlaces,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting places\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst getVisitingPlacesByName = (data) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/places/search`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    visitingPlaces: response.visitingPlaces,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting places\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} data data to send\r\n */\r\nconst addVisitingPlace = async (data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/places`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    visitingPlace: response.visitingPlace,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while adding new place\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst getDetailsForVisitingPlace = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/places/${id}`, requestOptions)\r\n\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    visitingPlace: response.visitingPlace,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting place details\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst updateDetailsForVisitingPlace = (id, data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/places/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    visitingPlace: response.visitingPlace,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while updating place\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nconst deleteAVisitingPlace = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/places/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    visitingPlace: response.visitingPlace,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while deleting place\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nexport const visitingPlaceService = {\r\n    getVisitingPlaces,\r\n    getVisitingPlacesByName,\r\n    addVisitingPlace,\r\n    getDetailsForVisitingPlace,\r\n    updateDetailsForVisitingPlace,\r\n    deleteAVisitingPlace\r\n};","import React from 'react';\r\nimport ReactMapGL, {\r\n    Marker,\r\n    NavigationControl,\r\n    ScaleControl,\r\n    GeolocateControl\r\n} from 'react-map-gl';\r\nimport config from \"../../config/config\";\r\n\r\nconst Map = (props) => {\r\n    const [markers, setMarkers] = React.useState([]);\r\n    const handleClick = ({ lngLat: [longitude, latitude] }) => { \r\n        props.onClickonMap(longitude, latitude);\r\n        setMarkers(markers => [{ longitude, latitude }]); }\r\n    const [viewport, setViewport] = React.useState({\r\n        latitude: 7.329934409204016,\r\n        longitude: 80.81450352071882,\r\n        zoom: 7,\r\n        pitch: 40,\r\n        bearing: 0\r\n    });\r\n    const geolocateStyle = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const navStyle = {\r\n        position: 'absolute',\r\n        top: 72,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const scaleControlStyle = {\r\n        position: 'absolute',\r\n        bottom: 36,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n    const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\n    const SIZE = 20;\r\n    return (\r\n        <ReactMapGL\r\n            mapboxApiAccessToken={config.MAPBOX_ACCESSTOKEN}\r\n            width={'100%'}\r\n            height={400}\r\n            latitude={viewport.latitude}\r\n            longitude={viewport.longitude}\r\n            zoom={viewport.zoom}\r\n            onViewportChange={viewport => setViewport(viewport)}\r\n            {...viewport}\r\n            onClick={handleClick}\r\n        >\r\n            {markers.length\r\n                ? markers.map((m, i) => (\r\n                    <Marker {...m} key={i}>\r\n                        <svg\r\n                            height={SIZE}\r\n                            viewBox=\"0 0 24 24\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                fill: '#d00',\r\n                                stroke: 'none',\r\n                                transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n                            }}\r\n                        >\r\n                            <path d={ICON} />\r\n                        </svg>\r\n                        {`${m.longitude}, ${m.latitude}`}\r\n\r\n                    </Marker>\r\n                ))\r\n                : null}\r\n            <div style={geolocateStyle}>\r\n                <GeolocateControl />\r\n            </div>\r\n            <div style={navStyle}>\r\n                <NavigationControl />\r\n            </div>\r\n            <div style={scaleControlStyle}>\r\n                <ScaleControl />\r\n            </div>\r\n\r\n        </ReactMapGL>\r\n    );\r\n}\r\n\r\nexport default Map;","\r\nexport function ValidateEmail(mail, validation, setValidation, order) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\r\n        val[order] = false;\r\n        error[order] = '';\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }else{\r\n    val[order] = true;\r\n    error[order] = 'You have entered invalid email address';\r\n    setValidation({ validation: val, errorMessage: error })\r\n}\r\n\r\n}\r\n\r\nexport function isRequired(value, validation, setValidation, order, placeholder) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (value !== '') {\r\n        val[order] = false;\r\n        error[order] = '';        \r\n        setValidation({ validation: val, errorMessage: error })\r\n        \r\n    } else {\r\n        val[order] = true;\r\n        error[order] = 'Enter '+placeholder;\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function isNumeric(value, validation, setValidation, order, placeholder) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (Number(value)) {\r\n        val[order] = false;\r\n        error[order] = '';\r\n        setValidation({ validation: val, errorMessage: error })\r\n    } else {\r\n        val[order] = true;\r\n        error[order] = 'Enter numeric value to '+placeholder;\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function isRequiredArr(value, validation, setValidation, order, placeholder) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (value.length > 0) {\r\n        val[order] = false;\r\n        error[order] = '';\r\n        setValidation({ validation: val, errorMessage: error })\r\n    } else {\r\n        val[order] = true;\r\n        error[order] = 'Select '+placeholder;\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }\r\n\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n    Input, Text, Stack, FormControl, Button, Divider, Heading, Box, Alert, AlertIcon, Textarea, InputGroup, Badge, useColorMode, Image, FormHelperText, RadioGroup, Radio,\r\n    NumberInput,\r\n    NumberInputField,\r\n    NumberInputStepper,\r\n    NumberIncrementStepper,\r\n    NumberDecrementStepper,\r\n    HStack,\r\n    Center,\r\n    Checkbox\r\n} from \"@chakra-ui/react\";\r\nimport { visitingPlaceService } from \"../../services/visitingplaceService\";\r\nimport Map from \"./Map\";\r\nimport { isNumeric, isRequired, isRequiredArr } from '../../utils/Validation2';\r\n\r\nconst BASE_URL = 'http://localhost:5000'\r\n\r\nfunction VisitingPlacePreview(props) {\r\n    const [data, setData] = useState(props.data);\r\n    const [hasError, setHasError] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [value, setValue] = useState(\"1\");\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const [distance, setDistance] = useState(data.distance)\r\n    const [timetoreach, setTimetoreach] = useState(data.timeToReach)\r\n    const [tmethods, setTmethods] = useState([]);\r\n\r\n    const [validation, setValidation] = useState({\r\n        validation: [false, false, false, false, false, false],\r\n        errorMessage: ['', '', '', '', '', '']\r\n    });\r\n\r\n    const handleCheckBoxChange = (value) => {\r\n        if (tmethods.includes(value)) {\r\n            const index = tmethods.indexOf(value);\r\n            if (index > -1) {\r\n                tmethods.splice(index, 1);\r\n            }\r\n            var methods = tmethods;\r\n            setTmethods(methods);\r\n        } else {\r\n            var methods = tmethods.concat(value);\r\n            setTmethods(methods);\r\n        }\r\n    }\r\n\r\n    const respond = () =>{\r\n        data.fetch();\r\n        props.close();\r\n    }\r\n    const validateBeforeSubmit = () => {\r\n        isRequired(data.placeName, validation, setValidation, 0, 'place name');\r\n        isRequired(data.description, validation, setValidation, 1, 'description');\r\n        isNumeric(data.latitude, validation, setValidation, 2, 'latitude');\r\n        isNumeric(data.longitude, validation, setValidation, 3, 'longitude');\r\n        isRequired(distance, validation, setValidation, 4, 'distance');\r\n        isRequiredArr(tmethods, validation, setValidation, 5, 'method');\r\n        isRequired(timetoreach, validation, setValidation, 6, 'time to reach');\r\n\r\n        if (!validation.validation[0] && !validation.validation[1] && !validation.validation[2] && !validation.validation[3] && !validation.validation[4]\r\n            && !validation.validation[5]) {\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var isValid = validateBeforeSubmit();\r\n        \r\n        if(isValid){\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            console.log(data);\r\n            console.log(value);\r\n            var dataToSend = {\r\n                name: data.placeName,\r\n                description: data.description,\r\n                location: {\r\n                    coordinates: [data.longitude, data.latitude]\r\n                },\r\n                distance: distance,\r\n                method: tmethods,\r\n                timeToReach: timetoreach,\r\n                images: []\r\n            }\r\n            try {\r\n                var raw = JSON.stringify(dataToSend);\r\n\r\n                var requestOptions = {\r\n                    method: 'PUT',\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch(`${BASE_URL}/places/${data.id}`, requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(result => respond())\r\n                    .catch(error => console.log('error', error));\r\n            } catch (e) {\r\n                console.error(e);\r\n            } finally {\r\n                console.log('We do cleanup here');\r\n            }\r\n        }\r\n        \r\n    };\r\n    const handleChange = (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        if (name === 'placeName') {\r\n            isRequired(value, validation, setValidation, 0, 'place name');\r\n        }\r\n        else if (name === 'description') {\r\n            isRequired(value, validation, setValidation, 1, 'description');\r\n        }\r\n        else if (name === 'latitude') {\r\n            isNumeric(value, validation, setValidation, 2, 'latitude')\r\n        }\r\n        else if (name === 'longitude') {\r\n            isNumeric(value, validation, setValidation, 3, 'longitude')\r\n        }\r\n        else if (name === 'distance') {\r\n            isRequired(value, validation, setValidation, 4, 'distance');\r\n        }\r\n        else if (name === 'timeToReach') {\r\n            isRequired(value, validation, setValidation, 5, 'time to reach');\r\n        }\r\n\r\n\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n    };\r\n    const handleClickonMap = (longitude, latitude) => {\r\n        setData({ ...data, latitude: latitude, longitude: longitude });\r\n        console.log(latitude, longitude);\r\n    }\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']}>\r\n\r\n            {hasError ? <Alert status=\"error\" mb='20px' >\r\n                <AlertIcon />\r\n                Error\r\n            </Alert> : null}\r\n            <form action='submit'>\r\n                {editMode ?\r\n                    <>\r\n                        <Heading as=\"h4\" size=\"lg\" textAlign='center' pb='20px' pt='5px'>Edit the place</Heading>\r\n                        <Text >Name of the place</Text>\r\n                        <FormControl isRequired mb='10px'>\r\n                            <Input\r\n                                type='text'\r\n                                value={data.placeName}\r\n                                name='placeName'\r\n                                placeholder='Name of the place'\r\n                                aria-label='Name'\r\n                                onChange={(event) => handleChange(event)}\r\n                                isInvalid={validation.validation[0]}\r\n                                errorBorderColor=\"crimson\"\r\n                            />\r\n                            <FormHelperText color='crimson'>{validation.errorMessage[0]}</FormHelperText>\r\n                        </FormControl>\r\n                    </>\r\n                    : <>\r\n                        <Heading as=\"h4\" size=\"lg\" textAlign='center' pb='20px' pt='5px'>\r\n                            {data.placeName}\r\n                        </Heading>\r\n                        <Box shadow=\"xl\" mb='20px' >\r\n                            <Image src={data.imageUrl} alt='photo' rounded=\"md\" />\r\n                        </Box>\r\n                    </>\r\n                }\r\n\r\n                <Stack spacing={3}>\r\n                    {editMode ?\r\n                        <>\r\n                            <Text >Description</Text>\r\n                            <FormControl isRequired>\r\n                                <Textarea\r\n                                    type='text'\r\n                                    name='description'\r\n                                    value={data.description}\r\n                                    placeholder='Description'\r\n                                    aria-label='Description'\r\n                                    onChange={(event) => handleChange(event)}\r\n                                    isInvalid={validation.validation[1]}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                                <FormHelperText color='crimson'>{validation.errorMessage[1]}</FormHelperText>\r\n                            </FormControl>\r\n                        </>\r\n                        : <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' bg={colorMode === 'light' ? \"teal.50\" : \"teal.700\"}>\r\n                            <Text fontSize=\"3xl\" >Description</Text>\r\n                            <Text>{data.description}</Text>\r\n                        </Box>\r\n                    }\r\n                    {editMode ? <>\r\n                        <Text >Location</Text>\r\n                        <FormControl isRequired>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='latitude'\r\n                                    value={data.latitude}\r\n                                    placeholder='Latitude'\r\n                                    aria-label='Latitude'\r\n                                    onChange={(event) => handleChange(event)}\r\n                                    isInvalid={validation.validation[2]}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                                <Input\r\n                                    type='text'\r\n                                    name='longitude'\r\n                                    value={data.longitude}\r\n                                    placeholder='Longitude'\r\n                                    aria-label='Longitude'\r\n                                    onChange={(event) => handleChange(event)}\r\n                                    isInvalid={validation.validation[3]}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </InputGroup>\r\n                            <FormHelperText color='crimson'>{validation.errorMessage[2]} {validation.errorMessage[3]}</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        <Map onClickonMap={handleClickonMap} />\r\n                    </>\r\n                        :\r\n                        <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' bg={colorMode === 'light' ? \"teal.50\" : \"teal.700\"}>\r\n                            <Map onClickonMap={handleClickonMap} />\r\n                        </Box>\r\n\r\n                    }\r\n\r\n\r\n\r\n                    {editMode ?\r\n                        <>\r\n                            <Text >Distance (Km)</Text>\r\n                            <FormControl isRequired>\r\n                                <NumberInput step={0.100} defaultValue={0} min={0.100} max={30} precision={3}\r\n                                    isInvalid={validation.validation[4]}\r\n                                    onChange={(valueString) => setDistance(valueString)}\r\n                                    value={distance}\r\n                                    errorBorderColor=\"crimson\">\r\n                                    <NumberInputField\r\n                                        placeholder='Distance'\r\n                                        name='distance'\r\n                                    />\r\n                                    <NumberInputStepper>\r\n                                        <NumberIncrementStepper />\r\n                                        <NumberDecrementStepper />\r\n                                    </NumberInputStepper>\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                            <FormHelperText color='crimson'>{validation.errorMessage[4]}</FormHelperText>\r\n                        </>\r\n                        : <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' bg={colorMode === 'light' ? \"teal.50\" : \"teal.700\"}>\r\n                            <Text fontSize=\"2xl\" >Distance\r\n\r\n                            <Badge ml=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant='outline'>\r\n                                    {distance} km\r\n                                </Badge>\r\n                            </Text>\r\n\r\n                        </Box>\r\n                    }\r\n                    {editMode ?\r\n                        <>\r\n                            <FormControl isRequired>\r\n                                <Stack direction=\"row\">\r\n                                    <Checkbox\r\n                                        onChange={(e) => handleCheckBoxChange('Bus')}\r\n                                    >\r\n                                        Bus\r\n                            </Checkbox>\r\n                                    <Checkbox\r\n                                        onChange={(e) => handleCheckBoxChange('Train')}\r\n                                    >\r\n                                        Train\r\n                                </Checkbox>\r\n                                    <Checkbox\r\n                                        onChange={(e) => handleCheckBoxChange('Car')}\r\n                                    >\r\n                                        Car\r\n                                </Checkbox>\r\n                                    <Checkbox\r\n                                        onChange={(e) => handleCheckBoxChange('Threewheeler')}\r\n                                    >\r\n                                        Threewheeler\r\n                                </Checkbox>\r\n                                    <Checkbox\r\n                                        onChange={(e) => handleCheckBoxChange('Foot')}\r\n                                    >\r\n                                        Foot\r\n                                </Checkbox>\r\n\r\n                                </Stack>\r\n                                <FormHelperText color='crimson'>{validation.errorMessage[5]}</FormHelperText>\r\n                            </FormControl>\r\n                        </>\r\n                        :\r\n                        <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' bg={colorMode === 'light' ? \"teal.50\" : \"teal.700\"} >\r\n                            <Text fontSize=\"2xl\">Travelling Method\r\n                                \r\n                            {data.methods.map((method, i) => (\r\n                                <Badge m='3px' borderRadius=\"full\" px=\"2\" colorScheme=\"orange\">\r\n                                    {method}\r\n                                </Badge>\r\n                            ))\r\n                            }\r\n                            </Text>\r\n\r\n                        </Box>\r\n                    }\r\n                    {editMode ?\r\n                        <>\r\n                            <Text >Time to reach (min)</Text>\r\n                            <FormControl isRequired>\r\n                                <NumberInput step={1} defaultValue={0} min={1} max={180}\r\n                                    isInvalid={validation.validation[6]}\r\n                                    errorBorderColor=\"crimson\"\r\n                                    value={timetoreach}\r\n                                    onChange={(valueString) => setTimetoreach(valueString)}>\r\n                                    <NumberInputField\r\n                                        placeholder='Time To Reach'\r\n                                        name='timeToReach'\r\n                                        \r\n                                    />\r\n                                    <NumberInputStepper>\r\n                                        <NumberIncrementStepper />\r\n                                        <NumberDecrementStepper />\r\n                                    </NumberInputStepper>\r\n                                    <FormHelperText color='crimson'>{validation.errorMessage[6]}</FormHelperText>\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                        </>\r\n                        :\r\n                        <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' bg={colorMode === 'light' ? \"teal.50\" : \"teal.700\"} >\r\n                            <Text fontSize=\"2xl\">Time to Reach\r\n                        <Badge ml=\"1\" fontSize=\"0.8em\" colorScheme=\"red\" variant='outline'>\r\n                                    {timetoreach} min\r\n                                </Badge>\r\n                            </Text>\r\n\r\n                        </Box>\r\n                    }\r\n                    {editMode ?\r\n                        <Button colorScheme='cyan' type=\"submit\" onClick={(event) => handleSubmit(event)}>Update the place</Button>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {editMode ?\r\n                        null\r\n                        :\r\n                        <Center>\r\n                            <HStack>\r\n                                <Button colorScheme='teal' onClick={() => setEditMode(true)}>Edit the place</Button>\r\n                                <Button colorScheme='red' onClick={() => visitingPlaceService.deleteAVisitingPlace(data._id)}>Delete the place</Button>\r\n                            </HStack>\r\n                        </Center>\r\n\r\n\r\n\r\n                    }\r\n\r\n\r\n                </Stack>\r\n            </form>\r\n\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default VisitingPlacePreview;","import React from \"react\";\r\nimport { Box, Image, Badge, Grid, GridItem, Center, Button, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, Lorem, ModalFooter, useDisclosure, Text } from \"@chakra-ui/react\";\r\nimport { StarIcon, ArrowForwardIcon } from \"@chakra-ui/icons\"\r\nimport VisitingPlacePreview from './VisitingPlacePreview'\r\n\r\nfunction VisitingPlaceCard(props) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='10px' mb='10px'>\r\n            <Grid h=\"auto\"\r\n                templateColumns=\"repeat(8, 1fr)\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                gap={4}>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 2 }} rowSpan={{ base: 1, md: 3 }} pt='12px'>\r\n                    <Center>\r\n                        <Image src={props.imageUrl} alt='place name' />\r\n                    </Center>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\r\n                    <Box p=\"6\">\r\n                        <Box d=\"flex\" alignItems=\"baseline\">\r\n                            <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                                New\r\n                        </Badge>\r\n\r\n                        </Box>\r\n\r\n                        <Box\r\n                            mt=\"1\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated\r\n                        >\r\n                            <Text fontSize='3xl'>{props.placeName}</Text>\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            {props.distance} km from the hotel\r\n                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            {props.timeToReach} min journey\r\n                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n                            <Text fontSize='sm'>Travel by :</Text>\r\n                            {props.methods.map((method, i) => (\r\n                                <Badge m='3px' borderRadius=\"full\" px=\"2\" colorScheme=\"orange\">\r\n                                    {method}\r\n                                </Badge>\r\n                            ))\r\n                            }\r\n                        </Box>\r\n                    </Box>\r\n\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 8, md: 1 }} rowSpan={{ base: 1, md: 3 }} pt='50px'>\r\n                    <Button rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\" onClick={onOpen}>Details</Button>\r\n\r\n                    <Modal isOpen={isOpen} onClose={onClose} >\r\n                        <ModalOverlay />\r\n\r\n                        <ModalContent top='100px'>\r\n                            <ModalCloseButton />\r\n                            <VisitingPlacePreview data={props} close={onClose} />\r\n                        </ModalContent>\r\n                    </Modal>\r\n\r\n                </GridItem>\r\n\r\n\r\n            </Grid>\r\n\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nVisitingPlaceCard.defaultProps = {\r\n    role: 'user'\r\n}\r\nexport default VisitingPlaceCard;","import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { Input, InputGroup, InputRightElement, IconButton, Box } from \"@chakra-ui/react\";\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <Box w='500px' mb='20px'>\r\n            <InputGroup>\r\n                <InputRightElement>\r\n                    <IconButton colorScheme='teal' aria-label=\"Search database\" icon={<SearchIcon />} onClick={props.onClick}/>\r\n                </InputRightElement>\r\n\r\n                <Input placeholder={props.text} name='search' value={props.value} onChange={props.onChange} />\r\n\r\n            </InputGroup>\r\n\r\n        </Box>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Center, Heading, Button, ReactRouterLink, Text } from \"@chakra-ui/react\";\r\nimport VisitingPlaceCard from \"../../components/Admin/VisitingPlaceCard\";\r\nimport SearchBar from \"../../components/Admin/SearchBar\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { visitingPlaceService } from \"../../services/visitingplaceService\";\r\n\r\n\r\n\r\n\r\nfunction VisitingPlaces() {\r\n    const [visitingPlaces, setVisitingPlaces] = useState([]);\r\n    const [hasError, setErrors] = useState(false);\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleChange = (event)=>{    \r\n        var value = event.target.value;\r\n        setSearch(value);\r\n        searchData({similarTo: value});\r\n \r\n\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        visitingPlaceService.getVisitingPlaces()\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    setVisitingPlaces(result.visitingPlaces);\r\n                } else {\r\n                    setErrors(result.status);\r\n                }\r\n            });\r\n    }\r\n    const searchData = async (quary) => {\r\n        visitingPlaceService.getVisitingPlacesByName(quary)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    setVisitingPlaces(result.visitingPlaces);\r\n                } else {\r\n                    setErrors(result.status);\r\n                }\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n    return (\r\n        <>\r\n            <Button position=\"fixed\" bottom=\"50px\" right=\"50px\" zIndex='1000' leftIcon={<AddIcon />} colorScheme=\"teal\">\r\n                <Link as={ReactRouterLink} to='/addvisitingplace'>Add Visiting Place</Link>\r\n            </Button>\r\n            <Center w=\"100%\" h=\"auto\" p={4}  pb='300px'>\r\n                <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='10px'>\r\n                    <Heading ml='20px' mb='20px'>Visiting Places</Heading>\r\n                    <Center >\r\n                        <SearchBar text='Search visiting place...' value={search} onChange={(event)=>handleChange(event)}/>\r\n                    </Center>\r\n                    {visitingPlaces.length === 0 ? <Box p='15px' bg='red.200' borderRadius='lg'><Text fontSize='sm' color=\"yellow.800\">No visiting places</Text></Box>:null}\r\n                    {visitingPlaces.map((place, i) => (\r\n                        <VisitingPlaceCard\r\n                            id={place._id}\r\n                            placeName={place.name}\r\n                            description={place.description}\r\n                            latitude={place.location.coordinates[0]}\r\n                            longitude={place.location.coordinates[1]}\r\n                            distance={place.distance}\r\n                            methods={place.travellingMethods}\r\n                            timeToReach={place.timeToReach}\r\n                            imageUrl='./1.jpg'\r\n                            fetch={fetchData}\r\n                            role='admin'\r\n                        />\r\n                    ))\r\n                    }\r\n\r\n                </Box>\r\n\r\n            </Center>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default VisitingPlaces;","import React from \"react\";\r\nimport { Box, Thead, Tr, Th, Tbody, Td, Table, Avatar, Button, Badge } from \"@chakra-ui/react\";\r\nimport { StarIcon } from \"@chakra-ui/icons\"\r\n\r\nfunction TouristsTable(props) {\r\n\r\n    const reviews = (rating, reviewCount) => {\r\n        return (\r\n            <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n                {Array(5)\r\n                    .fill(\"\")\r\n                    .map((_, i) => (\r\n                        <StarIcon\r\n                            key={i}\r\n                            color={i < rating ? \"teal.500\" : \"gray.300\"}\r\n                        />\r\n                    ))}\r\n                <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\r\n                    {reviewCount} reviews\r\n                        </Box>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    const DP = (name, url)=>{\r\n        return(\r\n            <Avatar\r\n            size=\"xs\"\r\n            name={name}\r\n            src={url}\r\n            ml='10%'\r\n        />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='5px' mb='10px'>\r\n            <Table size=\"sm\">\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>Profile photo</Th>\r\n                        <Th>Name</Th>\r\n                        <Th>Reviews</Th>\r\n                        <Th>State</Th>\r\n                        <Th>Restrict the user</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                {props.tourists.map((tourist,i)=>{\r\n                    <Tr>\r\n                        <Td>{DP('user', \"./user.png\")}</Td>\r\n                        <Td>{tourist.firstname} {tourist.lastname} </Td>\r\n                        <Td>{reviews(2,50)}</Td>\r\n                        <Td><Badge colorScheme=\"green\">Active</Badge></Td>\r\n                        <Td><Button size=\"xs\" colorScheme=\"teal\" variant=\"ghost\">Restrict</Button></Td>\r\n                    </Tr>\r\n                })}\r\n                    \r\n                    \r\n                </Tbody>\r\n            </Table>\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default TouristsTable;","import config from \"../config/config\";\r\nimport { authHeader } from './_helpers/authheader';\r\n\r\n/**\r\n * \r\n * @param {*} data \r\n * @returns {\r\n *   tourists: any;\r\n *   success: boolean;\r\n * } \r\n * @returns {\r\n *  status: string;\r\n *  success: boolean;\r\n * }\r\n */\r\nconst getTourists = () => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/tourists`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    tourists: response.tourists,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting tourists\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst searchTourists = (searchKey) => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\"similarTo\":searchKey}),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/tourists`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    tourists: response.tourists,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting tourists\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} data data to send\r\n */\r\nconst addTourist = async (data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/tourists`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            if (response.success) {\r\n                return {\r\n                    password: response.password,\r\n                    tourist: response.tourist,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while adding new tourist\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst getDetailsForTourist = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/tourists/${id}`, requestOptions)\r\n\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    tourist: response.tourist,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting tourist details\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst updateDetailsForTourist = (id, data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/tourists/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    tourist: response.tourist,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while updating tourist\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nconst deleteATourist = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/tourists/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    tourist: response.tourist,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while deleting tourist\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nexport const touristService = {\r\n    getTourists,\r\n    searchTourists,\r\n    addTourist,\r\n    getDetailsForTourist,\r\n    updateDetailsForTourist,\r\n    deleteATourist\r\n};","import React, { useEffect, useState }  from \"react\";\r\nimport { Box, Center, Heading,} from \"@chakra-ui/react\";\r\nimport TouristsTable from \"../../components/Admin/TouristsTable\";\r\nimport SearchBar from \"../../components/Admin/SearchBar\";\r\nimport { touristService } from \"../../services/touristService\";\r\n\r\nconst Tourists=()=> {\r\n  const [tourists, setTourists] = useState([]);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  const [search, setSearch] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    var value = event.target.value;\r\n    setSearch(value);\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    touristService.getTourists()\r\n      .then((result) => {\r\n        if (result.success) {\r\n          setTourists(result.tourists);\r\n        } else {\r\n          setErrors(result.status);\r\n        }\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n\r\n      <Center w=\"100%\" h=\"auto\" p={4}  pb='300px'>\r\n        <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='10px'>\r\n          <Heading ml='20px' mb='20px'>Tourists</Heading>\r\n          <Center >\r\n            <SearchBar text='Search Tourists...' />\r\n          </Center>\r\n          <TouristsTable tourists={tourists}/>\r\n\r\n        </Box>\r\n\r\n      </Center>\r\n    </>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Tourists;","import React, { useState } from \"react\";\r\nimport {\r\n    Input, Stack, FormControl, Button, Divider, Box, Alert, AlertIcon, Center, Avatar, Text, Badge, InputGroup, InputRightElement,\r\n    FormHelperText\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { ValidateEmail, isRequired } from '../../utils/Validation2';\r\nconst BASE_URL = 'http://localhost:5000'\r\n\r\n\r\nfunction AssistantPreview(props) {\r\n    const [data, setData] = useState(props.data);\r\n    const [hasError, setHasError] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [show, setShow] = useState(false)\r\n    const handleClick = () => setShow(!show)\r\n\r\n    const [validation, setValidation] = useState({\r\n        validation: [false, false, false],\r\n        errorMessage: ['', '', '']\r\n    });\r\n    const respond = () => {\r\n        data.fetch();\r\n        props.close();\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var isValid = validateBeforeSubmit();\r\n        if (isValid) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            event.preventDefault();\r\n            console.log(data);\r\n            var dataToSend = {\r\n                firstname: data.firstname,\r\n                lastname: data.lastname,\r\n                email: data.email,\r\n            }\r\n            try {\r\n                var raw = JSON.stringify(dataToSend);\r\n\r\n                var requestOptions = {\r\n                    method: 'PUT',\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch(`${BASE_URL}/employees/${data.id}`, requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(result => respond())\r\n                    .catch(error => console.log('error', error));\r\n            } catch (e) {\r\n                console.error(e);\r\n            } finally {\r\n                console.log('We do cleanup here');\r\n            }\r\n        }\r\n\r\n    };\r\n    const validateBeforeSubmit = () => {\r\n        isRequired(data.firstname, validation, setValidation, 0, 'first name');\r\n        isRequired(data.lastname, validation, setValidation, 1, 'last name');\r\n        ValidateEmail(data.email, validation, setValidation, 2, 'email');\r\n\r\n        if (!validation.validation[0] && !validation.validation[1] && !validation.validation[2]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const handleChange = (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        if (name === 'firstname') {\r\n            isRequired(value, validation, setValidation, 0, 'first name');\r\n        } else if (name === 'lastname') {\r\n            isRequired(value, validation, setValidation, 1, 'last name');\r\n        } else if (name === 'email') {\r\n            ValidateEmail(value, validation, setValidation, 2, 'email');\r\n        }\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n    };\r\n    const ImgUpload = ({\r\n        onChange,\r\n        src\r\n    }) =>\r\n        <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\r\n            <div className=\"img-wrap img-upload\" >\r\n                <img for=\"photo-upload\" src='./profile.jpg' alt='Profile' />\r\n            </div>\r\n            <input id=\"photo-upload\" type=\"file\" onChange={onChange} />\r\n        </label>\r\n\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']} >\r\n\r\n            {hasError ? <Alert status=\"error\" mb='20px' >\r\n                <AlertIcon />\r\n                Error\r\n            </Alert> : null}\r\n            <form action='submit'>\r\n                <Stack spacing={3}>\r\n                    <Center>\r\n                        {editMode ?\r\n                            <Box w='200px' h='200px' mb='20px'>\r\n                                <ImgUpload />\r\n                            </Box>\r\n                            :\r\n                            <Avatar size=\"2xl\" name=\"Profile photo\" src=\"./user.png\" />\r\n                        }\r\n\r\n                    </Center>\r\n\r\n                    {editMode ?\r\n                        <>\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    First name\r\n                            </Badge>\r\n                            </Text>\r\n                            <FormControl isRequired>\r\n                                <Input\r\n                                    type='text'\r\n                                    value={data.firstname}\r\n                                    name='firstname'\r\n                                    placeholder='First Name'\r\n                                    aria-label='Fisrt Name'\r\n                                    isInvalid={validation.validation[0]}\r\n                                    onChange={(event) => handleChange(event)}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormHelperText color='crimson'>{validation.errorMessage[0]}</FormHelperText>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    First name\r\n                            </Badge>\r\n                            </Text>\r\n                            <Text fontSize=\"2xl\">{data.firstname}</Text>\r\n                        </>\r\n                    }\r\n                    <Divider />\r\n                    {editMode ?\r\n                        <>\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    Last name\r\n                            </Badge>\r\n                            </Text>\r\n                            <FormControl isRequired>\r\n                                <Input\r\n                                    type='text'\r\n                                    value={data.lastname}\r\n                                    name='lastname'\r\n                                    placeholder='Last Name'\r\n                                    aria-label='Last Name'\r\n                                    onChange={(event) => handleChange(event)}\r\n                                    isInvalid={validation.validation[1]}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormHelperText color='crimson'>{validation.errorMessage[1]}</FormHelperText>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    Last name\r\n                            </Badge>\r\n                            </Text>\r\n                            <Text fontSize=\"2xl\">{data.lastname}</Text>\r\n                        </>\r\n                    }\r\n                    <Divider />\r\n                    {editMode ?\r\n                        <>\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    email\r\n                            </Badge>\r\n                            </Text>\r\n                            <FormControl isRequired>\r\n                                <Input\r\n                                    type='email'\r\n                                    value={data.email}\r\n                                    name='email'\r\n                                    placeholder='Email'\r\n                                    aria-label='Email'\r\n                                    onChange={(event) => handleChange(event)}\r\n                                    isInvalid={validation.validation[2]}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                                <FormHelperText color='crimson'>{validation.errorMessage[2]}</FormHelperText>\r\n                            </FormControl>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    Email\r\n                            </Badge>\r\n                            </Text>\r\n                            <Text fontSize=\"2xl\">{data.email}</Text>\r\n                        </>\r\n                    }\r\n\r\n\r\n                    {editMode ?\r\n                        <>\r\n                            <Divider />\r\n                            <Text fontSize=\"md\">\r\n                                <Badge variant=\"subtle\" colorScheme=\"green\">\r\n                                    Password\r\n                            </Badge>\r\n                            </Text>\r\n                            <InputGroup size=\"md\">\r\n                                <Input\r\n                                    pr=\"4.5rem\"\r\n                                    type={show ? \"text\" : \"password\"}\r\n                                    placeholder=\"Enter password\"\r\n                                    value=''\r\n                                />\r\n                                <InputRightElement width=\"4.5rem\">\r\n                                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                                        {show ? \"Hide\" : \"Show\"}\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n                        </>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {editMode ?\r\n                        null\r\n                        :\r\n                        <Button colorScheme='cyan' onClick={() => setEditMode(true)}>Edit details</Button>\r\n                    }\r\n                    {editMode ?\r\n                        <Button colorScheme='cyan' type=\"submit\" onClick={(event) => handleSubmit(event)}>Update the Assistant</Button>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default AssistantPreview;","import React from \"react\";\r\nimport { Box, Image, Badge, Grid, GridItem, Center, Button, useDisclosure, Modal, ModalOverlay, ModalContent, ModalCloseButton } from \"@chakra-ui/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\"\r\nimport AssistantPreview from \"./AssistentPreview\";\r\n\r\nfunction AssistantCard(props) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='10px' mb='10px'>\r\n            <Grid h=\"auto\"\r\n                templateColumns=\"repeat(8, 1fr)\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                gap={4}>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 2 }} rowSpan={{ base: 1, md: 3 }} pt='12px'>\r\n                    <Center>\r\n                        <Image src={props.imageUrl} alt={props.imageAlt} borderRadius=\"full\" boxSize=\"120px\" />\r\n                    </Center>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\r\n                    <Box p=\"6\">\r\n                        <Box d=\"flex\" alignItems=\"baseline\">\r\n                            <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                                New\r\n                        </Badge>\r\n\r\n                        </Box>\r\n\r\n                        <Box\r\n                            mt=\"1\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated\r\n                        >\r\n                            {props.firstname} {props.lastname}\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            {props.email}\r\n                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                               \r\n                        </Box>\r\n                        </Box>\r\n\r\n                    </Box>\r\n\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 8, md: 1 }} rowSpan={{ base: 1, md: 3 }} pt='50px'>\r\n                    <Button rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\" onClick={onOpen}>Details</Button>\r\n\r\n                    <Modal isOpen={isOpen} onClose={onClose}>\r\n                        <ModalOverlay />\r\n\r\n                        <ModalContent top='100px'>\r\n                            <ModalCloseButton />\r\n                            <AssistantPreview data={props} close={onClose} />\r\n                        </ModalContent>\r\n                    </Modal>\r\n                </GridItem>\r\n\r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default AssistantCard;","import React, { useState } from \"react\";\r\nimport {\r\n    Input, Stack, FormControl, Button, Divider, Box, Center, FormHelperText, useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    VStack,\r\n    Text\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { ValidateEmail, isRequired } from '../../utils/Validation2';\r\nimport { authHeader } from \"../../services/_helpers/authheader\";\r\nimport { CheckCircleIcon, QuestionIcon } from '@chakra-ui/icons';\r\n\r\n\r\nconst BASE_URL = 'http://localhost:5000'\r\nfunction AddAssistantForm({onSuccess}) {\r\n    const [addedAssistant, setAddedAssistant] = useState(null)\r\n    const [data, setData] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n    });\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const [validation, setValidation] = useState({\r\n        validation: [false, false, false],\r\n        errorMessage: ['', '', '']\r\n    });\r\n\r\n    const validateBeforeSubmit = () => {\r\n        isRequired(data.firstname, validation, setValidation, 0, 'first name');\r\n        isRequired(data.lastname, validation, setValidation, 1, 'last name');\r\n        ValidateEmail(data.email, validation, setValidation, 2, 'email');\r\n\r\n        if (!validation.validation[0] && !validation.validation[1] && !validation.validation[2]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var isValid = validateBeforeSubmit();\r\n        if (isValid) {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var { Authorization, token } = authHeader();\r\n            myHeaders.append(Authorization, token);\r\n            var dataToSend = {\r\n                firstname: data.firstname,\r\n                lastname: data.lastname,\r\n                email: data.email,\r\n\r\n            }\r\n            try {\r\n                var raw = JSON.stringify(dataToSend);\r\n\r\n                var requestOptions = {\r\n                    method: 'POST',\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                fetch(`${BASE_URL}/employees`, requestOptions)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        if (result.success) {\r\n                            setAddedAssistant({ email: result.email, password: result.password });\r\n                            showResult();\r\n                            // onSuccess({ email: result.email, password: result.password });\r\n                        }\r\n                    })\r\n                    .catch(error => console.log('error', error));\r\n            } catch (e) {\r\n                console.error(e);\r\n            } finally {\r\n                console.log('We do cleanup here');\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    const showResult = (result) => {\r\n        onOpen();\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        if (name === 'firstname') {\r\n            isRequired(value, validation, setValidation, 0, 'first name');\r\n        } else if (name === 'lastname') {\r\n            isRequired(value, validation, setValidation, 1, 'last name');\r\n        } else if (name === 'email') {\r\n            ValidateEmail(value, validation, setValidation, 2, 'email');\r\n        }\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n    };\r\n\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']} w='500px'>\r\n\r\n            <form action='submit'>\r\n                <Stack spacing={3}>\r\n\r\n\r\n                    <FormControl isRequired>\r\n                        <Input\r\n                            type='text'\r\n                            value={data.firstname}\r\n                            name='firstname'\r\n                            placeholder='First Name'\r\n                            aria-label='Fisrt Name'\r\n                            onChange={(event) => handleChange(event)}\r\n                            isInvalid={validation.validation[0]}\r\n                            errorBorderColor=\"crimson\"\r\n                        />\r\n                        <FormHelperText color='crimson'>{validation.errorMessage[0]}</FormHelperText>\r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <Input\r\n                            type='text'\r\n                            value={data.lastname}\r\n                            name='lastname'\r\n                            placeholder='Last Name'\r\n                            aria-label='Last Name'\r\n                            onChange={(event) => handleChange(event)}\r\n                            isInvalid={validation.validation[1]}\r\n                            errorBorderColor=\"crimson\"\r\n                        />\r\n                        <FormHelperText color='crimson'>{validation.errorMessage[1]}</FormHelperText>\r\n                    </FormControl>\r\n                    <Divider />\r\n                    <FormControl isRequired>\r\n                        <Input\r\n                            type='email'\r\n                            value={data.email}\r\n                            name='email'\r\n                            placeholder='Email'\r\n                            aria-label='Email'\r\n                            onChange={(event) => handleChange(event)}\r\n                            isInvalid={validation.validation[2]}\r\n                            errorBorderColor=\"crimson\"\r\n                        />\r\n                        <FormHelperText color='crimson'>{validation.errorMessage[2]}</FormHelperText>\r\n                    </FormControl>\r\n\r\n\r\n\r\n                    <Button colorScheme='cyan' type=\"submit\" onClick={(event) => handleSubmit(event)}>Add the Assistant</Button>\r\n\r\n                </Stack>\r\n            </form>\r\n\r\n            <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Center>\r\n                            {addedAssistant ?\r\n                                <VStack mb='10px'>\r\n                                    <CheckCircleIcon w={10} h={10} color=\"green.500\" />\r\n                                    <Text>Added Sucessfully</Text>\r\n                                    <Text>{addedAssistant.email}</Text>\r\n                                    <Text>{addedAssistant.password}</Text>\r\n                                    <Button><Link to=\"/assistants\" >Return</Link></Button>\r\n                                </VStack>\r\n                                :\r\n                                <VStack>\r\n                                    <QuestionIcon w={10} h={10} color=\"red.500\" />\r\n                                    <Text>Unsuccessful</Text>\r\n                                </VStack>\r\n                            }\r\n                        </Center>\r\n\r\n                    </ModalBody>\r\n\r\n\r\n                </ModalContent>\r\n            </Modal>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default AddAssistantForm;","import config from \"../config/config\";\r\nimport { authHeader } from './_helpers/authheader';\r\n\r\n/**\r\n * \r\n * @param {*} data \r\n * @returns {\r\n *   assistants: any;\r\n *   success: boolean;\r\n * } \r\n * @returns {\r\n *  status: string;\r\n *  success: boolean;\r\n * }\r\n */\r\nconst getAssistants = () => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/employees`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    assistants: response.employees,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting assistants\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst searchAssistants = (searchKey) => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\"similarTo\":searchKey}),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/employees/search`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    assistants: response.employees,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting assistants\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} data data to send\r\n */\r\nconst addAssistant = async (data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/employees`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    assistant: response.assistant,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while adding new assistant\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst getDetailsForAssistant = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/employees/${id}`, requestOptions)\r\n\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    assistant: response.assistant,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting assistant details\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst updateDetailsForAssistant = (id, data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/employees/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    assistant: response.assistant,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while updating assistant\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nconst deleteAAssistant = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/employees/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    assistant: response.assistant,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while deleting assistant\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nexport const assistantService = {\r\n    getAssistants,\r\n    searchAssistants,\r\n    addAssistant,\r\n    getDetailsForAssistant,\r\n    updateDetailsForAssistant,\r\n    deleteAAssistant\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Center,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Link } from 'react-router-dom';\r\nimport Card from \"../../components/Admin/AssistantCard\";\r\nimport SearchBar from \"../../components/Admin/SearchBar\";\r\nimport AddAssistantForm from \"../../components/Forms/AddAssistantForm\";\r\nimport { assistantService } from \"../../services/assistantService\";\r\n\r\nconst Assistents = () => {\r\n  const [assistants, setAssistants] = useState([]);\r\n  const [hasError, setErrors] = useState(false);\r\n\r\n  const [search, setSearch] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    var value = event.target.value;\r\n    setSearch(value);\r\n  }\r\n\r\n  const fetchData = async (quary) => {\r\n    assistantService.getAssistants(quary)\r\n      .then((result) => {\r\n        if (result.success) {\r\n          setAssistants(result.assistants);\r\n        } else {\r\n          setErrors(result.status);\r\n        }\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onAssistantAdded = () => {\r\n    fetchData();\r\n  }\r\n\r\n  const searchData = async () => {\r\n    assistantService.searchAssistants(search)\r\n      .then((result) => {\r\n        if (result.success) {\r\n          setAssistants(result.assistants);\r\n        } else {\r\n          setErrors(result.status);\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <AddAssistantArea onAssistantAdded={onAssistantAdded} />\r\n      <Center w=\"100%\" h=\"auto\" p={4} pb='300px'>\r\n        <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='10px'>\r\n          <Heading ml='20px' mb='20px'>Assistants</Heading>\r\n          <Center >\r\n            <SearchBar text='Search Assistant...' value={search} onChange={(event) => handleChange(event)} onClick={() => searchData()} />\r\n          </Center>\r\n          {assistants.length === 0 ? <Box p='15px' bg='red.200' borderRadius='lg'><Text fontSize='sm' color=\"red.800\">No assistants</Text></Box> : null}\r\n          {assistants.map((assistant, i) => (\r\n            <Card imageUrl=\"./user.png\"\r\n              imageAlt=\"User\"\r\n              id={assistant._id}\r\n              firstname={assistant.firstname}\r\n              lastname={assistant.lastname}\r\n              email={assistant.email}\r\n              fetch={fetchData} />\r\n          ))}\r\n        </Box>\r\n      </Center>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst AddAssistantArea = ({ onAssistantAdded }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const onSuccess = () => {\r\n    onClose();\r\n    onAssistantAdded();\r\n  }\r\n  return (\r\n    <>\r\n      <Button\r\n        p={6}\r\n        colorScheme=\"teal\"\r\n        fontSize=\"20px\"\r\n        fontWeight=\"bold\"\r\n        onClick={onOpen}\r\n        position=\"fixed\"\r\n        bottom=\"50px\"\r\n        right=\"50px\"\r\n        zIndex='1000'\r\n        leftIcon={<AddIcon />} >\r\n        Add Assistant\r\n      </Button>\r\n\r\n      <Modal\r\n        closeOnOverlayClick={false}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        size=\"lg\"\r\n        motionPreset=\"slideInBottom\"\r\n        isCentered\r\n        closeOnEsc\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <AddAssistantForm onSuccess={onSuccess} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Added = ({ email, password }) => {\r\n  <Alert\r\n    status=\"success\"\r\n    variant=\"subtle\"\r\n    flexDirection=\"column\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n    textAlign=\"center\"\r\n    height=\"200px\"\r\n  >\r\n    <AlertIcon boxSize=\"40px\" mr={0} />\r\n    <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n      Assistant added!\r\n  </AlertTitle>\r\n    <AlertDescription maxWidth=\"sm\">\r\n      <Text>{`Assistant Email: ${email}`}</Text>\r\n      <Text>{`Assistant Password: ${password}`}</Text>\r\n    </AlertDescription>\r\n  </Alert>\r\n}\r\nexport default Assistents;","import React from \"react\";\r\nimport { Box, Heading, Text, Image, Badge, Grid, GridItem, ReactRouterLink, Button, Flex, Spacer, Modal, ModalOverlay, ModalContent, LoginForm, Collapse } from \"@chakra-ui/react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Link as ReachLink } from \"@reach/router\"\r\n\r\nfunction PreviewCard(props) {\r\n    const [show, setShow] = React.useState(false)\r\n\r\n    const handleToggle = () => setShow(!show)\r\n\r\n\r\n    return (\r\n        <Link to={props.linkTo} as={ReachLink}>\r\n            <Box\r\n                maxW=\"md\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                overflow=\"hidden\"\r\n                _hover={{\r\n                    bgGradient: \"linear(to-r, gray.50, teal.50)\",\r\n                }}>\r\n\r\n                <Image\r\n                    h=\"400px\"\r\n                    objectFit=\"cover\"\r\n                    src={props.imageUrl}\r\n                    alt={props.imageAlt} />\r\n                <Box p=\"8\">\r\n                    <Box >\r\n                        <Box\r\n                            color=\"gray.500\"\r\n                            fontWeight=\"bold\"\r\n                            letterSpacing=\"wide\"\r\n                            fontSize=\"xl\"\r\n                            textTransform=\"uppercase\"\r\n                            textAlign=\"center\"\r\n                        >\r\n                            {props.title}\r\n                        </Box>\r\n                        <Collapse in={show}>\r\n                            <Box\r\n                                color=\"black\"\r\n                                fontWeight=\"semi-bold\"\r\n                                letterSpacing=\"wide\"\r\n                                fontSize=\"l\"\r\n                                textTransform=\"uppercase\"\r\n                                textAlign=\"center\"\r\n                            >\r\n                                {props.description}\r\n                            </Box>\r\n                        </Collapse>\r\n                        <Flex>\r\n                            <Box></Box>\r\n                            <Spacer />\r\n                            <Box >\r\n                                <Button size=\"sm\" onClick={handleToggle} mt=\"1rem\">\r\n                                    Show {show ? \"Less\" : \"More\"}\r\n                                </Button>\r\n                            </Box>\r\n                        </Flex>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Link>\r\n    )\r\n}\r\nexport default PreviewCard;","import React from \"react\";\r\nimport { Box, Center, Heading, Divider, Wrap, WrapItem } from \"@chakra-ui/react\";\r\nimport PreviewCard from \"../../components/Assistant/MenuPreviewCard\";\r\n\r\n\r\nfunction AssistantDashboard() {\r\n\r\n    return (\r\n        <>\r\n            <Center w=\"100%\" h=\"100%\" p={4} pb='100px'>\r\n                <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='30px'>\r\n                    <Heading as=\"h2\" size=\"2xl\" ml='20px' mb='20px'>Assitant Dashboard</Heading>\r\n                    <Heading as=\"h4\" size=\"md\" ml='20px' mb='30px' >Sunrise - Hotel Assistant UI</Heading>\r\n                    <Divider />\r\n                    <Wrap spacing='50px' justify=\"center\" mt='20px' mb='10px'>\r\n                        <WrapItem>\r\n                            <PreviewCard\r\n                                imageUrl=\"https://blogmedia.evbstatic.com/wp-content/uploads/wpmulti/sites/8/2017/04/21143242/tourists.jpg\"\r\n                                imageAlt=\"Tourist Couple Picture\"\r\n                                title=\"Tourist Manager \"\r\n                                linkTo=\"/app/tourists\"\r\n                                description=\" Add Tousrists, Delete Tourists, Update Tourists Information and View Activites\"\r\n                            />\r\n                        </WrapItem>\r\n                        <WrapItem>\r\n\r\n                            <PreviewCard\r\n                                imageUrl=\"https://trendipia.com/wp-content/uploads/2017/05/phuket-thailand-beach-800x416.jpeg\"\r\n                                imageAlt=\"Location Picture\"\r\n                                title=\"View Visiting Place\"\r\n                                linkTo=\"/app/visitingPlaces\"\r\n                                description=\" Search Visiting Places\"\r\n                            />\r\n\r\n\r\n                        </WrapItem>\r\n                        <WrapItem>\r\n\r\n                            <PreviewCard\r\n                                imageUrl=\"https://web-static.wrike.com/cdn-cgi/image/width=880,format=auto,q=80/blog/content/uploads/2020/01/Five-Features-of-a-Good-Monthly-Employee-Work-Schedule-Template.jpg?av=unknown\"\r\n                                imageAlt=\"Tourist Couple Picture\"\r\n                                title=\"Schedule Manager\"\r\n                                linkTo=\"/app/schedules\"\r\n                                description=\" View Schedules\"\r\n                            />\r\n\r\n\r\n                        </WrapItem>\r\n\r\n\r\n                    </Wrap>\r\n\r\n\r\n                </Box>\r\n            </Center>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssistantDashboard;","export function ValidateEmail(mail, validation, setValidation, order) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\r\n        val[order] = true;\r\n        error[order] = 'valid';\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }else{\r\n    val[order] = false;\r\n    error[order] = 'You have entered invalid email address';\r\n    setValidation({ validation: val, errorMessage: error })\r\n}\r\n\r\n}\r\n\r\nexport function isRequired(value, validation, setValidation, order, placeholder) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (value !== '') {\r\n        val[order] = true;\r\n        error[order] = 'valid';        \r\n        setValidation({ validation: val, errorMessage: error })\r\n        \r\n    } else {\r\n        val[order] = false;\r\n        error[order] = 'Enter '+placeholder;\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function isNumeric(value, validation, setValidation, order, placeholder) {\r\n    const val = validation.validation;\r\n    const error = validation.errorMessage;\r\n    if (Number(value)) {\r\n        val[order] = true;\r\n        error[order] = 'valid';\r\n        setValidation({ validation: val, errorMessage: error })\r\n    } else {\r\n        val[order] = false;\r\n        error[order] = 'Enter numeric value to '+placeholder;\r\n        setValidation({ validation: val, errorMessage: error })\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Input, Stack, FormControl, Box,\r\n    Heading, InputGroup,\r\n    InputLeftElement, Button, HStack, FormHelperText, useDisclosure, Center,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    VStack,\r\n    Text\r\n} from \"@chakra-ui/react\";\r\nimport { AiOutlineUser, AiOutlinePhone, AiOutlineMail } from \"react-icons/ai\";\r\nimport { CheckCircleIcon, QuestionIcon } from '@chakra-ui/icons'\r\nimport { ValidateEmail, isRequired, isNumeric } from '../../utils/validation';\r\nimport { authHeader } from \"../../services/_helpers/authheader\";\r\n\r\nfunction AddTouristForm(props) {\r\n    const [addedTourist, setAddedTourist] = useState(null)\r\n    const BASE_URL = 'http://localhost:5000';\r\n    const [data, setData] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n\r\n\r\n    });\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [validation, setValidation] = useState({\r\n        validation: [true, true, true, true],\r\n        errorMessage: ['', '', '', '']\r\n    });\r\n    const addTourist = async (data) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var { Authorization, token } = authHeader();\r\n        myHeaders.append(Authorization, token);\r\n        var dataToSend = {\r\n            firstname: data.first_name,\r\n            lastname: data.last_name,\r\n            email: data.email,\r\n            mobile: data.phone\r\n        }\r\n        try {\r\n            var raw = JSON.stringify(dataToSend);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(`${BASE_URL}/tourists`, requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setAddedTourist({ email: result.email, password: result.password });\r\n                    onOpen();\r\n                })\r\n                .catch(error => console.log('error', error));\r\n        } catch (e) {\r\n            console.error(e);\r\n        } finally {\r\n            console.log('We do cleanup here');\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        for (var i = 0; i < validation.validation.length; i++) {\r\n            if ((validation.validation[i] === false) && (validation.errorMessage[i] !== \"valid\")) {\r\n                return\r\n            }\r\n        }\r\n        addTourist(data)\r\n        setData({ ...data, first_name: \"\", last_name: \"\", phone: \"\", email: \"\", roomType: \"\", roomNumber: \"\" })\r\n    }\r\n\r\n    async function handleChange(e) {\r\n        var value = e.target.value;\r\n        var name = e.target.name;\r\n\r\n\r\n        if (name === 'first_name') {\r\n            isRequired(value, validation, setValidation, 0, 'first name');\r\n        } else if (name === 'last_name') {\r\n            isRequired(value, validation, setValidation, 1, 'last name');\r\n        } else if (name === 'email') {\r\n            ValidateEmail(value, validation, setValidation, 2, 'email');\r\n        } else if (name === 'phone') {\r\n            isNumeric(value, validation, setValidation, 3, \"mobile number\")\r\n        }\r\n        setData({ ...data, [e.target.name]: value })\r\n\r\n    };\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']}>\r\n            <Heading as=\"h4\" size=\"md\" textAlign='center' pb='20px' pt='5px'>Add New Customer</Heading>\r\n            <form action='submit' onSubmit={onSubmit}>\r\n                <Stack spacing={4}>\r\n                    <HStack spacing=\"10px\">\r\n                        <FormControl isRequired>\r\n                            <InputGroup>\r\n                                <InputLeftElement\r\n                                    pointerEvents=\"none\"\r\n                                    children={<AiOutlineUser color=\"\" />} />\r\n                                <Input\r\n                                    name=\"first_name\"\r\n                                    value={data.first_name}\r\n                                    placeholder=\"First Name\"\r\n                                    isInvalid={!validation.validation[0]}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </InputGroup>\r\n                            <FormHelperText color='crimson'>{(validation.errorMessage[0] === \"valid\") ? \"\" : validation.errorMessage[0]}</FormHelperText>\r\n                        </FormControl>\r\n\r\n                        <FormControl isRequired>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    name=\"last_name\"\r\n                                    value={data.last_name}\r\n                                    placeholder=\"Last Name\"\r\n                                    isInvalid={!validation.validation[1]}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </InputGroup>\r\n                            <FormHelperText color='crimson'>{(validation.errorMessage[1] === \"valid\") ? \"\" : validation.errorMessage[1]}</FormHelperText>\r\n                        </FormControl>\r\n                    </HStack>\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<AiOutlinePhone color=\"\" />} />\r\n                            <Input\r\n                                name=\"phone\"\r\n                                value={data.phone}\r\n                                isInvalid={!validation.validation[3]}\r\n                                placeholder=\"Mobile Number\"\r\n                                onChange={(e) => handleChange(e)}\r\n                                errorBorderColor=\"crimson\"\r\n                            />\r\n                        </InputGroup>\r\n                        <FormHelperText color='crimson'>{(validation.errorMessage[3] === \"valid\") ? \"\" : validation.errorMessage[3]}</FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<AiOutlineMail color=\"\" />} />\r\n                            <Input\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                isInvalid={!validation.validation[2]}\r\n                                placeholder=\"Email Address\"\r\n                                onChange={(e) => handleChange(e)}\r\n                                errorBorderColor=\"crimson\"\r\n                            />\r\n                        </InputGroup>\r\n                        <FormHelperText color='crimson'>{(validation.errorMessage[2] === \"valid\") ? \"\" : validation.errorMessage[2]}</FormHelperText>\r\n                    </FormControl>\r\n\r\n\r\n\r\n                    <Button colorScheme='cyan' type=\"submit\">Add Customer</Button>\r\n                </Stack>\r\n\r\n            </form>\r\n            <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Center>\r\n                            {addedTourist ?\r\n                                <VStack mb='10px'>\r\n                                    <CheckCircleIcon w={10} h={10} color=\"green.500\" />\r\n                                    <Text>Added Sucessfully</Text>\r\n                                    <Text>{addedTourist.email}</Text>\r\n                                    <Text>{addedTourist.password}</Text>\r\n                                </VStack>\r\n                                :\r\n                                <VStack>\r\n                                    <QuestionIcon w={10} h={10} color=\"red.500\" />\r\n                                    <Text>Unsuccessful</Text>\r\n                                </VStack>\r\n                            }\r\n                        </Center>\r\n\r\n                    </ModalBody>\r\n\r\n\r\n                </ModalContent>\r\n            </Modal>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default AddTouristForm;\r\n","import React,{ useState ,useEffect} from \"react\";\r\nimport {Text,Avatar,HStack,\r\n    Input, Stack, FormControl,\r\n    FormLabel, Select, Box,\r\n    Heading, InputGroup,\r\n    Alert, AlertIcon,\r\n    InputLeftElement,Button, Center,FormHelperText\r\n} from \"@chakra-ui/react\";\r\nimport { AiOutlineUser, AiOutlinePhone, AiOutlineMail } from \"react-icons/ai\";\r\nimport {ValidateEmail, isRequired, isNumeric} from '../../utils/validation';\r\nimport axios from \"axios\";\r\n\r\nfunction EditTourist(props) {\r\n    const [hasError, setHasError] = React.useState(false);\r\n    const [roomData, setRoomData] = React.useState({rooms: [],isFetching:false});\r\n    const [data, setData] = useState({\r\n        first_name: props.first_name,\r\n        last_name: props.last_name,\r\n        phone:props.phone,\r\n        email: props.email,\r\n        roomType: props.roomType,\r\n        roomNumber:props.roomNumber\r\n\r\n    })\r\n\r\n    //* Change form values\r\n    function handleChange(e) {\r\n        var value = e.target.value;\r\n        var name = e.target.name;\r\n        if(name==='first_name'){\r\n            isRequired(value, validation, setValidation, 0, 'first name');\r\n        }else if(name==='last_name'){\r\n            isRequired(value, validation, setValidation, 1, 'last name');\r\n        }else if(name==='email'){\r\n            ValidateEmail(value, validation, setValidation, 2, 'email');\r\n       } else if (name === 'phone') {\r\n           isNumeric(value,validation,setValidation,3,\"mobile number\")\r\n       }      \r\n        setData({ ...data, [e.target.name]: value })        \r\n        \r\n\r\n    }\r\n    //* Submit Change\r\n    const [validation, setValidation] = useState({\r\n        validation:[true,true,true,true],\r\n        errorMessage:['','','','']\r\n    });\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        for (var i = 0; i < validation.validation.length; i++) {\r\n            if ((validation.validation[i] === false) && (validation.errorMessage[i] !== \"valid\")) {\r\n                return\r\n            }\r\n        }\r\n        props.onUpdate(props.id,data)    \r\n    \r\n        \r\n    }\r\n    \r\n    return (\r\n        \r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']}>\r\n            <Heading as=\"h4\" size=\"md\" textAlign='center' pb='20px' pt='5px'>Update Details of { props.touristName}</Heading>\r\n             {hasError ? <Alert status=\"error\" mb='20px' >\r\n                <AlertIcon />\r\n                Error\r\n            </Alert> : null}\r\n            <form action='submit' onSubmit ={onSubmit}>\r\n                <Stack spacing={4}>\r\n                    <Center>\r\n                        <Avatar size=\"2xl\" name=\"Profile photo\" src={props.imageUrl} />\r\n                    </Center>\r\n                     <HStack spacing=\"10px\">\r\n                        <FormControl isRequired>\r\n                            <InputGroup>\r\n                                <InputLeftElement\r\n                                    pointerEvents=\"none\"\r\n                                    children={<AiOutlineUser color=\"\" />} />\r\n                                <Input\r\n                                    name=\"first_name\"\r\n                                    value={data.first_name}\r\n                                    placeholder={props.first_name}\r\n                                    isInvalid={!validation.validation[0]}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </InputGroup>\r\n                            <FormHelperText color='crimson'>{(validation.errorMessage[0] === \"valid\") ? \"\" : validation.errorMessage[0]}</FormHelperText>\r\n\r\n                        </FormControl>\r\n\r\n                        <FormControl isRequired>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    name=\"last_name\"\r\n                                    value={data.last_name}\r\n                                    placeholder={props.last_name}\r\n                                    isInvalid={!validation.validation[1]}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                    errorBorderColor=\"crimson\"\r\n                                />\r\n                            </InputGroup>\r\n                            <FormHelperText color='crimson'>{(validation.errorMessage[1] === \"valid\") ? \"\" : validation.errorMessage[1]}</FormHelperText>\r\n\r\n                        </FormControl>\r\n                    </HStack>\r\n                    <FormControl isRequired>\r\n                        <Text fontSize=\"md\" color=\"gray.500\">Change mobile number</Text>\r\n                        <InputGroup>\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<AiOutlinePhone color=\"\" />} />\r\n                            <Input\r\n                                name=\"phone\"\r\n                                value={data.phone}\r\n                                isInvalid={!validation.validation[3]}\r\n                                placeholder={props.phone}\r\n                                onChange={(e) => handleChange(e)}\r\n                                errorBorderColor=\"crimson\"\r\n                                 />\r\n                        </InputGroup>\r\n                        <FormHelperText color='crimson'>{(validation.errorMessage[3]===\"valid\")?\"\":validation.errorMessage[3]}</FormHelperText>\r\n\r\n                    </FormControl>\r\n                    \r\n                    <FormControl isRequired>\r\n                        <Text fontSize=\"md\" color=\"gray.500\">Change email</Text>\r\n                        <InputGroup>                            \r\n                        <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            children={<AiOutlineMail color=\"\" />} />\r\n                            <Input\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                isInvalid={!validation.validation[2]}\r\n                                placeholder={props.email}\r\n                                onChange={(e) => handleChange(e)}\r\n                                errorBorderColor=\"crimson\"\r\n                                 />\r\n                        </InputGroup>\r\n                        <FormHelperText color='crimson'>{(validation.errorMessage[2] === \"valid\") ? \"\" : validation.errorMessage[2]}</FormHelperText>\r\n\r\n                     </FormControl>\r\n\r\n                    <FormControl id=\"suiteType\" isRequired>\r\n                        <FormLabel>Suite Type</FormLabel>\r\n                        <Select\r\n                            name=\"roomType\"\r\n                            value={data.roomType}\r\n                            placeholder={props.roomType}\r\n                            onChange={(e) => handleChange(e)}\r\n                        >\r\n                            {roomData.isFetching ? <option></option> :\r\n                                roomData.rooms.map((data) => {\r\n                                return (\r\n                                    <option key={data.roomTypeId}>{data.roomType}</option>\r\n                                    \r\n                                )\r\n                            })}\r\n                        </Select>\r\n\r\n                        <FormLabel>Room Number</FormLabel>\r\n                        <Select\r\n                            name=\"roomNumber\"\r\n                            value={data.roomNumber}\r\n                            placeholder={props.roomNumber}\r\n                            onChange={(e)=>handleChange(e)}\r\n                            >\r\n                            {\r\n                                <option>1</option> \r\n                                \r\n                                \r\n                           }\r\n                        </Select>\r\n                        </FormControl>\r\n                    <Button colorScheme='cyan' type=\"submit\">Update Customer</Button>\r\n                </Stack>\r\n                \r\n        </form>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EditTourist;","import React from \"react\";\r\nimport { Box, Image, Badge, Grid, GridItem, Center, Button, useDisclosure, Modal, ModalOverlay, ModalContent, LoginForm, Wrap,WrapItem, HStack } from \"@chakra-ui/react\";\r\nimport { EditIcon, DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { MdDirectionsRun } from \"react-icons/md\";\r\nimport EditTourist from \"./EditTourist.js\";\r\n\r\n\r\nfunction TouristCard(props) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='10px' mb='10px'>\r\n            <Grid h=\"auto\"\r\n                templateColumns=\"repeat(8, 1fr)\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                gap={4}>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 2 }} rowSpan={{ base: 1, md: 3 }} pt='12px'>\r\n                    <Center>\r\n                        <Image src={props.imageUrl} alt={props.imageAlt} borderRadius=\"full\" boxSize=\"120px\" />\r\n                    </Center>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 3 }} rowSpan={{ base: 1, md: 3 }}>\r\n                    <Box p=\"6\">\r\n                        <Box d=\"flex\" alignItems=\"baseline\">\r\n                            <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                                New\r\n                        </Badge>\r\n\r\n                        </Box>                        \r\n                            <Box\r\n                                mt=\"1\"\r\n                                fontWeight=\"semibold\"\r\n                                as=\"h4\"\r\n                                lineHeight=\"tight\"\r\n                                isTruncated\r\n                                \r\n                            >\r\n                            {props.first_name+\" \"+props.last_name}\r\n                            </Box>\r\n                            \r\n\r\n                        <Box>\r\n                            {props.email}\r\n                         \r\n                        </Box>\r\n                        <Box>\r\n                            {props.phone}\r\n                         \r\n                        </Box>\r\n\r\n                    \r\n                        \r\n                    </Box>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 3}} rowSpan={{ base: 1, md: 3 }} pt='50px'>\r\n                    <Wrap spacing=\"30px\">\r\n                        <WrapItem>\r\n                            <Button leftIcon={<MdDirectionsRun />} colorScheme=\"teal\">Activities</Button> \r\n                        </WrapItem>\r\n                        <WrapItem>    \r\n                            <Button leftIcon={<EditIcon />} colorScheme=\"teal\" variant=\"outline\" onClick={onOpen}>Update Details</Button>\r\n                        </WrapItem>    \r\n                        <WrapItem>\r\n                            <Button leftIcon={<DeleteIcon />} colorScheme=\"red\" onClick={()=>props.onDelete(props.id)}>Delete</Button>\r\n                        </WrapItem>\r\n                    </Wrap>\r\n                    <Modal isOpen={isOpen} onClose={onClose}>\r\n                        <ModalOverlay />\r\n                        <ModalContent top='100px'>\r\n                            <EditTourist\r\n                                imageUrl={props.imageUrl}\r\n                                imageAlt={props.imageAlt}\r\n                                id={props.id}\r\n                                first_name={props.first_name}\r\n                                last_name={props.last_name}\r\n                                email={props.email}\r\n                                phone={props.phone}\r\n                                roomNumber={props.roomNumber}\r\n                                roomType={props.roomType} \r\n                                onUpdate={props.onUpdate}\r\n                            />\r\n                        </ModalContent>\r\n                    </Modal>\r\n                \r\n\r\n                \r\n                    \r\n                 </GridItem>\r\n                \r\n\r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default TouristCard;","import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { Input, InputGroup, InputRightElement, IconButton, Box } from \"@chakra-ui/react\";\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <Box w='500px' mb='20px'>\r\n            <InputGroup>\r\n                <InputRightElement>\r\n                    <IconButton colorScheme='teal' aria-label=\"Search database\" icon={<SearchIcon />} />\r\n                </InputRightElement>\r\n\r\n                <Input placeholder={props.text} name='search' value={props.value} onChange={props.onChange} />\r\n\r\n            </InputGroup>\r\n\r\n        </Box>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React, { useEffect, useState } from 'react';\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Center, Heading, Button, useDisclosure, Modal, ModalOverlay, ModalContent } from \"@chakra-ui/react\";\r\nimport AddTouristForm from \"../../components/Forms/AddTouristsForm\";\r\nimport TouristCard from \"../../components/Assistant/TouristsCard\";\r\nimport SearchBar from \"../../components/Assistant/SearchBar\";\r\nimport { touristService } from \"../../services/touristService\";\r\n\r\nfunction TouristsManager() {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [data, setData] = useState([]);\r\n    const [hasError, setErrors] = useState(false);\r\n\r\n    const fetchData = async () => {\r\n        touristService.getTourists()\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    setData(result.tourists);\r\n                } else {\r\n                    setErrors(result.status);\r\n                }\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Button position=\"fixed\" bottom=\"50px\" right=\"50px\" zIndex='1000' leftIcon={<AddIcon />} colorScheme=\"teal\" onClick={onOpen}>\r\n                Add Tourists\r\n        </Button>\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent top='100px'>\r\n                    <AddTouristForm />\r\n                </ModalContent>\r\n            </Modal>\r\n            <Center w=\"100%\" h=\"auto\" p={4} pt='180px' pb='100px'>\r\n                <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='30px'>\r\n                    <Heading ml='20px' mb='20px'>Tourist Manager</Heading>\r\n                    <Center >\r\n                        <SearchBar text='Search Tourists...' />\r\n                    </Center>\r\n                    {data.map((user) => (\r\n                        <TouristCard\r\n                            key={user.id}\r\n                            id={user.id}\r\n                            imageUrl=\"./user.png\"\r\n                            first_name={user.firstname}\r\n                            last_name={user.lastname}\r\n                            email={user.email}\r\n                            phone={user.phone}\r\n\r\n                        />\r\n                    ))}\r\n\r\n                </Box>\r\n            </Center>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TouristsManager;","import React from \"react\";\r\nimport { Box, Text, Badge, Avatar, Stack, SimpleGrid, Divider } from \"@chakra-ui/react\";\r\n\r\n\r\nfunction ScheduleCard(props) {\r\n    var path = [];\r\n    for (var i = 0; i < props.path.length; i++) {\r\n        path.push(\r\n            <>\r\n                <Badge variant=\"outline\" colorScheme=\"cyan\">\r\n                    {props.path[i]}\r\n\r\n                </Badge>\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    var stateBadge = (state) => {\r\n        var color = '';\r\n        if (state === 'completed') {\r\n            color = 'green';\r\n        }\r\n        else if (state === 'not-completed') {\r\n            color = 'orange';\r\n        }\r\n        else if (state === 'cancelled') {\r\n            color = 'red';\r\n        }\r\n        return (\r\n            <Badge variant=\"subtle\" h='20px' colorScheme={color}>\r\n                {state}\r\n            </Badge>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='10px' mb='10px' boxShadow=\"xl\">\r\n            <Stack direction={{ base: \"column\", md: 'row' }} mb='10px'>\r\n                <Badge variant=\"solid\" colorScheme=\"purple\" fontSize=\"20px\">\r\n                    {props.place}\r\n                </Badge>\r\n                {stateBadge(props.state)}\r\n\r\n            </Stack>\r\n\r\n\r\n            <SimpleGrid columns={2} spacing='1px'>\r\n                <Box>\r\n                    <Text fontSize=\"xs\"> Schedule By,</Text>\r\n                    <Text fontSize=\"xs\"><Avatar\r\n                        size=\"xs\"\r\n                        name='user'\r\n                        src='./user.png'\r\n                        mr='5px'\r\n                    />{props.user}</Text>\r\n                </Box>\r\n                <Box>\r\n                    <Text fontSize=\"xs\">Fair</Text>\r\n                    <Text fontSize=\"xl\">{props.fair}</Text>\r\n\r\n                </Box>\r\n            </SimpleGrid>\r\n\r\n            <Divider />\r\n\r\n\r\n            <Text fontSize=\"lg\" mt='10px'>Path</Text>\r\n            <Stack direction={{ base: \"column\", md: 'row' }}>\r\n                {path}\r\n            </Stack>\r\n\r\n\r\n            <SimpleGrid columns={2} spacing='1px'>\r\n                <Box>\r\n                    <Text fontSize=\"lg\" mt='10px'>Travel Method</Text>\r\n                    <Badge variant=\"outline\" colorScheme=\"orange\">\r\n                        {props.travelmethod}\r\n\r\n                    </Badge>\r\n                </Box>\r\n                <Box>\r\n                    <Text fontSize=\"lg\" mt='10px'>Date</Text>\r\n                    <Badge variant=\"outline\" colorScheme=\"blue\">\r\n                        {props.date}\r\n\r\n                    </Badge>\r\n\r\n                </Box>\r\n            </SimpleGrid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nexport default ScheduleCard;","import React from \"react\";\r\nimport { Box, Center, Heading, Wrap, WrapItem,Divider } from \"@chakra-ui/react\";\r\nimport ScheduleCard from \"../../components/Assistant/ScheduleCard\";\r\nimport SearchBar from \"../../components/Assistant/SearchBar\";\r\n\r\nfunction ScheduleManager() {\r\n    return (\r\n        <>\r\n            <Center w=\"100%\" h=\"auto\" p={4} pb='100px'>\r\n                <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='30px'>\r\n                    <Heading ml='20px' mb='20px'>Schedule Manager</Heading>\r\n                    <Center >\r\n                    <SearchBar text='Search Schedules...' />\r\n                    </Center>\r\n                    <Divider/>\r\n                    <Heading as=\"h2\" size=\"lg\" ml='20px' mb='20px' mt='30px'>Schedules</Heading>\r\n                    <Box>\r\n                        <Wrap spacing=\"30px\">\r\n                            <WrapItem>\r\n                                <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n                            </WrapItem>\r\n                             <WrapItem>\r\n                                <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n                            </WrapItem>\r\n                             <WrapItem>\r\n                                <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n                            </WrapItem>\r\n                             <WrapItem>\r\n                                <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n                            </WrapItem>\r\n                             <WrapItem>\r\n                                <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n                            </WrapItem>\r\n                             <WrapItem>\r\n                                <ScheduleCard place='Mirissa' user='Kamal perera' date='2021/01/20' travelmethod='bus' fair='Rs. 200.00' state='completed' path={['Mirissa', 'Galle fort', 'Jungle beach']} />\r\n                            </WrapItem>\r\n                        </Wrap>\r\n                    </Box>\r\n                </Box>\r\n                \r\n            </Center>\r\n                    \r\n            \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default ScheduleManager;","import config from \"../config/config\";\r\nimport { authHeader } from './_helpers/authheader';\r\nimport { getUserId } from \"../utils/\";\r\n\r\n/**\r\n * \r\n * @param {*} data \r\n * @returns {\r\n *   schedules: any;\r\n *   success: boolean;\r\n * } \r\n * @returns {\r\n *  status: string;\r\n *  success: boolean;\r\n * }\r\n */\r\nconst getSchedules = (data) => {\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/schedules`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    schedules: response.schedules,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting schedules\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst getMySchedules = () => {\r\n    var user = getUserId();\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/schedules/user/${user}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    schedules: response.schedules,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting schedules\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} data data to send\r\n */\r\nconst addSchedule = async (data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/schedules`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    schedule: response.schedule,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while adding new schedule\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst getDetailsForSchedule = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/schedules/${id}`, requestOptions)\r\n\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    schedule: response.schedule,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while getting schedule details\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nconst updateDetailsForSchedule = (id, data) => {\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: JSON.stringify(data),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/schedules/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    schedule: response.schedule,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while updating schedule\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nconst deleteASchedule = (id) => {\r\n\r\n    var myHeaders = new Headers();\r\n    var { Authorization, token } = authHeader();\r\n    myHeaders.append(Authorization, token);\r\n\r\n    var requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.apiUrl}/schedules/${id}`, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    schedule: response.schedule,\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Error while deleting schedule\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\nexport const scheduleService = {\r\n    getSchedules,\r\n    getMySchedules,\r\n    addSchedule,\r\n    getDetailsForSchedule,\r\n    updateDetailsForSchedule,\r\n    deleteASchedule\r\n};","import React from 'react';\r\nimport { Box, Badge, Text } from \"@chakra-ui/react\";\r\n\r\nconst ScheduleCard = ({ place, date, travellingMethod, fair, state }) => {\r\n    return (\r\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" my=\"5\">\r\n\r\n            <Box p=\"6\">\r\n                <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                    {state}\r\n                </Badge>\r\n\r\n\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                    isTruncated\r\n                >\r\n                    {place}\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Text>{`On : ${date.split('T')[0]}`}</Text>\r\n                    <Text>{`At : ${date.split('T')[1]}`}</Text>\r\n                    <Text>{`TravellingMethod : ${travellingMethod}`}</Text>\r\n                    {fair && <Text>{`Fair : ${fair}`}</Text>}\r\n                </Box>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ScheduleCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Text,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  Divider,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from '@chakra-ui/react';\r\nimport { Link as ReachLink } from \"@reach/router\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { scheduleService } from \"../../services/scheduleService\";\r\nimport ScheduleCard from \"../../components/Tourist/ScheduleCard\";\r\n\r\nfunction TouristDashboard() {\r\n  const [mySchedules, setmySchedules] = useState([])\r\n  const fetchData = async () => {\r\n    scheduleService.getMySchedules()\r\n      .then((result) => {\r\n        if (result.success) {\r\n          setmySchedules(result.schedules);\r\n        }\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Center w=\"100%\" h=\"auto\" p={4} pb=\"100px\">\r\n        <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"30px\">\r\n          <Heading as=\"h2\" size=\"2xl\" ml=\"20px\" mb=\"20px\">\r\n            Dashboard\r\n          </Heading>\r\n          <Heading as=\"h4\" size=\"md\" ml=\"20px\" mb=\"30px\">\r\n            Sunrise - Hotel Management System\r\n          </Heading>\r\n          <Divider />\r\n          {mySchedules.length == 0 && <AlertBox />}\r\n          {mySchedules.map((schedule, i) => (\r\n            <ScheduleCard \r\n            key={schedule._id}\r\n            place={schedule.place.name} \r\n            date={schedule.date} \r\n            travellingMethod={schedule.travellingMethod} \r\n            fair={schedule.fair} \r\n            state={schedule.state} />\r\n          ))}\r\n        </Box>\r\n      </Center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const AlertBox = () => {\r\n  return (\r\n    <Alert\r\n      status=\"info\"\r\n      variant=\"subtle\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      textAlign=\"center\"\r\n      py=\"5\"\r\n    >\r\n      <AlertIcon boxSize=\"40px\" mr={0} />\r\n      <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n        Looks Like you don't have Any Schedules yet!\r\n  </AlertTitle>\r\n      <AlertDescription maxWidth=\"sm\">\r\n        <Text>Visit Visiting Places Page and Plan Your time</Text>\r\n        <Link to='/app/visitingplaces' as={ReachLink}>\r\n          <Button borderRadius=\"8px\" m=\"5\" py=\"4\" px=\"4\" lineHeight=\"1\" size=\"md\">\r\n            Go to Visiting places\r\n          </Button>\r\n        </Link>\r\n      </AlertDescription>\r\n    </Alert>\r\n  );\r\n}\r\n\r\n\r\nexport default TouristDashboard;\r\n","import React from 'react';\r\nimport ReactMapGL, {\r\n    Marker,\r\n    NavigationControl,\r\n    ScaleControl,\r\n    GeolocateControl\r\n} from 'react-map-gl';\r\nimport {  Box, Text } from \"@chakra-ui/react\";\r\n\r\nimport config from \"../../config/config\";\r\n\r\nconst PreviewMap = (props) => {\r\n    const markers=props.place_locations;\r\n    \r\n    const names=props.place_names;\r\n\r\n    console.log(names)\r\n    const [viewport, setViewport] = React.useState({\r\n        latitude: 6.795165,\r\n        longitude: 79.900616,\r\n        zoom: 7.5,\r\n        pitch: 40,\r\n        bearing: 0\r\n    });\r\n    const geolocateStyle = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const navStyle = {\r\n        position: 'absolute',\r\n        top: 72,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n\r\n    const scaleControlStyle = {\r\n        position: 'absolute',\r\n        bottom: 36,\r\n        left: 0,\r\n        padding: '10px'\r\n    };\r\n    const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\n    const SIZE = 20;\r\n    return (\r\n        <Box boxShadow=\"xl\">\r\n            <ReactMapGL\r\n                mapboxApiAccessToken={config.MAPBOX_ACCESSTOKEN}\r\n                width={'100%'}\r\n                height={400}\r\n                latitude={viewport.latitude}\r\n                longitude={viewport.longitude}\r\n                zoom={viewport.zoom}\r\n                onViewportChange={viewport => setViewport(viewport)}\r\n                {...viewport}\r\n            >\r\n                {markers.map((m, i) => (\r\n                        <Marker {...m} key={i}>\r\n                            <svg\r\n                                height={SIZE}\r\n                                viewBox=\"0 0 24 24\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    fill: '#d00',\r\n                                    stroke: 'none',\r\n                                    transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n                                }}\r\n                            >\r\n                                <path d={ICON} />\r\n                            </svg>\r\n                            <Text color='tomato'>\r\n                            {`${names[i].name}`}\r\n                            </Text>\r\n\r\n                        </Marker>\r\n                    ))\r\n                    }\r\n                <div style={geolocateStyle}>\r\n                    <GeolocateControl />\r\n                </div>\r\n                <div style={navStyle}>\r\n                    <NavigationControl />\r\n                </div>\r\n                <div style={scaleControlStyle}>\r\n                    <ScaleControl />\r\n                </div>\r\n\r\n            </ReactMapGL>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default PreviewMap;","import React, { useState } from \"react\";\r\nimport {\r\n    Input, Text, Radio, RadioGroup, Stack, FormControl, FormHelperText, Button, Heading, Box, Alert, AlertIcon, useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    VStack,\r\n    Center\r\n} from \"@chakra-ui/react\";\r\nimport { CheckCircleIcon, QuestionIcon } from '@chakra-ui/icons';\r\nimport { isRequired } from '../../utils/Validation2';\r\nimport { getUserId } from \"../../utils/\";\r\nimport { authHeader } from \"../../services/_helpers/authheader\";\r\n\r\nconst BASE_URL = 'http://localhost:5000'\r\nfunction AddScheduleForm(props) {\r\n    const [data, setData] = useState({\r\n        user: getUserId(),\r\n        place: props.data.id,\r\n        date: null,\r\n        time: null,\r\n        travellingMethod: null\r\n\r\n    });\r\n    const [validation, setValidation] = useState({\r\n        validation: [true, false, false],\r\n        errorMessage: ['', '', '']\r\n    });\r\n    const handleChange = (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        if (name === 'date') {\r\n            isRequired(value, validation, setValidation, 1, 'date');\r\n        } else if (name === 'time') {\r\n            isRequired(value, validation, setValidation, 2, 'time');\r\n        }\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n    };\r\n    const handleRadioClick = (value) => {\r\n        setData({ ...data, travellingMethod: value })\r\n    }\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [submitResult, setSubmitResult] = useState(null);\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var { Authorization, token } = authHeader();\r\n        myHeaders.append(Authorization, token);\r\n        var dataToSend = {\r\n            user: data.user,\r\n            place: data.place,\r\n            date: `${data.date}T${data.time}:00.000Z`,\r\n            travellingMethod: data.travellingMethod\r\n        }\r\n        try {\r\n            var raw = JSON.stringify(dataToSend);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(`${BASE_URL}/schedules`, requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    if (result.success) {\r\n                        onOpen();\r\n                        setSubmitResult(true);\r\n                    }\r\n                })\r\n                .catch(error => setSubmitResult(false));\r\n        } catch (e) {\r\n            setSubmitResult(false);\r\n        }\r\n    };\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']} >\r\n            <Heading as=\"h4\" size=\"md\" textAlign='center' pb='20px' pt='5px'>\r\n                Schedule Routings\r\n            </Heading>\r\n            <form action='submit' onSubmit={handleSubmit}>\r\n                <Stack spacing={4}>\r\n\r\n                    <Text >Date</Text>\r\n                    <FormControl isRequired>\r\n                        <Input\r\n                            type='date'\r\n                            value={data.date}\r\n                            name='date'\r\n                            placeholder='Date'\r\n                            aria-label='Date'\r\n                            isInvalid={validation.validation[1]}\r\n                            onChange={(event) => handleChange(event)}\r\n                            errorBorderColor=\"crimson\"\r\n                        />\r\n                        <FormHelperText color='crimson'>{validation.errorMessage[1]}</FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <Text >Time</Text>\r\n                    <FormControl isRequired>\r\n                        <Input\r\n                            type='time'\r\n                            value={data.time}\r\n                            name='time'\r\n                            placeholder='Time'\r\n                            aria-label='Time'\r\n                            isInvalid={validation.validation[2]}\r\n                            onChange={(event) => handleChange(event)}\r\n                            errorBorderColor=\"crimson\"\r\n                        />\r\n                        <FormHelperText color='crimson'>{validation.errorMessage[2]}</FormHelperText>\r\n                    </FormControl>\r\n                    <RadioGroup onChange={handleRadioClick} value={data.travellingMethod}>\r\n                        <Stack direction=\"row\">\r\n                            {props.data.methods.map(method => <Radio value={method}>{method}</Radio>)}\r\n                        </Stack>\r\n                    </RadioGroup>\r\n                    <Button colorScheme='cyan' type=\"submit\" >Save</Button>\r\n\r\n                </Stack>\r\n            </form>\r\n            <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Center>\r\n                            {submitResult ?\r\n                                <VStack mb='10px'>\r\n                                    <CheckCircleIcon w={10} h={10} color=\"green.500\" />\r\n                                    <Text>Added Sucessfully</Text>\r\n                                </VStack>\r\n                                :\r\n                                <VStack>\r\n                                    <QuestionIcon w={10} h={10} color=\"red.500\" />\r\n                                    <Text>Unsuccessful</Text>\r\n                                </VStack>\r\n                            }\r\n                        </Center>\r\n\r\n                    </ModalBody>\r\n\r\n\r\n                </ModalContent>\r\n            </Modal>\r\n        </Box>\r\n    );\r\n}\r\nexport default AddScheduleForm;","import {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport AddScheduleForm from \"../Forms/AddScheduleForm\";\r\n\r\nconst AddToScheduleArea = (props) => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    return (\r\n        <>\r\n            <Button colorScheme=\"teal\" onClick={onOpen}>Add To Schedule</Button>\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <AddScheduleForm data={props.data}/>\r\n                    </ModalBody>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddToScheduleArea;\r\n","import React from \"react\";\r\nimport {\r\n    Text, Stack, Heading, Box,  Badge,  Image, Button,HStack,Center\r\n    \r\n} from \"@chakra-ui/react\";\r\nimport PreviewMap from \"./PreviewMap\";\r\nimport AddToScheduleArea from \"./AddToScheduleArea\";\r\n\r\n\r\nfunction VisitingPlacePreview(props) {\r\n    const data=props.data;    \r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']}>                \r\n            \r\n                <Heading as=\"h4\" size=\"lg\" textAlign='center' pb='20px' pt='5px'>\r\n                    {data.placeName}\r\n                </Heading>\r\n                <Box shadow=\"xl\" mb='20px' >\r\n                    <Image src={data.imageUrl} alt='photo' rounded=\"md\" />\r\n                </Box>\r\n                \r\n\r\n            <Stack spacing={3}>\r\n                <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' >\r\n                        <Text fontSize=\"3xl\" >Description</Text>\r\n                        <Text>{data.description}</Text>\r\n                    </Box>\r\n                \r\n                    <Box>\r\n                        <PreviewMap place_locations={[{latitude:data.latitude,longitude:data.longitude}]} place_names={[{name:data.placeName}]}/>\r\n                    </Box>\r\n\r\n                \r\n\r\n                    <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' >\r\n                        <Text fontSize=\"2xl\" >Distance\r\n\r\n                        <Badge ml=\"1\" fontSize=\"0.8em\" colorScheme=\"green\" variant='outline'>\r\n                                {data.distance} km\r\n                            </Badge>\r\n                        </Text>\r\n\r\n                    </Box>\r\n                \r\n                    <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' >\r\n                        <Text fontSize=\"2xl\">Travelling Method\r\n                            \r\n                        {data.methods.map((method, i) => (\r\n                            <Badge m='3px' borderRadius=\"full\" px=\"2\" colorScheme=\"orange\">\r\n                                {method}\r\n                            </Badge>\r\n                        ))\r\n                        }\r\n                        </Text>\r\n\r\n                    </Box>\r\n                \r\n                    <Box shadow=\"xl\" p='10px' rounded=\"md\" mb='10px' >\r\n                        <Text fontSize=\"2xl\">Time to Reach\r\n                    <Badge ml=\"1\" fontSize=\"0.8em\" colorScheme=\"red\" variant='outline'>\r\n                                {data.timeToReach} min\r\n                            </Badge>\r\n                        </Text>\r\n\r\n                    </Box>\r\n                    \r\n                        <AddToScheduleArea data={data}/>\r\n\r\n\r\n\r\n                    \r\n\r\n            </Stack>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default VisitingPlacePreview;","import React from \"react\";\r\nimport { Box, Image, Badge, Grid, GridItem, Center, Button, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, Lorem, ModalFooter, useDisclosure, Text } from \"@chakra-ui/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport VisitingPlacePreview from './VisitingPlacePreview';\r\n\r\nfunction VisitingPlaceCard(props) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    return (\r\n        <Box width='auto' borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" p='10px' mb='10px'>\r\n            <Grid h=\"auto\"\r\n                templateColumns=\"repeat(8, 1fr)\"\r\n                templateRows=\"repeat(3, 1fr)\"\r\n                gap={4}>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 2 }} rowSpan={{ base: 1, md: 3 }} pt='12px'>\r\n                    <Center>\r\n                        <Image src={props.imageUrl} alt='place name' />\r\n                    </Center>\r\n\r\n                </GridItem>\r\n\r\n                <GridItem colSpan={{ base: 8, md: 5 }} rowSpan={{ base: 1, md: 3 }}>\r\n                    <Box p=\"6\">\r\n                        <Box d=\"flex\" alignItems=\"baseline\">\r\n                            <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                                New\r\n                        </Badge>\r\n\r\n                        </Box>\r\n\r\n                        <Box\r\n                            mt=\"1\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated\r\n                        >\r\n                            <Text fontSize='3xl'>{props.placeName}</Text>\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            {props.distance} km from the hotel\r\n                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            {props.timeToReach} min journey\r\n                            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\r\n                            <Text fontSize='sm'>Travel by :</Text>\r\n                            {props.methods.map((method, i) => (\r\n                                <Badge m='3px' borderRadius=\"full\" px=\"2\" colorScheme=\"orange\">\r\n                                    {method}\r\n                                </Badge>\r\n                            ))\r\n                            }\r\n                        </Box>\r\n                    </Box>\r\n\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 8, md: 1 }} rowSpan={{ base: 1, md: 3 }} pt='50px'>\r\n                    <Button rightIcon={<ArrowForwardIcon />} colorScheme=\"teal\" variant=\"outline\" onClick={onOpen}>Details</Button>\r\n\r\n                    <Modal isOpen={isOpen} onClose={onClose} size=\"4xl\" >\r\n                        <ModalOverlay />\r\n\r\n                        <ModalContent >\r\n                            <ModalCloseButton />\r\n                            <VisitingPlacePreview data={props} close={onClose} />\r\n                        </ModalContent>\r\n                    </Modal>\r\n\r\n                </GridItem>\r\n\r\n\r\n            </Grid>\r\n\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nVisitingPlaceCard.defaultProps = {\r\n    role: 'user'\r\n}\r\nexport default VisitingPlaceCard;","import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { Input, InputGroup, InputRightElement, IconButton, Box } from \"@chakra-ui/react\";\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <Box w='500px' mb='20px'>\r\n            <InputGroup>\r\n                <InputRightElement>\r\n                    <IconButton colorScheme='teal' aria-label=\"Search database\" icon={<SearchIcon />} onClick={props.onClick}/>\r\n                </InputRightElement>\r\n\r\n                <Input placeholder={props.text} name='search' value={props.value} onChange={props.onChange} />\r\n\r\n            </InputGroup>\r\n\r\n        </Box>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Center, Heading, Button, ReactRouterLink, Text } from \"@chakra-ui/react\";\r\nimport VisitingPlaceCard from \"../../components/Tourist/VisitingPlaceCard\";\r\nimport SearchBar from \"../../components/Tourist/SearchBar\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { visitingPlaceService } from \"../../services/visitingplaceService\";\r\n\r\nfunction VisitingPlaces() {\r\n    const [visitingPlaces, setVisitingPlaces] = useState([]);\r\n    const [hasError, setErrors] = useState(false);\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleChange = (event)=>{    \r\n        var value = event.target.value;\r\n        setSearch(value);\r\n        searchData({similarTo: value});\r\n \r\n\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        visitingPlaceService.getVisitingPlaces()\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    setVisitingPlaces(result.visitingPlaces);\r\n                } else {\r\n                    setErrors(result.status);\r\n                }\r\n            });\r\n    }\r\n    const searchData = async (quary) => {\r\n        visitingPlaceService.getVisitingPlacesByName(quary)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    setVisitingPlaces(result.visitingPlaces);\r\n                } else {\r\n                    setErrors(result.status);\r\n                }\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n    return (\r\n        <>\r\n            <Button position=\"fixed\" bottom=\"50px\" right=\"50px\" zIndex='1000' leftIcon={<AddIcon />} colorScheme=\"teal\">\r\n                <Link as={ReactRouterLink} to='/addvisitingplace'>Add Visiting Place</Link>\r\n            </Button>\r\n            <Center w=\"100%\" h=\"auto\" p={4}  pb='300px'>\r\n                <Box w=\"90%\" h=\"auto\" borderWidth=\"1px\" borderRadius=\"lg\" p='10px'>\r\n                    <Heading ml='20px' mb='20px'>Visiting Places</Heading>\r\n                    <Center >\r\n                        <SearchBar text='Search visiting place...' value={search} onChange={(event)=>handleChange(event)}/>\r\n                    </Center>\r\n                    {visitingPlaces.length === 0 ? <Box p='15px' bg='red.200' borderRadius='lg'><Text fontSize='sm' color=\"yellow.800\">No visiting places</Text></Box>:null}\r\n                    {visitingPlaces.map((place, i) => (\r\n                        <VisitingPlaceCard\r\n                            id={place._id}\r\n                            placeName={place.name}\r\n                            description={place.description}\r\n                            latitude={place.location.coordinates[0]}\r\n                            longitude={place.location.coordinates[1]}\r\n                            distance={place.distance}\r\n                            methods={place.travellingMethods}\r\n                            timeToReach={place.timeToReach}\r\n                            imageUrl='./1.jpg'\r\n                            fetch={fetchData}\r\n                        />\r\n                    ))\r\n                    }\r\n\r\n                </Box>\r\n\r\n            </Center>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default VisitingPlaces;","import { Roles } from '../config'\n\n// Components\n//Admin\nimport AdminDashboard from \"../pages/Admin/Dashboard\";\nimport VisitingPlaces from '../pages/Admin/VisitingPlaces';\nimport Tourists from '../pages/Admin/Tourists';\nimport Assistents from '../pages/Admin/Assistents';\n//Assistant\nimport AssistantDashboard from \"../pages/Assistant/AssistantDashboard\";\nimport TouristsManager from \"../pages/Assistant/TouristsManager\";\nimport ScheduleManager from \"../pages/Assistant/ScheduleManager\";\n//Tourist\nimport TouristDashboard from \"../pages/Tourist/Dashboard\";\nimport TouristVisitingPlaces from '../pages/Tourist/VisitingPlaces';\n\nexport default [\n\t//Admin Routes\n\t{\n\t\tcomponent: AdminDashboard,\n\t\tpath: '/',\n\t\ttitle: 'Dashboard',\n\t\texact: true,\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t],\n\t},\n\t{\n\t\tcomponent: VisitingPlaces,\n\t\tpath: '/visitingplaces',\n\t\ttitle: 'Visiting Palces',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t],\n\t},\n\t{\n\t\tcomponent: Assistents,\n\t\tpath: '/assistants',\n\t\ttitle: 'Assistants',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t],\n\t},\n\t{\n\t\tcomponent: Tourists,\n\t\tpath: '/tourists',\n\t\ttitle: 'Tourists',\n\t\tpermission: [\n\t\t\tRoles.SUPER_ADMIN,\n\t\t\tRoles.ADMIN,\n\t\t],\n\t},\n\t//Assistant Routes\n\t{\n\t\tcomponent: TouristsManager,\n\t\tpath: '/tourists',\n\t\ttitle: 'Tourists',\n\t\tpermission: [\n\t\t\tRoles.ASSISTANT\n\t\t],\n\t}, \n\t{\n\t\tcomponent: ScheduleManager,\n\t\tpath: '/schedules',\n\t\ttitle: 'Schedules',\n\t\tpermission: [\n\t\t\tRoles.ASSISTANT\n\t\t],\n\t},\n\t{\n\t\tcomponent: AssistantDashboard,\n\t\tpath: '/',\n\t\ttitle: 'Dashboard',\n\t\tpermission: [\n\t\t\tRoles.ASSISTANT\n\t\t],\n\t},\n\t//Tourist Routes\n\t{\n\t\tcomponent: TouristVisitingPlaces,\n\t\tpath: '/visitingplaces',\n\t\ttitle: 'Visiting Places',\n\t\tpermission: [\n\t\t\tRoles.CUSTOMER\n\t\t],\n\t},\n\t{\n\t\tcomponent: TouristDashboard,\n\t\tpath: '/',\n\t\ttitle: 'Dashboard',\n\t\tpermission: [\n\t\t\tRoles.CUSTOMER\n\t\t],\n\t},\n\t\n\n]\n","import React from 'react';\n\nconst CenterToScreen = (Component) => (props) => {\n\treturn (\n\t\t<div className=\"center-to-screen\">\n\t\t\t<Component {...props} />\n\t\t</div>\n\t);\n};\n\nexport default CenterToScreen;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Jumbotron } from 'react-bootstrap';\nimport { CenterToScreen } from './hoc';\n\nconst JumbotronWrapper = (props) => {\n\treturn (\n\t\t<Col {...props.col}>\n\t\t\t<Jumbotron>\n\t\t\t\t<h1>{props.title}</h1>\n\t\t\t\t<p>{props.description}</p>\n\t\t\t\t<div style={{color: '#0056b3'}}>{props.children}</div>\n\t\t\t</Jumbotron>\n\t\t</Col>\n\t);\n};\n\nJumbotronWrapper.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tdescription: PropTypes.string,\n\tcol: PropTypes.object,\n};\n\nJumbotronWrapper.defaultProps = {\n\tdescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`,\n\tcol: { md: '6' }\n};\n\nexport default memo(CenterToScreen(JumbotronWrapper));\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n\tFlex,\n\tBox,\n\tHeading,\n\tText,\n\tButton,\n\tStack,\n\tHStack,\n\tStackDivider,\n} from \"@chakra-ui/react\";\nimport { isLoggedIn } from '../../utils';\n\nfunction TopNav(props) {\n\tlet history = useHistory();\n\n\tfunction handleLogout() {\n\t\tlocalStorage.removeItem('token');\n\t\thistory.push('/');\n\t}\n\n\treturn (\n\t\t<Flex\n\t\t\twidth=\"full\"\n\t\t\tmb={4}\n\t\t>\n\t\t\t<Box width=\"full\" boxShadow=\"lg\">\n\t\t\t\t<Stack isInline justifyContent=\"space-between\" px={8}>\n\t\t\t\t\t<LogoName />\n\t\t\t\t\t<Stack isInline justifyContent=\"space-between\" mt={4} align=\"center\">\n\t\t\t\t\t\t<HStack divider={<StackDivider borderColor=\"gray.200\" />}>\n\t\t\t\t\t\t\t{props.routes.map(({ path, title }) => (\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\t\t\t\tfontSize=\"20px\"\n\t\t\t\t\t\t\t\t\tfontWeight=\"bold\"\n\t\t\t\t\t\t\t\t\tfontFamily={\"Agustina Regular\"}\n\t\t\t\t\t\t\t\t\tmb={{ base: 8, sm: 0 }}\n\t\t\t\t\t\t\t\t\tmr={{ base: 0, sm: 8 }}\n\t\t\t\t\t\t\t\t\tdisplay=\"block\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Link key={path} className=\"w3-bar-item\" to={`${props.prefix}${path}`}>\n\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{isLoggedIn() && <Button onClick={handleLogout}>Logout</Button>}\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</Box>\n\t\t</Flex>\n\t);\n}\n\nTopNav.propTypes = {\n\troutes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tpath: PropTypes.string.isRequired,\n\t\t\ttitle: PropTypes.string.isRequired\n\t\t})\n\t).isRequired,\n\tprefix: PropTypes.string,\n\tclassName: PropTypes.string\n};\n\nTopNav.defaultProps = {\n\tprefix: '',\n\tclassName: ''\n};\n\nconst LogoName = () => {\n\treturn (\n\t\t<Heading\n\t\t\tas=\"h1\"\n\t\t\tsize=\"xlg\"\n\t\t\tletterSpacing={\".1rem\"}\n\t\t\tfontSize=\"50px\"\n\t\t\tfontFamily={\"Agustina Regular\"}\n\t\t>\n\t\t\tSunRise\n\t\t</Heading>\n\t);\n};\n\n\n\nexport default memo(TopNav);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport JumbotronWrapper from './JumbotronWrapper';\n\nconst NotFound = (props) => (\n\t<JumbotronWrapper {...props.jumbotronProps}>\n\t\t{props.children}\n\t</JumbotronWrapper>\n);\n\nNotFound.propTypes = {\n\tjumbotronProps: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tdescription: PropTypes.string\n\t})\n};\n\nNotFound.defaultProps = {\n\tjumbotronProps: {\n\t\ttitle: '404 not found'\n\t},\n\tchildren: (<Link to=\"/\">Back to home</Link>)\n};\n\nexport default memo(NotFound);\n","import React, { memo } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { NotFound } from '../components/common';\n\nfunction MapAllowedRoutes({routes, basePath, isAddNotFound}) {\n\tconst match = useRouteMatch(basePath);\n\treturn (\n\t\t<Switch>\n\t\t\t{routes.map((route) => {\n\t\t\t\tconst { path, component: Component, children, title, permission, ...rest } = route;\n\n\t\t\t\treturn (\n\t\t\t\t\t<Route {...rest} key={path} path={`${match.path}${path}`}>\n\t\t\t\t\t\t<Component children={children} />\n\t\t\t\t\t</Route>\n\t\t\t\t)\n\t\t\t})}\n\t\t\t{isAddNotFound && <Route><NotFound /></Route>}\n\t\t</Switch>\n\t)\n}\n\nexport default memo(MapAllowedRoutes);\n","import React, { Fragment } from 'react';\nimport { Redirect, useRouteMatch } from 'react-router-dom';\nimport { getAllowedRoutes, isLoggedIn } from '../utils';\nimport { PrivateRoutesConfig } from '../config';\nimport { TopNav } from '../components/common';\nimport MapAllowedRoutes from '../routes/MapAllowedRoutes';\n\nfunction PrivateRoutes() {\n\tconst match = useRouteMatch('/app');\n\tlet allowedRoutes = [];\n\n\tif (isLoggedIn()) allowedRoutes = getAllowedRoutes(PrivateRoutesConfig);\n\telse return <Redirect to=\"/\" />;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<TopNav routes={allowedRoutes} prefix={match.path} className=\"bg-white\" />\n\t\t\t<MapAllowedRoutes routes={allowedRoutes} basePath=\"/app\" isAddNotFound />\n\t\t</Fragment>\n\t);\n}\n\nexport default PrivateRoutes;\n","import { Box, Center, Text, Heading, Button, SlideFade, VStack, } from \"@chakra-ui/react\";\nimport React, { memo } from 'react';\nimport { Link as ReachLink } from \"@reach/router\"\nimport { Link } from \"react-router-dom\";\nimport './Landing.css';\nfunction LandingPage({\n\ttitle,\n\tsubtitle1,\n\tsubtitle2,\n\t...rest }) {\n\treturn (\n\t\t<>\n\n\t\t\t<div className='landing'>\n\n\t\t\t\t<Center pt='35vh'>\n\t\t\t\t\t<VStack w={{ base: \"80%\", md: \"40%\" }}>\n\t\t\t\t\t\t<SlideFade offsetY='-100px' in={true}>\n\t\t\t\t\t\t\t<Text fontSize={{ base: '4xl', sm: '6xl' }} color='white'>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</SlideFade>\n\n\t\t\t\t\t\t<SlideFade offsetY='-10px' in={true}>\n\t\t\t\t\t\t\t<Text fontSize={{ base: 'md', sm: 'xl' }} color='teal.300' mb='20px'>\n\t\t\t\t\t\t\t\t{subtitle1}                        </Text>\n\t\t\t\t\t\t</SlideFade>\n\n\n\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\tas=\"h2\"\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tcolor=\"primary.800\"\n\t\t\t\t\t\t\topacity=\"0.8\"\n\t\t\t\t\t\t\tfontWeight=\"normal\"\n\t\t\t\t\t\t\tlineHeight={1.5}\n\t\t\t\t\t\t\ttextAlign={[\"center\", \"center\", \"left\", \"left\"]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SlideFade offsetY='-10px' in={true}>\n\t\t\t\t\t\t\t\t<Text color='teal.100' mb='20px' fontSize='sm'>\n\t\t\t\t\t\t\t\t\t{subtitle2}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</SlideFade>\n\t\t\t\t\t\t</Heading>\n\n\t\t\t\t\t\t<SlideFade offsetY='100px' in={true}>\n\t\t\t\t\t\t\t<Link to='/login' as={ReachLink}>\n\t\t\t\t\t\t\t\t<Button borderRadius=\"8px\" py=\"4\" px=\"4\" lineHeight=\"1\" size=\"md\">\n\t\t\t\t\t\t\t\t\tLogin\n          \t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</SlideFade>\n\n\t\t\t\t\t</VStack>\n\t\t\t\t</Center>\n\n\t\t\t\t<Box color='teal' position='fixed' bottom='0px' w='100%'>\n\t\t\t\t\t<Center><Text color='teal.100' fontSize={{ base: 'xs', sm: 'md' }}>Designed by University of Moratuwa | 2020 All Rights Reserved</Text></Center>\n\t\t\t\t</Box>\n\n\t\t\t</div>\n\t\t</>\n\t)\n}\nLandingPage.defaultProps = {\n\ttitle: \"Welcome\",\n\tsubtitle1: \"Sunrise - Hotel Management System\",\n\tsubtitle2: \"Plan ahead with guaranteed flexibility\",\n};\nexport default memo(LandingPage);\n","import { authHeader } from \"./_helpers/authheader\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport config from \"../config/config\";\r\n\r\nconst login = (creds) => {\r\n\r\n    return fetch(`${config.apiUrl}/users/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username: creds.email, password: creds.password })\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                localStorage.setItem('token', response.token);\r\n                return {\r\n                    status: \"Login Successful!\",\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Login Unsuccessful!\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    var { Authorization, token } = authHeader();\r\n    localStorage.removeItem('token');\r\n    return fetch(`${config.apiUrl}/users/logout`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            if (response.success) {\r\n                return {\r\n                    status: \"Logout Successful!\",\r\n                    success: true\r\n                }\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch(error => {\r\n            return {\r\n                status: \"Logout Unsuccessful!\",\r\n                success: false\r\n            }\r\n\r\n        });\r\n}\r\n\r\nfunction userData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n        const data = jwt_decode(token);\r\n        return { id: data._id, role: data.role };\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const authenticationService = {\r\n    login,\r\n    logout,\r\n    userData\r\n};","import React, { useState } from \"react\";\r\nimport { Input, InputGroup, Stack, InputLeftElement, FormControl, Button, Heading, Box, Alert, AlertIcon, InputRightElement, FormHelperText } from \"@chakra-ui/react\";\r\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\";\r\nimport { isRequired, ValidateEmail } from '../../utils/validation';\r\nimport { authenticationService } from \"../../services/authenticationService\";\r\n\r\nfunction LoginForm({ handleLoginSuccess}) {\r\n\r\n    const [hasError, setHasError] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [validation, setValidation] = useState({\r\n        validation: [false, false],\r\n        errorMessage: ['', '']\r\n    });\r\n\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleLoginFail=()=>{\r\n        setHasError(true);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            authenticationService.login(data)\r\n                .then((result) => {\r\n                    if (result.success) {\r\n                        handleLoginSuccess();\r\n                    } else {\r\n                        handleLoginFail();\r\n                    }\r\n                });\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        var value = event.target.value;\r\n        var name = event.target.name;\r\n\r\n        if (name === 'email') {\r\n            ValidateEmail(value, validation, setValidation, 0, 'email');\r\n        }\r\n        else if (name === 'password') {\r\n            isRequired(value, validation, setValidation, 1, 'password');\r\n        }\r\n\r\n\r\n        setData({ ...data, [event.target.name]: value })\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <Box border=\"1px\" borderColor=\"gray.200\" p={['5px', '15px', '25px']}>\r\n            <Heading as=\"h4\" size=\"md\" textAlign='center' pb='20px' pt='5px'>\r\n                Log In\r\n            </Heading>\r\n            {hasError ? <Alert status=\"error\" mb='20px' >\r\n                <AlertIcon />\r\n                Error while Login!!\r\n            </Alert> : null}\r\n            <form action='submit'>\r\n                <Stack spacing={3}>\r\n\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            <InputLeftElement children={<EmailIcon />} />\r\n                            <Input\r\n                                type='email'\r\n                                value={data.email}\r\n                                placeholder='Email'\r\n                                aria-label='Email'\r\n                                name='email'\r\n                                onChange={(event) => handleChange(event)}\r\n                                isInvalid={validation.validation[0]}\r\n                                errorBorderColor={validation.validation[0] ? \"green.300\":\"crimson\"} />\r\n\r\n                        </InputGroup>\r\n                        <FormHelperText color={validation.validation[0] ? \"green.300\":\"crimson\"}>{validation.errorMessage[0]}</FormHelperText>\r\n\r\n                    </FormControl>\r\n\r\n\r\n                    <FormControl isRequired>\r\n                        <InputGroup>\r\n                            <InputLeftElement children={<LockIcon />} />\r\n                            <Input\r\n                                type={show ? \"text\" : \"password\"}\r\n                                value={data.password}\r\n                                placeholder='Password'\r\n                                aria-label='Password'\r\n                                name='password'\r\n                                onChange={(event) => handleChange(event)}\r\n                                isInvalid={validation.validation[1]}\r\n                                errorBorderColor={validation.validation[1] ? \"green.300\":\"crimson\"}\r\n                            />\r\n                            <InputRightElement width=\"4.5rem\">\r\n                                <Button h=\"1.75rem\" size=\"sm\" onClick={() => setShow(!show)}>\r\n                                    {show ? \"Hide\" : \"Show\"}\r\n                                </Button>\r\n                            </InputRightElement>\r\n\r\n                        </InputGroup>\r\n                        <FormHelperText color={validation.validation[0] ? \"green.300\":\"crimson\"}>{validation.errorMessage[1]}</FormHelperText>\r\n\r\n                    </FormControl>\r\n\r\n\r\n                    <Button colorScheme='teal' type=\"button\" onClick={handleSubmit}>Log In</Button>\r\n\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { memo, } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport LoginForm from \"../components/Forms/LoginForm\";\n\nfunction LoginPage() {\n\tlet history = useHistory();\n\n\tfunction handleLoginSuccess() {\n\t\t// localStorage.setItem('roles', JSON.stringify(selected));\n\t\thistory.push('/app');\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<LoginForm handleLoginSuccess={handleLoginSuccess}/>\n\t\t</>\n\t);\n}\n\nexport default memo(LoginPage);\n","import React, { Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { LoginPage, LandingPage } from '../components';\n\nfunction PublicRoutes() {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t<LoginPage />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<LandingPage />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Fragment>\n\t)\n}\n\nexport default PublicRoutes;\n","import React, { memo } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../utils';\nimport PublicRoutes from './PublicRoutes';\n\nfunction Auth() {\n\treturn isLoggedIn() ? (\n\t\t\t<Redirect to=\"/app\" />\n\t\t) : (\n\t\t\t<PublicRoutes />\n\t\t)\n}\n\nexport default memo(Auth);\n","import React, { memo } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from '../utils/history';\nimport PrivateRoutes from './PrivateRoutes';\nimport Auth from './Auth';\n\nfunction Routes() {\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/app\">\n\t\t\t\t\t<PrivateRoutes />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Auth />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}\n\nexport default memo(Routes);\n\n","import React, { Component } from 'react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport Routes from './routes';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ChakraProvider>\n\t\t\t\t<Routes />\n\t\t\t</ChakraProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}